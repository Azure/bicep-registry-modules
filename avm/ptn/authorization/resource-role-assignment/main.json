{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "12137155538756504441"
    },
    "name": "ResourceRole Assignments (All scopes)",
    "description": "This module deploys a Role Assignment for a specific resource.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "Required. The scope for the role assignment, fully qualified resourceId."
      }
    },
    "name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The unique guid name for the role assignment."
      }
    },
    "roleDefinitionId": {
      "type": "string",
      "metadata": {
        "description": "Required. The role definition ID for the role assignment."
      }
    },
    "roleName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The name for the role, used for logging."
      }
    },
    "principalId": {
      "type": "string",
      "metadata": {
        "description": "Required. The Principal or Object ID of the Security Principal (User, Group, Service Principal, Managed Identity)."
      }
    },
    "principalType": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "ServicePrincipal",
        "Group",
        "User",
        "ForeignGroup",
        "Device",
        ""
      ],
      "metadata": {
        "description": "Optional. The principal type of the assigned principal ID."
      }
    },
    "description": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The description of role assignment."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    }
  },
  "variables": {
    "tFile": "ewogICAgIiRzY2hlbWEiOiAiaHR0cHM6Ly9zY2hlbWEubWFuYWdlbWVudC5henVyZS5jb20vc2NoZW1hcy8yMDE5LTA0LTAxL2RlcGxveW1lbnRUZW1wbGF0ZS5qc29uIyIsCiAgICAiY29udGVudFZlcnNpb24iOiAiMS4wLjAuMCIsCiAgICAicGFyYW1ldGVycyI6IHsKICAgICAgICAic2NvcGUiOiB7CiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJuYW1lIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAicm9sZURlZmluaXRpb25JZCI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInByaW5jaXBhbElkIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAicHJpbmNpcGFsVHlwZSI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgImFsbG93ZWRWYWx1ZXMiOiBbCiAgICAgICAgICAgICAgICAiRGV2aWNlIiwKICAgICAgICAgICAgICAgICJGb3JlaWduR3JvdXAiLAogICAgICAgICAgICAgICAgIkdyb3VwIiwKICAgICAgICAgICAgICAgICJTZXJ2aWNlUHJpbmNpcGFsIiwKICAgICAgICAgICAgICAgICJVc2VyIiwKICAgICAgICAgICAgICAgICIiCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJkZWZhdWx0VmFsdWUiOiAiIiwKICAgICAgICAgICAgIm1ldGFkYXRhIjogewogICAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIk9wdGlvbmFsLiBUaGUgcHJpbmNpcGFsIHR5cGUgb2YgdGhlIGFzc2lnbmVkIHByaW5jaXBhbCBJRC4iCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJkZXNjcmlwdGlvbiI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgIH0sCiAgICAicmVzb3VyY2VzIjogWwogICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiTWljcm9zb2Z0LkF1dGhvcml6YXRpb24vcm9sZUFzc2lnbm1lbnRzIiwKICAgICAgICAgICAgImFwaVZlcnNpb24iOiAiMjAyMi0wNC0wMSIsCiAgICAgICAgICAgICJzY29wZSI6ICJbcGFyYW1ldGVycygnc2NvcGUnKV0iLAogICAgICAgICAgICAibmFtZSI6ICJbcGFyYW1ldGVycygnbmFtZScpXSIsCiAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICAgInJvbGVEZWZpbml0aW9uSWQiOiAiW3BhcmFtZXRlcnMoJ3JvbGVEZWZpbml0aW9uSWQnKV0iLAogICAgICAgICAgICAgICAgInByaW5jaXBhbElkIjogIltwYXJhbWV0ZXJzKCdwcmluY2lwYWxJZCcpXSIsCiAgICAgICAgICAgICAgICAicHJpbmNpcGFsVHlwZSI6ICJbcGFyYW1ldGVycygncHJpbmNpcGFsVHlwZScpXSIsCiAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiW3BhcmFtZXRlcnMoJ2Rlc2NyaXB0aW9uJyldIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgXSwKICAgICJvdXRwdXRzIjogewogICAgICAgICJyb2xlQXNzaWdubWVudElkIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAidmFsdWUiOiAiW2V4dGVuc2lvblJlc291cmNlSWQocGFyYW1ldGVycygnc2NvcGUnKSwgJ01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3JvbGVBc3NpZ25tZW50cycsIHBhcmFtZXRlcnMoJ25hbWUnKSldIgogICAgICAgIH0KICAgIH0KfQ=="
  },
  "resources": [
    {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2023-07-01",
      "name": "[format('46d3xbcp.ptn.authorization-resourceroleassignment.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}-ResourceRoleAssignment', guid(parameters('resourceId'), parameters('principalId'), parameters('roleDefinitionId')))]",
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "Outer"
        },
        "template": "[json(base64ToString(variables('tFile')))]",
        "parameters": {
          "scope": {
            "value": "[parameters('resourceId')]"
          },
          "name": {
            "value": "[if(not(empty(parameters('name'))), parameters('name'), guid(parameters('resourceId'), parameters('principalId'), if(contains(parameters('roleDefinitionId'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId')))))]"
          },
          "roleDefinitionId": {
            "value": "[if(contains(parameters('roleDefinitionId'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId')))]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "principalType": {
            "value": "[parameters('principalType')]"
          },
          "description": {
            "value": "[parameters('description')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The GUID of the Role Assignment."
      },
      "value": "[parameters('name')]"
    },
    "roleName": {
      "type": "string",
      "metadata": {
        "description": "The name for the role, used for logging."
      },
      "value": "[parameters('roleName')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the Role Assignment."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-ResourceRoleAssignment', guid(parameters('resourceId'), parameters('principalId'), parameters('roleDefinitionId')))), '2023-07-01').outputs.roleAssignmentId.value]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the role assignment was applied at."
      },
      "value": "[resourceGroup().name]"
    }
  }
}