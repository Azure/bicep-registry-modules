{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "8562669532457218529"
    },
    "name": "AI Foundry Project",
    "description": "Creates an AI Foundry project and any associated Azure service connections."
  },
  "definitions": {
    "azureConnectionType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The name of the project connection. Will default to the resource name if not provided."
          }
        },
        "resourceName": {
          "type": "string",
          "metadata": {
            "description": "Required. The resource name of the Azure resource for the connection."
          }
        },
        "subscriptionId": {
          "type": "string",
          "metadata": {
            "description": "Required. The subscription ID of the resource."
          }
        },
        "resourceGroupName": {
          "type": "string",
          "metadata": {
            "description": "Required. The resource group name of the resource."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "Type representing values to create an Azure connection to an AI Foundry project."
      }
    },
    "storageAccountConnectionType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The name of the project connection. Will default to \"<account>-<container>\" if not provided."
          }
        },
        "storageAccountName": {
          "type": "string",
          "metadata": {
            "description": "Required. The name of the Storage Account for the connection."
          }
        },
        "containerName": {
          "type": "string",
          "metadata": {
            "description": "Required. Name of container in the Storage Account to use for the connections."
          }
        },
        "subscriptionId": {
          "type": "string",
          "metadata": {
            "description": "Required. The subscription ID of the Storage Account."
          }
        },
        "resourceGroupName": {
          "type": "string",
          "metadata": {
            "description": "Required. The resource group name of the Storage Account."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "Type representing values to create an Azure Storage Account connections to an AI Foundry project."
      }
    },
    "lockType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the name of lock."
          }
        },
        "kind": {
          "type": "string",
          "allowedValues": [
            "CanNotDelete",
            "None",
            "ReadOnly"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the type of lock."
          }
        }
      },
      "metadata": {
        "description": "An AVM-aligned type for a lock.",
        "__bicep_imported_from!": {
          "sourceTemplate": "br:mcr.microsoft.com/bicep/avm/utl/types/avm-common-types:0.5.1"
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "minLength": 2,
      "maxLength": 64,
      "metadata": {
        "description": "Required. The name of the AI Foundry project."
      }
    },
    "displayName": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The display name of the AI Foundry project."
      }
    },
    "desc": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The description of the AI Foundry project."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Specifies the location for all the Azure resources."
      }
    },
    "accountName": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the existing parent Foundry Account resource."
      }
    },
    "includeCapabilityHost": {
      "type": "bool",
      "metadata": {
        "description": "Required. Include the capability host for the Foundry project."
      }
    },
    "cosmosDbConnection": {
      "$ref": "#/definitions/azureConnectionType",
      "nullable": true,
      "metadata": {
        "description": "Optional. Azure Cosmos DB connection for the project."
      }
    },
    "aiSearchConnection": {
      "$ref": "#/definitions/azureConnectionType",
      "nullable": true,
      "metadata": {
        "description": "Optional. Azure Cognitive Search connection for the project."
      }
    },
    "storageAccountConnection": {
      "$ref": "#/definitions/storageAccountConnectionType",
      "nullable": true,
      "metadata": {
        "description": "Optional. Storage Account connection for the project."
      }
    },
    "lock": {
      "$ref": "#/definitions/lockType",
      "nullable": true,
      "metadata": {
        "description": "Optional. The lock settings of the service."
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.Resources/resourceGroups@2025-04-01#properties/tags"
        },
        "description": "Optional. Tags to be applied to the resources."
      },
      "defaultValue": {}
    }
  },
  "variables": {
    "createCapabilityHost": "[and(and(and(parameters('includeCapabilityHost'), not(empty(parameters('cosmosDbConnection')))), not(empty(parameters('aiSearchConnection')))), not(empty(parameters('storageAccountConnection'))))]"
  },
  "resources": {
    "project::storageConnection": {
      "condition": "[not(empty(parameters('storageAccountConnection')))]",
      "type": "Microsoft.CognitiveServices/accounts/projects/connections",
      "apiVersion": "2025-06-01",
      "name": "[format('{0}/{1}/{2}', parameters('accountName'), parameters('name'), parameters('storageAccountConnection').storageAccountName)]",
      "properties": {
        "category": "AzureBlob",
        "target": "[reference('storageAccount').primaryEndpoints.blob]",
        "authType": "AAD",
        "metadata": {
          "ApiType": "Azure",
          "ResourceId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('storageAccountConnection').subscriptionId, parameters('storageAccountConnection').resourceGroupName), 'Microsoft.Storage/storageAccounts', parameters('storageAccountConnection').storageAccountName)]",
          "location": "[reference('storageAccount', '2025-01-01', 'full').location]",
          "AccountName": "[parameters('storageAccountConnection').storageAccountName]",
          "ContainerName": "[parameters('storageAccountConnection').containerName]"
        }
      },
      "dependsOn": [
        "project",
        "storageAccount"
      ]
    },
    "project::searchConnection": {
      "condition": "[not(empty(parameters('aiSearchConnection')))]",
      "type": "Microsoft.CognitiveServices/accounts/projects/connections",
      "apiVersion": "2025-06-01",
      "name": "[format('{0}/{1}/{2}', parameters('accountName'), parameters('name'), parameters('aiSearchConnection').resourceName)]",
      "properties": {
        "category": "CognitiveSearch",
        "target": "[format('https://{0}.search.windows.net/', parameters('aiSearchConnection').resourceName)]",
        "authType": "AAD",
        "metadata": {
          "ApiType": "Azure",
          "ResourceId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('aiSearchConnection').subscriptionId, parameters('aiSearchConnection').resourceGroupName), 'Microsoft.Search/searchServices', parameters('aiSearchConnection').resourceName)]",
          "location": "[reference('aiSearch', '2025-05-01', 'full').location]"
        }
      },
      "dependsOn": [
        "aiSearch",
        "project"
      ]
    },
    "project::cosmosConnection": {
      "condition": "[not(empty(parameters('cosmosDbConnection')))]",
      "type": "Microsoft.CognitiveServices/accounts/projects/connections",
      "apiVersion": "2025-06-01",
      "name": "[format('{0}/{1}/{2}', parameters('accountName'), parameters('name'), parameters('cosmosDbConnection').resourceName)]",
      "properties": {
        "category": "CosmosDB",
        "target": "[reference('cosmosDb').documentEndpoint]",
        "authType": "AAD",
        "metadata": {
          "ApiType": "Azure",
          "ResourceId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('cosmosDbConnection').subscriptionId, parameters('cosmosDbConnection').resourceGroupName), 'Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbConnection').resourceName)]",
          "location": "[reference('cosmosDb', '2025-04-15', 'full').location]"
        }
      },
      "dependsOn": [
        "cosmosDb",
        "project"
      ]
    },
    "foundryAccount": {
      "existing": true,
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2025-06-01",
      "name": "[parameters('accountName')]"
    },
    "storageAccount": {
      "condition": "[not(empty(parameters('storageAccountConnection')))]",
      "existing": true,
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2025-01-01",
      "subscriptionId": "[parameters('storageAccountConnection').subscriptionId]",
      "resourceGroup": "[parameters('storageAccountConnection').resourceGroupName]",
      "name": "[parameters('storageAccountConnection').storageAccountName]"
    },
    "aiSearch": {
      "condition": "[not(empty(parameters('aiSearchConnection')))]",
      "existing": true,
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2025-05-01",
      "subscriptionId": "[parameters('aiSearchConnection').subscriptionId]",
      "resourceGroup": "[parameters('aiSearchConnection').resourceGroupName]",
      "name": "[parameters('aiSearchConnection').resourceName]"
    },
    "cosmosDb": {
      "condition": "[not(empty(parameters('cosmosDbConnection')))]",
      "existing": true,
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2025-04-15",
      "subscriptionId": "[parameters('cosmosDbConnection').subscriptionId]",
      "resourceGroup": "[parameters('cosmosDbConnection').resourceGroupName]",
      "name": "[parameters('cosmosDbConnection').resourceName]"
    },
    "project": {
      "type": "Microsoft.CognitiveServices/accounts/projects",
      "apiVersion": "2025-06-01",
      "name": "[format('{0}/{1}', parameters('accountName'), parameters('name'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), parameters('name'))]",
        "description": "[if(not(empty(parameters('desc'))), parameters('desc'), parameters('name'))]"
      },
      "tags": "[parameters('tags')]"
    },
    "accountCapabilityHost": {
      "condition": "[variables('createCapabilityHost')]",
      "type": "Microsoft.CognitiveServices/accounts/capabilityHosts",
      "apiVersion": "2025-06-01",
      "name": "[format('{0}/{1}', parameters('accountName'), take(format('{0}-cap-host', parameters('accountName')), 64))]",
      "properties": {
        "capabilityHostKind": "Agents",
        "tags": "[parameters('tags')]"
      }
    },
    "projectCapabilityHost": {
      "condition": "[variables('createCapabilityHost')]",
      "type": "Microsoft.CognitiveServices/accounts/projects/capabilityHosts",
      "apiVersion": "2025-06-01",
      "name": "[format('{0}/{1}/{2}', parameters('accountName'), parameters('name'), take(format('{0}-cap-host', parameters('name')), 64))]",
      "properties": {
        "capabilityHostKind": "Agents",
        "vectorStoreConnections": [
          "[format('{0}', parameters('aiSearchConnection').resourceName)]"
        ],
        "storageConnections": [
          "[format('{0}', parameters('storageAccountConnection').storageAccountName)]"
        ],
        "threadStorageConnections": [
          "[format('{0}', parameters('cosmosDbConnection').resourceName)]"
        ],
        "tags": "[parameters('tags')]"
      },
      "dependsOn": [
        "project"
      ]
    },
    "projectLock": {
      "condition": "[and(not(empty(coalesce(parameters('lock'), createObject()))), not(equals(tryGet(parameters('lock'), 'kind'), 'None')))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.CognitiveServices/accounts/{0}/projects/{1}', parameters('accountName'), parameters('name'))]",
      "name": "[coalesce(tryGet(parameters('lock'), 'name'), format('lock-{0}', parameters('name')))]",
      "properties": {
        "level": "[coalesce(tryGet(parameters('lock'), 'kind'), '')]",
        "notes": "[if(equals(tryGet(parameters('lock'), 'kind'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot delete or modify the resource or child resources.')]"
      },
      "dependsOn": [
        "project"
      ]
    },
    "storageAccountRoleAssignments": {
      "condition": "[not(empty(parameters('storageAccountConnection')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[take(format('proj-storage-role-assignments-{0}', parameters('name')), 64)]",
      "subscriptionId": "[parameters('storageAccountConnection').subscriptionId]",
      "resourceGroup": "[parameters('storageAccountConnection').resourceGroupName]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountConnection').storageAccountName]"
          },
          "projectIdentityPrincipalId": {
            "value": "[reference('project', '2025-06-01', 'full').identity.principalId]"
          },
          "containerName": {
            "value": "[parameters('storageAccountConnection').containerName]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "13981617801567249549"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the storage account."
              }
            },
            "projectIdentityPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Required. The principal ID of the project identity."
              }
            },
            "containerName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the blob container for the project."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), resourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b'), parameters('storageAccountName'))]",
              "properties": {
                "principalId": "[parameters('projectIdentityPrincipalId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
                "principalType": "ServicePrincipal",
                "conditionVersion": "2.0",
                "condition": "[format('((!(ActionMatches{{''Microsoft.Storage/storageAccounts/blobServices/containers/blobs/tags/read''}})  AND  !(ActionMatches{{''Microsoft.Storage/storageAccounts/blobServices/containers/blobs/filter/action''}}) AND  !(ActionMatches{{''Microsoft.Storage/storageAccounts/blobServices/containers/blobs/tags/write''}}) ) OR (@Resource[Microsoft.Storage/storageAccounts/blobServices/containers:name] StringStartsWithIgnoreCase ''{0}''))', parameters('containerName'))]"
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[take(format('proj-storage-blob-contributer-role-assign-{0}', parameters('storageAccountName')), 64)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "resourceId": {
                    "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                  },
                  "principalId": {
                    "value": "[parameters('projectIdentityPrincipalId')]"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  },
                  "roleDefinitionId": {
                    "value": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "14634305923902101494"
                    },
                    "name": "Resource-scoped role assignment",
                    "description": "This module deploys a Role Assignment for a specific resource."
                  },
                  "parameters": {
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The scope for the role assignment, fully qualified resourceId."
                      }
                    },
                    "name": {
                      "type": "string",
                      "defaultValue": "[guid(parameters('resourceId'), parameters('principalId'), if(contains(parameters('roleDefinitionId'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))))]",
                      "metadata": {
                        "description": "Optional. The unique guid name for the role assignment."
                      }
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The role definition ID for the role assignment."
                      }
                    },
                    "roleName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The name for the role, used for logging."
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The Principal or Object ID of the Security Principal (User, Group, Service Principal, Managed Identity)."
                      }
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "",
                      "allowedValues": [
                        "ServicePrincipal",
                        "Group",
                        "User",
                        "ForeignGroup",
                        "Device",
                        ""
                      ],
                      "metadata": {
                        "description": "Optional. The principal type of the assigned principal ID."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The description of role assignment."
                      }
                    },
                    "enableTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable/Disable usage telemetry for module."
                      }
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "parameters": {
                        "scope": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "roleDefinitionId": {
                          "type": "string"
                        },
                        "principalId": {
                          "type": "string"
                        },
                        "principalType": {
                          "type": "string",
                          "allowedValues": [
                            "Device",
                            "ForeignGroup",
                            "Group",
                            "ServicePrincipal",
                            "User",
                            ""
                          ],
                          "defaultValue": "",
                          "metadata": {
                            "description": "Optional. The principal type of the assigned principal ID."
                          }
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "resources": [
                        {
                          "type": "Microsoft.Authorization/roleAssignments",
                          "apiVersion": "2022-04-01",
                          "scope": "[[parameters('scope')]",
                          "name": "[[parameters('name')]",
                          "properties": {
                            "roleDefinitionId": "[[parameters('roleDefinitionId')]",
                            "principalId": "[[parameters('principalId')]",
                            "principalType": "[[parameters('principalType')]",
                            "description": "[[parameters('description')]"
                          }
                        }
                      ],
                      "outputs": {
                        "roleAssignmentId": {
                          "type": "string",
                          "value": "[[extensionResourceId(parameters('scope'), 'Microsoft.Authorization/roleAssignments', parameters('name'))]"
                        }
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2024-03-01",
                      "name": "[format('46d3xbcp.ptn.authorization-resourceroleassignment.{0}.{1}', replace('0.1.2', '.', '-'), substring(uniqueString(deployment().name), 0, 4))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": [],
                          "outputs": {
                            "telemetry": {
                              "type": "String",
                              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}-ResourceRoleAssignment', guid(parameters('resourceId'), parameters('principalId'), parameters('roleDefinitionId')))]",
                      "properties": {
                        "mode": "Incremental",
                        "expressionEvaluationOptions": {
                          "scope": "Outer"
                        },
                        "template": "[variables('$fxv#0')]",
                        "parameters": {
                          "scope": {
                            "value": "[parameters('resourceId')]"
                          },
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "roleDefinitionId": {
                            "value": "[if(contains(parameters('roleDefinitionId'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId')))]"
                          },
                          "principalId": {
                            "value": "[parameters('principalId')]"
                          },
                          "principalType": {
                            "value": "[parameters('principalType')]"
                          },
                          "description": {
                            "value": "[parameters('description')]"
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The GUID of the Role Assignment."
                      },
                      "value": "[parameters('name')]"
                    },
                    "roleName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name for the role, used for logging."
                      },
                      "value": "[parameters('roleName')]"
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the Role Assignment."
                      },
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-ResourceRoleAssignment', guid(parameters('resourceId'), parameters('principalId'), parameters('roleDefinitionId')))), '2023-07-01').outputs.roleAssignmentId.value]"
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the resource group the role assignment was applied at."
                      },
                      "value": "[resourceGroup().name]"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "project"
      ]
    },
    "cosmosDbRoleAssignments": {
      "condition": "[not(empty(parameters('cosmosDbConnection')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[take(format('proj-cosmos-role-assignments-{0}', parameters('name')), 64)]",
      "subscriptionId": "[parameters('cosmosDbConnection').subscriptionId]",
      "resourceGroup": "[parameters('cosmosDbConnection').resourceGroupName]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "cosmosDbName": {
            "value": "[parameters('cosmosDbConnection').resourceName]"
          },
          "projectIdentityPrincipalId": {
            "value": "[reference('project', '2025-06-01', 'full').identity.principalId]"
          },
          "projectWorkspaceId": {
            "value": "[format('{0}-{1}-{2}-{3}-{4}', if(greaterOrEquals(length(reference('project').internalId), 8), substring(reference('project').internalId, 0, 8), ''), if(greaterOrEquals(length(reference('project').internalId), 12), substring(reference('project').internalId, 8, 4), ''), if(greaterOrEquals(length(reference('project').internalId), 16), substring(reference('project').internalId, 12, 4), ''), if(greaterOrEquals(length(reference('project').internalId), 20), substring(reference('project').internalId, 16, 4), ''), if(greaterOrEquals(length(reference('project').internalId), 32), substring(reference('project').internalId, 20, 12), ''))]"
          },
          "createCapabilityHost": {
            "value": "[variables('createCapabilityHost')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "4958517478195879106"
            }
          },
          "parameters": {
            "cosmosDbName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the Cosmos DB account."
              }
            },
            "projectIdentityPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Required. The principal ID of the project identity."
              }
            },
            "projectWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Required. The project workspace ID."
              }
            },
            "createCapabilityHost": {
              "type": "bool",
              "metadata": {
                "description": "Required. Whether to create a capability host for the project."
              }
            }
          },
          "variables": {
            "cosmosContainerNameSuffixes": "[if(parameters('createCapabilityHost'), createArray('thread-message-store', 'system-thread-message-store', 'agent-entity-store'), createArray())]",
            "cosmosDefaultSqlRoleDefinitionId": "[if(parameters('createCapabilityHost'), resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('cosmosDbName'), '00000000-0000-0000-0000-000000000002'), '')]"
          },
          "resources": [
            {
              "copy": {
                "name": "cosmosDataRoleAssigment",
                "count": "[length(variables('cosmosContainerNameSuffixes'))]"
              },
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
              "apiVersion": "2025-04-15",
              "name": "[format('{0}/{1}', parameters('cosmosDbName'), guid(variables('cosmosDefaultSqlRoleDefinitionId'), parameters('cosmosDbName'), variables('cosmosContainerNameSuffixes')[copyIndex()]))]",
              "properties": {
                "principalId": "[parameters('projectIdentityPrincipalId')]",
                "roleDefinitionId": "[variables('cosmosDefaultSqlRoleDefinitionId')]",
                "scope": "[format('{0}/dbs/enterprise_memory/colls/{1}-{2}', resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName')), parameters('projectWorkspaceId'), variables('cosmosContainerNameSuffixes')[copyIndex()])]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', take(format('proj-cosmos-db-operator-role-assign-{0}', parameters('cosmosDbName')), 64))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[take(format('proj-cosmos-db-operator-role-assign-{0}', parameters('cosmosDbName')), 64)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "resourceId": {
                    "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))]"
                  },
                  "principalId": {
                    "value": "[parameters('projectIdentityPrincipalId')]"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  },
                  "roleDefinitionId": {
                    "value": "230815da-be43-4aae-9cb4-875f7bd000aa"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "14634305923902101494"
                    },
                    "name": "Resource-scoped role assignment",
                    "description": "This module deploys a Role Assignment for a specific resource."
                  },
                  "parameters": {
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The scope for the role assignment, fully qualified resourceId."
                      }
                    },
                    "name": {
                      "type": "string",
                      "defaultValue": "[guid(parameters('resourceId'), parameters('principalId'), if(contains(parameters('roleDefinitionId'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))))]",
                      "metadata": {
                        "description": "Optional. The unique guid name for the role assignment."
                      }
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The role definition ID for the role assignment."
                      }
                    },
                    "roleName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The name for the role, used for logging."
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The Principal or Object ID of the Security Principal (User, Group, Service Principal, Managed Identity)."
                      }
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "",
                      "allowedValues": [
                        "ServicePrincipal",
                        "Group",
                        "User",
                        "ForeignGroup",
                        "Device",
                        ""
                      ],
                      "metadata": {
                        "description": "Optional. The principal type of the assigned principal ID."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The description of role assignment."
                      }
                    },
                    "enableTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable/Disable usage telemetry for module."
                      }
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "parameters": {
                        "scope": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "roleDefinitionId": {
                          "type": "string"
                        },
                        "principalId": {
                          "type": "string"
                        },
                        "principalType": {
                          "type": "string",
                          "allowedValues": [
                            "Device",
                            "ForeignGroup",
                            "Group",
                            "ServicePrincipal",
                            "User",
                            ""
                          ],
                          "defaultValue": "",
                          "metadata": {
                            "description": "Optional. The principal type of the assigned principal ID."
                          }
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "resources": [
                        {
                          "type": "Microsoft.Authorization/roleAssignments",
                          "apiVersion": "2022-04-01",
                          "scope": "[[parameters('scope')]",
                          "name": "[[parameters('name')]",
                          "properties": {
                            "roleDefinitionId": "[[parameters('roleDefinitionId')]",
                            "principalId": "[[parameters('principalId')]",
                            "principalType": "[[parameters('principalType')]",
                            "description": "[[parameters('description')]"
                          }
                        }
                      ],
                      "outputs": {
                        "roleAssignmentId": {
                          "type": "string",
                          "value": "[[extensionResourceId(parameters('scope'), 'Microsoft.Authorization/roleAssignments', parameters('name'))]"
                        }
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2024-03-01",
                      "name": "[format('46d3xbcp.ptn.authorization-resourceroleassignment.{0}.{1}', replace('0.1.2', '.', '-'), substring(uniqueString(deployment().name), 0, 4))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": [],
                          "outputs": {
                            "telemetry": {
                              "type": "String",
                              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}-ResourceRoleAssignment', guid(parameters('resourceId'), parameters('principalId'), parameters('roleDefinitionId')))]",
                      "properties": {
                        "mode": "Incremental",
                        "expressionEvaluationOptions": {
                          "scope": "Outer"
                        },
                        "template": "[variables('$fxv#0')]",
                        "parameters": {
                          "scope": {
                            "value": "[parameters('resourceId')]"
                          },
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "roleDefinitionId": {
                            "value": "[if(contains(parameters('roleDefinitionId'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId')))]"
                          },
                          "principalId": {
                            "value": "[parameters('principalId')]"
                          },
                          "principalType": {
                            "value": "[parameters('principalType')]"
                          },
                          "description": {
                            "value": "[parameters('description')]"
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The GUID of the Role Assignment."
                      },
                      "value": "[parameters('name')]"
                    },
                    "roleName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name for the role, used for logging."
                      },
                      "value": "[parameters('roleName')]"
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the Role Assignment."
                      },
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-ResourceRoleAssignment', guid(parameters('resourceId'), parameters('principalId'), parameters('roleDefinitionId')))), '2023-07-01').outputs.roleAssignmentId.value]"
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the resource group the role assignment was applied at."
                      },
                      "value": "[resourceGroup().name]"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "project",
        "projectCapabilityHost"
      ]
    },
    "searchRoleIndexDataContributorAssignment": {
      "condition": "[not(empty(parameters('aiSearchConnection')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[take(format('proj-search-index-data-contributor-role-assign-{0}', parameters('name')), 64)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceId": {
            "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('aiSearchConnection').subscriptionId, parameters('aiSearchConnection').resourceGroupName), 'Microsoft.Search/searchServices', parameters('aiSearchConnection').resourceName)]"
          },
          "principalId": {
            "value": "[reference('project', '2025-06-01', 'full').identity.principalId]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          },
          "roleDefinitionId": {
            "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "14634305923902101494"
            },
            "name": "Resource-scoped role assignment",
            "description": "This module deploys a Role Assignment for a specific resource."
          },
          "parameters": {
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "Required. The scope for the role assignment, fully qualified resourceId."
              }
            },
            "name": {
              "type": "string",
              "defaultValue": "[guid(parameters('resourceId'), parameters('principalId'), if(contains(parameters('roleDefinitionId'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))))]",
              "metadata": {
                "description": "Optional. The unique guid name for the role assignment."
              }
            },
            "roleDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Required. The role definition ID for the role assignment."
              }
            },
            "roleName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The name for the role, used for logging."
              }
            },
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "Required. The Principal or Object ID of the Security Principal (User, Group, Service Principal, Managed Identity)."
              }
            },
            "principalType": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "ServicePrincipal",
                "Group",
                "User",
                "ForeignGroup",
                "Device",
                ""
              ],
              "metadata": {
                "description": "Optional. The principal type of the assigned principal ID."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of role assignment."
              }
            },
            "enableTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable/Disable usage telemetry for module."
              }
            }
          },
          "variables": {
            "$fxv#0": {
              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {
                "scope": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "roleDefinitionId": {
                  "type": "string"
                },
                "principalId": {
                  "type": "string"
                },
                "principalType": {
                  "type": "string",
                  "allowedValues": [
                    "Device",
                    "ForeignGroup",
                    "Group",
                    "ServicePrincipal",
                    "User",
                    ""
                  ],
                  "defaultValue": "",
                  "metadata": {
                    "description": "Optional. The principal type of the assigned principal ID."
                  }
                },
                "description": {
                  "type": "string"
                }
              },
              "resources": [
                {
                  "type": "Microsoft.Authorization/roleAssignments",
                  "apiVersion": "2022-04-01",
                  "scope": "[[parameters('scope')]",
                  "name": "[[parameters('name')]",
                  "properties": {
                    "roleDefinitionId": "[[parameters('roleDefinitionId')]",
                    "principalId": "[[parameters('principalId')]",
                    "principalType": "[[parameters('principalType')]",
                    "description": "[[parameters('description')]"
                  }
                }
              ],
              "outputs": {
                "roleAssignmentId": {
                  "type": "string",
                  "value": "[[extensionResourceId(parameters('scope'), 'Microsoft.Authorization/roleAssignments', parameters('name'))]"
                }
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2024-03-01",
              "name": "[format('46d3xbcp.ptn.authorization-resourceroleassignment.{0}.{1}', replace('0.1.2', '.', '-'), substring(uniqueString(deployment().name), 0, 4))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": [],
                  "outputs": {
                    "telemetry": {
                      "type": "String",
                      "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}-ResourceRoleAssignment', guid(parameters('resourceId'), parameters('principalId'), parameters('roleDefinitionId')))]",
              "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                  "scope": "Outer"
                },
                "template": "[variables('$fxv#0')]",
                "parameters": {
                  "scope": {
                    "value": "[parameters('resourceId')]"
                  },
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "roleDefinitionId": {
                    "value": "[if(contains(parameters('roleDefinitionId'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId')))]"
                  },
                  "principalId": {
                    "value": "[parameters('principalId')]"
                  },
                  "principalType": {
                    "value": "[parameters('principalType')]"
                  },
                  "description": {
                    "value": "[parameters('description')]"
                  }
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The GUID of the Role Assignment."
              },
              "value": "[parameters('name')]"
            },
            "roleName": {
              "type": "string",
              "metadata": {
                "description": "The name for the role, used for logging."
              },
              "value": "[parameters('roleName')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the Role Assignment."
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-ResourceRoleAssignment', guid(parameters('resourceId'), parameters('principalId'), parameters('roleDefinitionId')))), '2023-07-01').outputs.roleAssignmentId.value]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the role assignment was applied at."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "project"
      ]
    },
    "searchServiceContributorAssignment": {
      "condition": "[not(empty(parameters('aiSearchConnection')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[take(format('proj-search-service-contributor-role-assign-{0}', parameters('name')), 64)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceId": {
            "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('aiSearchConnection').subscriptionId, parameters('aiSearchConnection').resourceGroupName), 'Microsoft.Search/searchServices', parameters('aiSearchConnection').resourceName)]"
          },
          "principalId": {
            "value": "[reference('project', '2025-06-01', 'full').identity.principalId]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          },
          "roleDefinitionId": {
            "value": "7ca78c08-252a-4471-8644-bb5ff32d4ba0"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "14634305923902101494"
            },
            "name": "Resource-scoped role assignment",
            "description": "This module deploys a Role Assignment for a specific resource."
          },
          "parameters": {
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "Required. The scope for the role assignment, fully qualified resourceId."
              }
            },
            "name": {
              "type": "string",
              "defaultValue": "[guid(parameters('resourceId'), parameters('principalId'), if(contains(parameters('roleDefinitionId'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))))]",
              "metadata": {
                "description": "Optional. The unique guid name for the role assignment."
              }
            },
            "roleDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Required. The role definition ID for the role assignment."
              }
            },
            "roleName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The name for the role, used for logging."
              }
            },
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "Required. The Principal or Object ID of the Security Principal (User, Group, Service Principal, Managed Identity)."
              }
            },
            "principalType": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "ServicePrincipal",
                "Group",
                "User",
                "ForeignGroup",
                "Device",
                ""
              ],
              "metadata": {
                "description": "Optional. The principal type of the assigned principal ID."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of role assignment."
              }
            },
            "enableTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable/Disable usage telemetry for module."
              }
            }
          },
          "variables": {
            "$fxv#0": {
              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {
                "scope": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "roleDefinitionId": {
                  "type": "string"
                },
                "principalId": {
                  "type": "string"
                },
                "principalType": {
                  "type": "string",
                  "allowedValues": [
                    "Device",
                    "ForeignGroup",
                    "Group",
                    "ServicePrincipal",
                    "User",
                    ""
                  ],
                  "defaultValue": "",
                  "metadata": {
                    "description": "Optional. The principal type of the assigned principal ID."
                  }
                },
                "description": {
                  "type": "string"
                }
              },
              "resources": [
                {
                  "type": "Microsoft.Authorization/roleAssignments",
                  "apiVersion": "2022-04-01",
                  "scope": "[[parameters('scope')]",
                  "name": "[[parameters('name')]",
                  "properties": {
                    "roleDefinitionId": "[[parameters('roleDefinitionId')]",
                    "principalId": "[[parameters('principalId')]",
                    "principalType": "[[parameters('principalType')]",
                    "description": "[[parameters('description')]"
                  }
                }
              ],
              "outputs": {
                "roleAssignmentId": {
                  "type": "string",
                  "value": "[[extensionResourceId(parameters('scope'), 'Microsoft.Authorization/roleAssignments', parameters('name'))]"
                }
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2024-03-01",
              "name": "[format('46d3xbcp.ptn.authorization-resourceroleassignment.{0}.{1}', replace('0.1.2', '.', '-'), substring(uniqueString(deployment().name), 0, 4))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": [],
                  "outputs": {
                    "telemetry": {
                      "type": "String",
                      "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}-ResourceRoleAssignment', guid(parameters('resourceId'), parameters('principalId'), parameters('roleDefinitionId')))]",
              "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                  "scope": "Outer"
                },
                "template": "[variables('$fxv#0')]",
                "parameters": {
                  "scope": {
                    "value": "[parameters('resourceId')]"
                  },
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "roleDefinitionId": {
                    "value": "[if(contains(parameters('roleDefinitionId'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId')))]"
                  },
                  "principalId": {
                    "value": "[parameters('principalId')]"
                  },
                  "principalType": {
                    "value": "[parameters('principalType')]"
                  },
                  "description": {
                    "value": "[parameters('description')]"
                  }
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The GUID of the Role Assignment."
              },
              "value": "[parameters('name')]"
            },
            "roleName": {
              "type": "string",
              "metadata": {
                "description": "The name for the role, used for logging."
              },
              "value": "[parameters('roleName')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the Role Assignment."
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-ResourceRoleAssignment', guid(parameters('resourceId'), parameters('principalId'), parameters('roleDefinitionId')))), '2023-07-01').outputs.roleAssignmentId.value]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the role assignment was applied at."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "project"
      ]
    }
  },
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the deployed Azure Resource Group."
      },
      "value": "[resourceGroup().name]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the Project."
      },
      "value": "[resourceId('Microsoft.CognitiveServices/accounts/projects', parameters('accountName'), parameters('name'))]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "Name of the Project."
      },
      "value": "[parameters('name')]"
    },
    "displayName": {
      "type": "string",
      "metadata": {
        "description": "Display name of the Project."
      },
      "value": "[reference('project').displayName]"
    },
    "desc": {
      "type": "string",
      "metadata": {
        "description": "Description of the Project."
      },
      "value": "[reference('project').description]"
    }
  }
}