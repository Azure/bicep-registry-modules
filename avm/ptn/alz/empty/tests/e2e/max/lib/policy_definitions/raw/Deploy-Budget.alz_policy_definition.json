{
  "name": "Deploy-Budget",
  "properties": {
    "description": "Deploy a default budget on all subscriptions under the assigned scope",
    "displayName": "Deploy a default budget on all subscriptions under the assigned scope",
    "metadata": {
      "alzCloudEnvironments": [
        "AzureCloud",
        "AzureUSGovernment"
      ],
      "category": "Budget",
      "source": "https://github.com/Azure/Enterprise-Scale/",
      "version": "1.1.0"
    },
    "mode": "All",
    "parameters": {
      "amount": {
        "defaultValue": "1000",
        "metadata": {
          "description": "The total amount of cost or usage to track with the budget"
        },
        "type": "String"
      },
      "budgetName": {
        "defaultValue": "budget-set-by-policy",
        "metadata": {
          "description": "The name for the budget to be created"
        },
        "type": "String"
      },
      "contactEmails": {
        "defaultValue": [],
        "metadata": {
          "description": "The list of email addresses, in an array, to send the budget notification to when the threshold is exceeded."
        },
        "type": "Array"
      },
      "contactGroups": {
        "defaultValue": [],
        "metadata": {
          "description": "The list of action groups, in an array, to send the budget notification to when the threshold is exceeded. It accepts array of strings."
        },
        "type": "Array"
      },
      "contactRoles": {
        "defaultValue": [
          "Owner",
          "Contributor"
        ],
        "metadata": {
          "description": "The list of contact RBAC roles, in an array, to send the budget notification to when the threshold is exceeded."
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "description": "Enable or disable the execution of the policy"
        },
        "type": "String"
      },
      "firstThreshold": {
        "defaultValue": "90",
        "metadata": {
          "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
        },
        "type": "String"
      },
      "secondThreshold": {
        "defaultValue": "100",
        "metadata": {
          "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
        },
        "type": "String"
      },
      "timeGrain": {
        "allowedValues": [
          "Monthly",
          "Quarterly",
          "Annually",
          "BillingMonth",
          "BillingQuarter",
          "BillingAnnual"
        ],
        "defaultValue": "Monthly",
        "metadata": {
          "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain."
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Resources/subscriptions",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "location": "northeurope",
            "properties": {
              "mode": "Incremental",
              "parameters": {
                "amount": {
                  "value": "[parameters('amount')]"
                },
                "budgetName": {
                  "value": "[parameters('budgetName')]"
                },
                "contactEmails": {
                  "value": "[parameters('contactEmails')]"
                },
                "contactGroups": {
                  "value": "[parameters('contactGroups')]"
                },
                "contactRoles": {
                  "value": "[parameters('contactRoles')]"
                },
                "firstThreshold": {
                  "value": "[parameters('firstThreshold')]"
                },
                "secondThreshold": {
                  "value": "[parameters('secondThreshold')]"
                },
                "timeGrain": {
                  "value": "[parameters('timeGrain')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "amount": {
                    "type": "String"
                  },
                  "budgetName": {
                    "type": "String"
                  },
                  "contactEmails": {
                    "type": "Array"
                  },
                  "contactGroups": {
                    "type": "Array"
                  },
                  "contactRoles": {
                    "type": "Array"
                  },
                  "firstThreshold": {
                    "type": "String"
                  },
                  "secondThreshold": {
                    "type": "String"
                  },
                  "startDate": {
                    "defaultValue": "[concat(utcNow('MM'), '/01/', utcNow('yyyy'))]",
                    "type": "String"
                  },
                  "timeGrain": {
                    "type": "String"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2019-10-01",
                    "name": "[parameters('budgetName')]",
                    "properties": {
                      "amount": "[parameters('amount')]",
                      "category": "Cost",
                      "notifications": {
                        "NotificationForExceededBudget1": {
                          "contactEmails": "[parameters('contactEmails')]",
                          "contactGroups": "[parameters('contactGroups')]",
                          "contactRoles": "[parameters('contactRoles')]",
                          "enabled": true,
                          "operator": "GreaterThan",
                          "threshold": "[parameters('firstThreshold')]"
                        },
                        "NotificationForExceededBudget2": {
                          "contactEmails": "[parameters('contactEmails')]",
                          "contactGroups": "[parameters('contactGroups')]",
                          "contactRoles": "[parameters('contactRoles')]",
                          "enabled": true,
                          "operator": "GreaterThan",
                          "threshold": "[parameters('secondThreshold')]"
                        }
                      },
                      "timeGrain": "[parameters('timeGrain')]",
                      "timePeriod": {
                        "startDate": "[parameters('startDate')]"
                      }
                    },
                    "type": "Microsoft.Consumption/budgets"
                  }
                ]
              }
            }
          },
          "deploymentScope": "subscription",
          "existenceCondition": {
            "allOf": [
              {
                "equals": "[parameters('amount')]",
                "field": "Microsoft.Consumption/budgets/amount"
              },
              {
                "equals": "[parameters('timeGrain')]",
                "field": "Microsoft.Consumption/budgets/timeGrain"
              },
              {
                "equals": "Cost",
                "field": "Microsoft.Consumption/budgets/category"
              }
            ]
          },
          "existenceScope": "subscription",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Consumption/budgets"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom"
  },
  "type": "Microsoft.Authorization/policyDefinitions"
}