{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "8859142812119331439"
    },
    "name": "avm/ptn/azd/apim-api",
    "description": "Creates and configure an API within an API Management service instance.\n\n**Note:** This module is not intended for broad, generic use, as it was designed to cater for the requirements of the AZD CLI product. Feature requests and bug fix requests are welcome if they support the development of the AZD CLI but may not be incorporated if they aim to make this module more generic than what it needs to be for its primary use case."
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the API Management service instance."
      }
    },
    "apiName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Required. Resource name to uniquely identify this API within the API Management service instance."
      }
    },
    "apiDisplayName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 300,
      "metadata": {
        "description": "Required. The Display Name of the API."
      }
    },
    "apiDescription": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Required. Description of the API. May include HTML formatting tags."
      }
    },
    "apiPath": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Required. Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
      }
    },
    "webFrontendUrl": {
      "type": "string",
      "metadata": {
        "description": "Required. Absolute URL of web frontend."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    },
    "apiBackendUrl": {
      "type": "string",
      "metadata": {
        "description": "Required. Absolute URL of the backend service implementing this API."
      }
    },
    "apiAppName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource name for backend Web App or Function App."
      }
    }
  },
  "variables": {
    "$fxv#0": "<!-- Policy configuration for the API. Explore other sample policies at https://learn.microsoft.com/en-us/azure/api-management/policies/ -->\r\n<policies>\r\n    <inbound>\r\n        <base />\r\n        <!-- This policy is needed to handle preflight requests using the OPTIONS method. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-cross-domain-policies  -->\r\n        <cors allow-credentials=\"false\">\r\n            <allowed-origins>\r\n                <origin>{origin}</origin>\r\n            </allowed-origins>\r\n            <allowed-methods>\r\n                <method>PUT</method>\r\n                <method>GET</method>\r\n                <method>POST</method>\r\n                <method>DELETE</method>\r\n                <method>PATCH</method>\r\n            </allowed-methods>\r\n            <allowed-headers>\r\n                <header>*</header>\r\n            </allowed-headers>\r\n            <expose-headers>\r\n                <header>*</header>\r\n            </expose-headers>\r\n        </cors>\r\n        <!-- Optional policy to validate the request content. Learn more at https://learn.microsoft.com/en-us/azure/api-management/validation-policies#validate-content -->\r\n        <validate-content unspecified-content-type-action=\"ignore\" max-size=\"1024\" size-exceeded-action=\"detect\" errors-variable-name=\"requestBodyValidation\">\r\n            <content type=\"application/json\" validate-as=\"json\" action=\"detect\" />\r\n        </validate-content>\r\n        <!-- Optional policy to send custom trace telemetry to Application Insights. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#Trace -->\r\n        <trace source=\"@(context.Api.Name)\" severity=\"verbose\">\r\n            <message>Call to the @(context.Api.Name)</message>\r\n            <metadata name=\"User-Agent\" value=\"@(context.Request.Headers.GetValueOrDefault(\"User-Agent\",\"\"))\" />\r\n            <metadata name=\"Operation Method\" value=\"@(context.Request.Method)\" />\r\n            <metadata name=\"Host\" value=\"@(context.Request.Url.Host)\" />\r\n            <metadata name=\"Path\" value=\"@(context.Request.Url.Path)\" />\r\n        </trace>\r\n    </inbound>\r\n    <backend>\r\n        <limit-concurrency key=\"@(context.Request.IpAddress)\" max-count=\"3\">\r\n            <forward-request timeout=\"120\" />\r\n        </limit-concurrency>\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n        <!-- Optional policy to validate the response headers. Learn more at https://learn.microsoft.com/en-us/azure/api-management/validation-policies#validate-headers -->\r\n        <validate-headers specified-header-action=\"ignore\" unspecified-header-action=\"ignore\" errors-variable-name=\"responseHeadersValidation\" />\r\n        <!-- Optional policy to to send custom metrics to Application Insights. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#emit-metrics -->\r\n        <choose>\r\n            <when condition=\"@(context.Response.StatusCode >= 200 && context.Response.StatusCode < 300)\">\r\n                <emit-metric name=\"Successful requests\" value=\"1\" namespace=\"apim-metrics\">\r\n                    <dimension name=\"API\" value=\"@(context.Api.Name)\" />\r\n                    <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\r\n                    <dimension name=\"Status Code\" value=\"@((String)context.Response.StatusCode.ToString())\" />\r\n                    <dimension name=\"Status Reason\" value=\"@(context.Response.StatusReason)\" />\r\n                </emit-metric>\r\n            </when>\r\n            <when condition=\"@(context.Response.StatusCode >= 400 && context.Response.StatusCode < 600)\">\r\n                <emit-metric name=\"Failed requests\" value=\"1\" namespace=\"apim-metrics\">\r\n                    <dimension name=\"API\" value=\"@(context.Api.Name)\" />\r\n                    <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\r\n                    <dimension name=\"Status Code\" value=\"@(context.Response.StatusCode.ToString())\" />\r\n                    <dimension name=\"Status Reason\" value=\"@(context.Response.StatusReason)\" />\r\n                    <dimension name=\"Error Source\" value=\"backend\" />\r\n                </emit-metric>\r\n            </when>\r\n        </choose>\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n        <!-- Optional policy to handle errors. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-error-handling-policies -->\r\n        <trace source=\"@(context.Api.Name)\" severity=\"error\">\r\n            <message>Failed to process the @(context.Api.Name)</message>\r\n            <metadata name=\"User-Agent\" value=\"@(context.Request.Headers.GetValueOrDefault(\"User-Agent\",\"\"))\" />\r\n            <metadata name=\"Operation Method\" value=\"@(context.Request.Method)\" />\r\n            <metadata name=\"Host\" value=\"@(context.Request.Url.Host)\" />\r\n            <metadata name=\"Path\" value=\"@(context.Request.Url.Path)\" />\r\n            <metadata name=\"Error Reason\" value=\"@(context.LastError.Reason)\" />\r\n            <metadata name=\"Error Message\" value=\"@(context.LastError.Message)\" />\r\n        </trace>\r\n        <emit-metric name=\"Failed requests\" value=\"1\" namespace=\"apim-metrics\">\r\n            <dimension name=\"API\" value=\"@(context.Api.Name)\" />\r\n            <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\r\n            <dimension name=\"Status Code\" value=\"500\" />\r\n            <dimension name=\"Status Reason\" value=\"@(context.LastError.Reason)\" />\r\n            <dimension name=\"Error Source\" value=\"gateway\" />\r\n        </emit-metric>\r\n        <!-- Optional policy to hide error details and provide a custom generic message. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#ReturnResponse -->\r\n        <return-response>\r\n            <set-status code=\"500\" reason=\"Internal Server Error\" />\r\n            <set-body>An unexpected error has occurred.</set-body>\r\n        </return-response>\r\n    </on-error>\r\n</policies>",
    "$fxv#1": "openapi: 3.0.0\r\ninfo:\r\n  description: Simple Todo API\r\n  version: 3.0.0\r\n  title: Simple Todo API\r\n  contact:\r\n    email: azdevteam@microsoft.com\r\n\r\ncomponents:\r\n  schemas:\r\n    TodoItem:\r\n      type: object\r\n      required:\r\n        - listId\r\n        - name\r\n        - description\r\n      description: A task that needs to be completed\r\n      properties:\r\n        id:\r\n          type: string\r\n        listId:\r\n          type: string\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        state:\r\n          $ref: \"#/components/schemas/TodoState\"\r\n        dueDate:\r\n          type: string\r\n          format: date-time\r\n        completedDate:\r\n          type: string\r\n          format: date-time\r\n    TodoList:\r\n      type: object\r\n      required:\r\n        - name\r\n      properties:\r\n        id:\r\n          type: string\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n      description: \" A list of related Todo items\"\r\n    TodoState:\r\n      type: string\r\n      enum:\r\n        - todo\r\n        - inprogress\r\n        - done\r\n  parameters:\r\n    listId:\r\n      in: path\r\n      required: true\r\n      name: listId\r\n      description: The Todo list unique identifier\r\n      schema:\r\n        type: string\r\n    itemId:\r\n      in: path\r\n      required: true\r\n      name: itemId\r\n      description: The Todo item unique identifier\r\n      schema:\r\n        type: string\r\n    state:\r\n      in: path\r\n      required: true\r\n      name: state\r\n      description: The Todo item state\r\n      schema:\r\n        $ref: \"#/components/schemas/TodoState\"\r\n    top:\r\n      in: query\r\n      required: false\r\n      name: top\r\n      description: The max number of items to returns in a result\r\n      schema:\r\n        type: number\r\n        default: 20\r\n    skip:\r\n      in: query\r\n      required: false\r\n      name: skip\r\n      description: The number of items to skip within the results\r\n      schema:\r\n        type: number\r\n        default: 0\r\n\r\n  requestBodies:\r\n    TodoList:\r\n      description: The Todo List\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/TodoList\"\r\n    TodoItem:\r\n      description: The Todo Item\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/TodoItem\"\r\n\r\n  responses:\r\n    TodoList:\r\n      description: A Todo list result\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/TodoList\"\r\n    TodoListArray:\r\n      description: An array of Todo lists\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: array\r\n            items:\r\n              $ref: \"#/components/schemas/TodoList\"\r\n    TodoItem:\r\n      description: A Todo item result\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/TodoItem\"\r\n    TodoItemArray:\r\n      description: An array of Todo items\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: array\r\n            items:\r\n              $ref: \"#/components/schemas/TodoItem\"\r\n\r\npaths:\r\n  /lists:\r\n    get:\r\n      operationId: GetLists\r\n      summary: Gets an array of Todo lists\r\n      tags:\r\n        - Lists\r\n      parameters:\r\n        - $ref: \"#/components/parameters/top\"\r\n        - $ref: \"#/components/parameters/skip\"\r\n      responses:\r\n        200:\r\n          $ref: \"#/components/responses/TodoListArray\"\r\n    post:\r\n      operationId: CreateList\r\n      summary: Creates a new Todo list\r\n      tags:\r\n        - Lists\r\n      requestBody:\r\n        $ref: \"#/components/requestBodies/TodoList\"\r\n      responses:\r\n        201:\r\n          $ref: \"#/components/responses/TodoList\"\r\n        400:\r\n          description: Invalid request schema\r\n  /lists/{listId}:\r\n    get:\r\n      operationId: GetListById\r\n      summary: Gets a Todo list by unique identifier\r\n      tags:\r\n        - Lists\r\n      parameters:\r\n        - $ref: \"#/components/parameters/listId\"\r\n      responses:\r\n        200:\r\n          $ref: \"#/components/responses/TodoList\"\r\n        404:\r\n          description: Todo list not found\r\n    put:\r\n      operationId: UpdateListById\r\n      summary: Updates a Todo list by unique identifier\r\n      tags:\r\n        - Lists\r\n      requestBody:\r\n        $ref: \"#/components/requestBodies/TodoList\"\r\n      parameters:\r\n        - $ref: \"#/components/parameters/listId\"\r\n      responses:\r\n        200:\r\n          $ref: \"#/components/responses/TodoList\"\r\n        404:\r\n          description: Todo list not found\r\n        400:\r\n          description: Todo list is invalid\r\n    delete:\r\n      operationId: DeleteListById\r\n      summary: Deletes a Todo list by unique identifier\r\n      tags:\r\n        - Lists\r\n      parameters:\r\n        - $ref: \"#/components/parameters/listId\"\r\n      responses:\r\n        204:\r\n          description: Todo list deleted successfully\r\n        404:\r\n          description: Todo list not found\r\n  /lists/{listId}/items:\r\n    post:\r\n      operationId: CreateItem\r\n      summary: Creates a new Todo item within a list\r\n      tags:\r\n        - Items\r\n      requestBody:\r\n        $ref: \"#/components/requestBodies/TodoItem\"\r\n      parameters:\r\n        - $ref: \"#/components/parameters/listId\"\r\n      responses:\r\n        201:\r\n          $ref: \"#/components/responses/TodoItem\"\r\n        404:\r\n          description: Todo list not found\r\n    get:\r\n      operationId: GetItemsByListId\r\n      summary: Gets Todo items within the specified list\r\n      tags:\r\n        - Items\r\n      parameters:\r\n        - $ref: \"#/components/parameters/listId\"\r\n        - $ref: \"#/components/parameters/top\"\r\n        - $ref: \"#/components/parameters/skip\"\r\n      responses:\r\n        200:\r\n          $ref: \"#/components/responses/TodoItemArray\"\r\n        404:\r\n          description: Todo list not found\r\n  /lists/{listId}/items/{itemId}:\r\n    get:\r\n      operationId: GetItemById\r\n      summary: Gets a Todo item by unique identifier\r\n      tags:\r\n        - Items\r\n      parameters:\r\n        - $ref: \"#/components/parameters/listId\"\r\n        - $ref: \"#/components/parameters/itemId\"\r\n      responses:\r\n        200:\r\n          $ref: \"#/components/responses/TodoItem\"\r\n        404:\r\n          description: Todo list or item not found\r\n    put:\r\n      operationId: UpdateItemById\r\n      summary: Updates a Todo item by unique identifier\r\n      tags:\r\n        - Items\r\n      requestBody:\r\n        $ref: \"#/components/requestBodies/TodoItem\"\r\n      parameters:\r\n        - $ref: \"#/components/parameters/listId\"\r\n        - $ref: \"#/components/parameters/itemId\"\r\n      responses:\r\n        200:\r\n          $ref: \"#/components/responses/TodoItem\"\r\n        400:\r\n          description: Todo item is invalid\r\n        404:\r\n          description: Todo list or item not found\r\n    delete:\r\n      operationId: DeleteItemById\r\n      summary: Deletes a Todo item by unique identifier\r\n      tags:\r\n        - Items\r\n      parameters:\r\n        - $ref: \"#/components/parameters/listId\"\r\n        - $ref: \"#/components/parameters/itemId\"\r\n      responses:\r\n        204:\r\n          description: Todo item deleted successfully\r\n        404:\r\n          description: Todo list or item not found\r\n  /lists/{listId}/items/state/{state}:\r\n    get:\r\n      operationId: GetItemsByListIdAndState\r\n      summary: Gets a list of Todo items of a specific state\r\n      tags:\r\n        - Items\r\n      parameters:\r\n        - $ref: \"#/components/parameters/listId\"\r\n        - $ref: \"#/components/parameters/state\"\r\n        - $ref: \"#/components/parameters/top\"\r\n        - $ref: \"#/components/parameters/skip\"\r\n      responses:\r\n        200:\r\n          $ref: \"#/components/responses/TodoItemArray\"\r\n        404:\r\n          description: Todo list or item not found\r\n    put:\r\n      operationId: UpdateItemsStateByListId\r\n      summary: Changes the state of the specified list items\r\n      tags:\r\n        - Items\r\n      requestBody:\r\n        description: unique identifiers of the Todo items to update\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: array\r\n              items:\r\n                description: The Todo item unique identifier\r\n                type: string\r\n      parameters:\r\n        - $ref: \"#/components/parameters/listId\"\r\n        - $ref: \"#/components/parameters/state\"\r\n      responses:\r\n        204:\r\n          description: Todo items updated\r\n        400:\r\n          description: Update request is invalid",
    "apiPolicyContent": "[replace(variables('$fxv#0'), '{origin}', parameters('webFrontendUrl'))]",
    "appNameForBicep": "[if(not(empty(parameters('apiAppName'))), parameters('apiAppName'), 'placeholderName')]"
  },
  "resources": [
    {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[format('46d3xbcp.ptn.azd-apimapi.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}', parameters('name'), parameters('apiName'))]",
      "properties": {
        "description": "[parameters('apiDescription')]",
        "displayName": "[parameters('apiDisplayName')]",
        "path": "[parameters('apiPath')]",
        "protocols": [
          "https"
        ],
        "subscriptionRequired": false,
        "type": "http",
        "format": "openapi",
        "serviceUrl": "[parameters('apiBackendUrl')]",
        "value": "[variables('$fxv#1')]"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}/{2}', parameters('name'), parameters('apiName'), 'policy')]",
      "properties": {
        "format": "rawxml",
        "value": "[variables('apiPolicyContent')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), parameters('apiName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/diagnostics",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}/{2}', parameters('name'), parameters('apiName'), 'applicationinsights')]",
      "properties": {
        "alwaysLog": "allErrors",
        "backend": {
          "request": {
            "body": {
              "bytes": 1024
            }
          },
          "response": {
            "body": {
              "bytes": 1024
            }
          }
        },
        "frontend": {
          "request": {
            "body": {
              "bytes": 1024
            }
          },
          "response": {
            "body": {
              "bytes": 1024
            }
          }
        },
        "httpCorrelationProtocol": "W3C",
        "logClientIp": true,
        "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('name'), 'app-insights-logger')]",
        "metrics": true,
        "sampling": {
          "percentage": 100,
          "samplingType": "fixed"
        },
        "verbosity": "verbose"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), parameters('apiName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('apiAppName')))]",
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/web', variables('appNameForBicep'))]",
      "kind": "string",
      "properties": {
        "apiManagementConfig": {
          "id": "[format('{0}/apis/{1}', resourceId('Microsoft.ApiManagement/service', parameters('name')), parameters('apiName'))]"
        }
      }
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group."
      },
      "value": "[resourceGroup().name]"
    },
    "serviceApiUri": {
      "type": "string",
      "metadata": {
        "description": "The complete URL for accessing the API."
      },
      "value": "[format('{0}/{1}', reference(resourceId('Microsoft.ApiManagement/service', parameters('name')), '2022-08-01').gatewayUrl, parameters('apiPath'))]"
    }
  }
}