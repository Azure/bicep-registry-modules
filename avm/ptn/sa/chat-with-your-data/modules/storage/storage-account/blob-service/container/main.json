{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "17016031020562108306"
    },
    "name": "Storage Account Blob Containers",
    "description": "This module deploys a Storage Account Blob Container."
  },
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "maxLength": 24,
      "metadata": {
        "description": "Conditional. The name of the parent Storage Account. Required if the template is used in a standalone deployment."
      }
    },
    "blobServiceName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Optional. The name of the parent Blob Service. Required if the template is used in a standalone deployment."
      }
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Storage Container to deploy."
      }
    },
    "defaultEncryptionScope": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. Default the container to use specified encryption scope for all writes."
      }
    },
    "denyEncryptionScopeOverride": {
      "type": "bool",
      "nullable": true,
      "metadata": {
        "description": "Optional. Block override of encryption scope from the container default."
      }
    },
    "enableNfsV3AllSquash": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Enable NFSv3 all squash on blob container."
      }
    },
    "enableNfsV3RootSquash": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Enable NFSv3 root squash on blob container."
      }
    },
    "immutableStorageWithVersioningEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. This is an immutable property, when set to true it enables object level immutability at the container level. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process."
      }
    },
    "metadata": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.Storage/storageAccounts/blobServices/containers@2024-01-01#properties/properties/properties/metadata"
        },
        "description": "Optional. A name-value pair to associate with the container as metadata."
      },
      "defaultValue": {}
    },
    "publicAccess": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "Container",
        "Blob",
        "None"
      ],
      "metadata": {
        "description": "Optional. Specifies whether data in the container may be accessed publicly and the level of access."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    }
  },
  "resources": {
    "storageAccount::blobServices": {
      "existing": true,
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), parameters('blobServiceName'))]"
    },
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[format('46d3xbcp.res.storage-blobcontainer.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "storageAccount": {
      "existing": true,
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2024-01-01",
      "name": "[parameters('storageAccountName')]"
    },
    "container": {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), parameters('blobServiceName'), parameters('name'))]",
      "properties": {
        "defaultEncryptionScope": "[parameters('defaultEncryptionScope')]",
        "denyEncryptionScopeOverride": "[parameters('denyEncryptionScopeOverride')]",
        "enableNfsV3AllSquash": "[if(equals(parameters('enableNfsV3AllSquash'), true()), parameters('enableNfsV3AllSquash'), null())]",
        "enableNfsV3RootSquash": "[if(equals(parameters('enableNfsV3RootSquash'), true()), parameters('enableNfsV3RootSquash'), null())]",
        "immutableStorageWithVersioning": "[if(equals(parameters('immutableStorageWithVersioningEnabled'), true()), createObject('enabled', parameters('immutableStorageWithVersioningEnabled')), null())]",
        "metadata": "[parameters('metadata')]",
        "publicAccess": "[parameters('publicAccess')]"
      }
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployed container."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the deployed container."
      },
      "value": "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', parameters('storageAccountName'), parameters('blobServiceName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group of the deployed container."
      },
      "value": "[resourceGroup().name]"
    }
  }
}