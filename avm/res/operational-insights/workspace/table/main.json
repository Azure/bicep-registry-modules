{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.92.45157",
      "templateHash": "13277383761731431931"
    },
    "name": "Log Analytics Workspace Tables",
    "description": "This module deploys a Log Analytics Workspace Table.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "restoredLogsType": {
      "type": "object",
      "properties": {
        "sourceTable": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The table to restore data from."
          }
        },
        "startRestoreTime": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The timestamp to start the restore from (UTC)."
          }
        },
        "endRestoreTime": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The timestamp to end the restore by (UTC)."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The parameters of the restore operation that initiated the table."
      }
    },
    "schemaType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "metadata": {
            "description": "Required. The table name."
          }
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/columnType"
          },
          "metadata": {
            "description": "Required. A list of table custom columns."
          }
        },
        "description": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The table description."
          }
        },
        "displayName": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The table display name."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The table schema."
      }
    },
    "columnType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "metadata": {
            "description": "Required. The column name."
          }
        },
        "type": {
          "type": "string",
          "allowedValues": [
            "boolean",
            "dateTime",
            "dynamic",
            "guid",
            "int",
            "long",
            "real",
            "string"
          ],
          "metadata": {
            "description": "Required. The column type."
          }
        },
        "dataTypeHint": {
          "type": "string",
          "allowedValues": [
            "armPath",
            "guid",
            "ip",
            "uri"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. The column data type logical hint."
          }
        },
        "description": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The column description."
          }
        },
        "displayName": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Column display name."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The parameters of the table column."
      }
    },
    "searchResultsType": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "metadata": {
            "description": "Required. The search job query."
          }
        },
        "description": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The search description."
          }
        },
        "limit": {
          "type": "int",
          "nullable": true,
          "metadata": {
            "description": "Optional. Limit the search job to return up to specified number of rows."
          }
        },
        "startSearchTime": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The timestamp to start the search from (UTC)."
          }
        },
        "endSearchTime": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The timestamp to end the search by (UTC)."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The parameters of the search job that initiated the table."
      }
    },
    "roleAssignmentType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The name (as GUID) of the role assignment. If not provided, a GUID will be generated."
          }
        },
        "roleDefinitionIdOrName": {
          "type": "string",
          "metadata": {
            "description": "Required. The role to assign. You can provide either the display name of the role definition, the role definition GUID, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
          }
        },
        "principalId": {
          "type": "string",
          "metadata": {
            "description": "Required. The principal ID of the principal (user/group/identity) to assign the role to."
          }
        },
        "principalType": {
          "type": "string",
          "allowedValues": [
            "Device",
            "ForeignGroup",
            "Group",
            "ServicePrincipal",
            "User"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. The principal type of the assigned principal ID."
          }
        },
        "description": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The description of the role assignment."
          }
        },
        "condition": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\"."
          }
        },
        "conditionVersion": {
          "type": "string",
          "allowedValues": [
            "2.0"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Version of the condition."
          }
        },
        "delegatedManagedIdentityResourceId": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The Resource Id of the delegated managed identity resource."
          }
        }
      },
      "metadata": {
        "description": "An AVM-aligned type for a role assignment.",
        "__bicep_imported_from!": {
          "sourceTemplate": "br:mcr.microsoft.com/bicep/avm/utl/types/avm-common-types:0.2.1"
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the table."
      }
    },
    "workspaceName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent workspaces. Required if the template is used in a standalone deployment."
      }
    },
    "plan": {
      "type": "string",
      "defaultValue": "Analytics",
      "allowedValues": [
        "Basic",
        "Analytics"
      ],
      "metadata": {
        "description": "Optional. Instruct the system how to handle and charge the logs ingested to this table."
      }
    },
    "restoredLogs": {
      "$ref": "#/definitions/restoredLogsType",
      "nullable": true,
      "metadata": {
        "description": "Optional. Restore parameters."
      }
    },
    "retentionInDays": {
      "type": "int",
      "defaultValue": -1,
      "minValue": -1,
      "maxValue": 730,
      "metadata": {
        "description": "Optional. The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention."
      }
    },
    "schema": {
      "$ref": "#/definitions/schemaType",
      "nullable": true,
      "metadata": {
        "description": "Optional. Table's schema."
      }
    },
    "searchResults": {
      "$ref": "#/definitions/searchResultsType",
      "nullable": true,
      "metadata": {
        "description": "Optional. Parameters of the search job that initiated this table."
      }
    },
    "totalRetentionInDays": {
      "type": "int",
      "defaultValue": -1,
      "minValue": -1,
      "maxValue": 2555,
      "metadata": {
        "description": "Optional. The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention."
      }
    },
    "roleAssignments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/roleAssignmentType"
      },
      "nullable": true,
      "metadata": {
        "description": "Optional. Array of role assignments to create."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "formattedRoleAssignments",
        "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]",
        "input": "[union(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')], createObject('roleDefinitionId', coalesce(tryGet(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName), if(contains(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, '/providers/Microsoft.Authorization/roleDefinitions/'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName)))))]"
      }
    ],
    "builtInRoleNames": {
      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
      "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
      "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
      "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
      "Role Based Access Control Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]",
      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
    }
  },
  "resources": {
    "workspace": {
      "existing": true,
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('workspaceName')]"
    },
    "table": {
      "type": "Microsoft.OperationalInsights/workspaces/tables",
      "apiVersion": "2022-10-01",
      "name": "[format('{0}/{1}', parameters('workspaceName'), parameters('name'))]",
      "properties": {
        "plan": "[parameters('plan')]",
        "restoredLogs": "[parameters('restoredLogs')]",
        "retentionInDays": "[parameters('retentionInDays')]",
        "schema": "[parameters('schema')]",
        "searchResults": "[parameters('searchResults')]",
        "totalRetentionInDays": "[parameters('totalRetentionInDays')]"
      },
      "dependsOn": [
        "workspace"
      ]
    },
    "table_roleAssignments": {
      "copy": {
        "name": "table_roleAssignments",
        "count": "[length(coalesce(variables('formattedRoleAssignments'), createArray()))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}/tables/{1}', parameters('workspaceName'), parameters('name'))]",
      "name": "[coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'name'), guid(resourceId('Microsoft.OperationalInsights/workspaces/tables', parameters('workspaceName'), parameters('name')), coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId, coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId))]",
      "properties": {
        "roleDefinitionId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId]",
        "principalId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId]",
        "description": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'description')]",
        "principalType": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'principalType')]",
        "condition": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition')]",
        "conditionVersion": "[if(not(empty(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
        "delegatedManagedIdentityResourceId": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
      },
      "dependsOn": [
        "table"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the table."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the table."
      },
      "value": "[resourceId('Microsoft.OperationalInsights/workspaces/tables', parameters('workspaceName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the table was created in."
      },
      "value": "[resourceGroup().name]"
    }
  }
}