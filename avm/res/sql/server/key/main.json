{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "11118825836661698100"
    },
    "name": "Azure SQL Server Keys",
    "description": "This module deploys an Azure SQL Server Key.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the key. Must follow the [<keyVaultName>_<keyName>_<keyVersion>] pattern."
      }
    },
    "serverName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent SQL server. Required if the template is used in a standalone deployment."
      }
    },
    "serverKeyType": {
      "type": "string",
      "defaultValue": "ServiceManaged",
      "allowedValues": [
        "AzureKeyVault",
        "ServiceManaged"
      ],
      "metadata": {
        "description": "Optional. The encryption protector type like \"ServiceManaged\", \"AzureKeyVault\"."
      }
    },
    "uri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The URI of the key. If the ServerKeyType is AzureKeyVault, then either the URI or the keyVaultName/keyName combination is required."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    }
  },
  "variables": {
    "splittedKeyUri": "[split(parameters('uri'), '/')]",
    "serverKeyName": "[if(empty(parameters('uri')), 'ServiceManaged', format('{0}_{1}_{2}', split(variables('splittedKeyUri')[2], '.')[0], variables('splittedKeyUri')[4], variables('splittedKeyUri')[5]))]"
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers/keys",
      "apiVersion": "2022-05-01-preview",
      "name": "[format('{0}/{1}', parameters('serverName'), if(not(empty(parameters('name'))), parameters('name'), variables('serverKeyName')))]",
      "properties": {
        "serverKeyType": "[parameters('serverKeyType')]",
        "uri": "[parameters('uri')]"
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployed server key."
      },
      "value": "[if(not(empty(parameters('name'))), parameters('name'), variables('serverKeyName'))]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the deployed server key."
      },
      "value": "[resourceId('Microsoft.Sql/servers/keys', parameters('serverName'), if(not(empty(parameters('name'))), parameters('name'), variables('serverKeyName')))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group of the deployed server key."
      },
      "value": "[resourceGroup().name]"
    }
  }
}