{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "1780388510504326565"
    },
    "name": "Azure SQL Server Vulnerability Assessments",
    "description": "This module deploys an Azure SQL Server Vulnerability Assessment.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the vulnerability assessment."
      }
    },
    "serverName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The Name of SQL Server. Required if the template is used in a standalone deployment."
      }
    },
    "recurringScansIsEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Recurring scans state."
      }
    },
    "recurringScansEmailSubscriptionAdmins": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Specifies that the schedule scan notification will be is sent to the subscription administrators."
      }
    },
    "recurringScansEmails": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Specifies an array of email addresses to which the scan notification is sent."
      }
    },
    "storageAccountResourceId": {
      "type": "string",
      "metadata": {
        "description": "Required. A blob storage to hold the scan results."
      }
    },
    "useStorageAccountAccessKey": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Use Access Key to access the storage account. The storage account cannot be behind a firewall or virtual network. If an access key is not used, the SQL Server system assigned managed identity must be assigned the Storage Blob Data Contributor role on the storage account."
      }
    },
    "createStorageRoleAssignment": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Create the Storage Blob Data Contributor role assignment on the storage account. Note, the role assignment must not already exist on the storage account."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    }
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-9319755b-f697-4146-b966-4656e0b46cac-{0}', uniqueString(deployment().name))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
      "apiVersion": "2022-05-01-preview",
      "name": "[format('{0}/{1}', parameters('serverName'), parameters('name'))]",
      "properties": {
        "storageContainerPath": "[format('https://{0}.blob.{1}/vulnerability-assessment/', last(split(parameters('storageAccountResourceId'), '/')), environment().suffixes.storage)]",
        "storageAccountAccessKey": "[if(parameters('useStorageAccountAccessKey'), listKeys(parameters('storageAccountResourceId'), '2019-06-01').keys[0].value, null())]",
        "recurringScans": {
          "isEnabled": "[parameters('recurringScansIsEnabled')]",
          "emailSubscriptionAdmins": "[parameters('recurringScansEmailSubscriptionAdmins')]",
          "emails": "[parameters('recurringScansEmails')]"
        }
      }
    },
    {
      "condition": "[and(not(parameters('useStorageAccountAccessKey')), parameters('createStorageRoleAssignment'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-sbdc-rbac', parameters('serverName'))]",
      "resourceGroup": "[split(parameters('storageAccountResourceId'), '/')[4]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[last(split(parameters('storageAccountResourceId'), '/'))]"
          },
          "managedInstanceIdentityPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Sql/servers', parameters('serverName')), '2022-05-01-preview', 'full').identity.principalId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "9210546972730714858"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "managedInstanceIdentityPrincipalId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(format('{0}-{1}-Storage-Blob-Data-Contributor', resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('managedInstanceIdentityPrincipalId')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[parameters('managedInstanceIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployed vulnerability assessment."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the deployed vulnerability assessment."
      },
      "value": "[resourceId('Microsoft.Sql/servers/vulnerabilityAssessments', parameters('serverName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group of the deployed vulnerability assessment."
      },
      "value": "[resourceGroup().name]"
    }
  }
}