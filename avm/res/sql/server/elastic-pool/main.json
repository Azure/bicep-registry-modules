{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "8266622523187177483"
    },
    "name": "SQL Server Elastic Pool",
    "description": "This module deploys an Azure SQL Server Elastic Pool."
  },
  "definitions": {
    "perDatabaseSettingsType": {
      "type": "object",
      "properties": {
        "autoPauseDelay": {
          "type": "int",
          "nullable": true,
          "metadata": {
            "description": "Optional. Auto Pause Delay for per database within pool."
          }
        },
        "maxCapacity": {
          "type": "string",
          "metadata": {
            "description": "Required. The maximum capacity any one database can consume. Examples: '0.5', '2'."
          }
        },
        "minCapacity": {
          "type": "string",
          "metadata": {
            "description": "Required. The minimum capacity all databases are guaranteed. Examples: '0.5', '1'."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The per database settings for the elastic pool."
      }
    },
    "skuType": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "int",
          "nullable": true,
          "metadata": {
            "description": "Optional. The capacity of the particular SKU."
          }
        },
        "family": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. If the service has different generations of hardware, for the same SKU, then that can be captured here."
          }
        },
        "name": {
          "type": "string",
          "allowedValues": [
            "BC_DC",
            "BC_Gen5",
            "BasicPool",
            "GP_DC",
            "GP_FSv2",
            "GP_Gen5",
            "HS_Gen5",
            "HS_MOPRMS",
            "HS_PRMS",
            "PremiumPool",
            "ServerlessPool",
            "StandardPool"
          ],
          "metadata": {
            "description": "Required. The name of the SKU, typically, a letter + Number code, e.g. P3."
          }
        },
        "size": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Size of the particular SKU."
          }
        },
        "tier": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The tier or edition of the particular SKU, e.g. Basic, Premium."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The elastic pool SKU."
      }
    },
    "lockType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the name of lock."
          }
        },
        "kind": {
          "type": "string",
          "allowedValues": [
            "CanNotDelete",
            "None",
            "ReadOnly"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the type of lock."
          }
        }
      },
      "metadata": {
        "description": "An AVM-aligned type for a lock.",
        "__bicep_imported_from!": {
          "sourceTemplate": "br:mcr.microsoft.com/bicep/avm/utl/types/avm-common-types:0.5.1"
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Elastic Pool."
      }
    },
    "serverName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent SQL Server. Required if the template is used in a standalone deployment."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "lock": {
      "$ref": "#/definitions/lockType",
      "nullable": true,
      "metadata": {
        "description": "Optional. The lock settings of the elastic pool."
      }
    },
    "sku": {
      "$ref": "#/definitions/skuType",
      "defaultValue": {
        "capacity": 2,
        "name": "GP_Gen5",
        "tier": "GeneralPurpose"
      },
      "metadata": {
        "description": "Optional. The elastic pool SKU."
      }
    },
    "autoPauseDelay": {
      "type": "int",
      "defaultValue": -1,
      "metadata": {
        "description": "Optional. Time in minutes after which elastic pool is automatically paused. A value of -1 means that automatic pause is disabled."
      }
    },
    "availabilityZone": {
      "type": "int",
      "allowedValues": [
        -1,
        1,
        2,
        3
      ],
      "metadata": {
        "description": "Required. If set to 1, 2 or 3, the availability zone is hardcoded to that value. If set to -1, no zone is defined. Note that the availability zone numbers here are the logical availability zone in your Azure subscription. Different subscriptions might have a different mapping of the physical zone and logical zone. To understand more, please refer to [Physical and logical availability zones](https://learn.microsoft.com/en-us/azure/reliability/availability-zones-overview?tabs=azure-cli#physical-and-logical-availability-zones)."
      }
    },
    "highAvailabilityReplicaCount": {
      "type": "int",
      "nullable": true,
      "metadata": {
        "description": "Optional. The number of secondary replicas associated with the elastic pool that are used to provide high availability. Applicable only to Hyperscale elastic pools."
      }
    },
    "licenseType": {
      "type": "string",
      "defaultValue": "LicenseIncluded",
      "allowedValues": [
        "BasePrice",
        "LicenseIncluded"
      ],
      "metadata": {
        "description": "Optional. The license type to apply for this elastic pool."
      }
    },
    "maintenanceConfigurationId": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. Maintenance configuration resource ID assigned to the elastic pool. This configuration defines the period when the maintenance updates will will occur."
      }
    },
    "maxSizeBytes": {
      "type": "int",
      "defaultValue": 34359738368,
      "metadata": {
        "description": "Optional. The storage limit for the database elastic pool in bytes."
      }
    },
    "minCapacity": {
      "type": "int",
      "nullable": true,
      "metadata": {
        "description": "Optional. Minimal capacity that serverless pool will not shrink below, if not paused."
      }
    },
    "perDatabaseSettings": {
      "$ref": "#/definitions/perDatabaseSettingsType",
      "defaultValue": {
        "autoPauseDelay": -1,
        "maxCapacity": "2",
        "minCapacity": "0"
      },
      "metadata": {
        "description": "Optional. The per database settings for the elastic pool."
      }
    },
    "preferredEnclaveType": {
      "type": "string",
      "allowedValues": [
        "Default",
        "VBS"
      ],
      "defaultValue": "Default",
      "metadata": {
        "description": "Optional. Type of enclave requested on the elastic pool."
      }
    },
    "zoneRedundant": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones."
      }
    }
  },
  "resources": {
    "server": {
      "existing": true,
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2023-08-01",
      "name": "[parameters('serverName')]"
    },
    "elasticPool": {
      "type": "Microsoft.Sql/servers/elasticPools",
      "apiVersion": "2023-08-01",
      "name": "[format('{0}/{1}', parameters('serverName'), parameters('name'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": "[parameters('sku')]",
      "properties": {
        "autoPauseDelay": "[parameters('autoPauseDelay')]",
        "availabilityZone": "[if(not(equals(parameters('availabilityZone'), -1)), string(parameters('availabilityZone')), 'NoPreference')]",
        "highAvailabilityReplicaCount": "[parameters('highAvailabilityReplicaCount')]",
        "licenseType": "[parameters('licenseType')]",
        "maintenanceConfigurationId": "[parameters('maintenanceConfigurationId')]",
        "maxSizeBytes": "[parameters('maxSizeBytes')]",
        "minCapacity": "[parameters('minCapacity')]",
        "perDatabaseSettings": "[if(not(empty(parameters('perDatabaseSettings'))), createObject('autoPauseDelay', tryGet(parameters('perDatabaseSettings'), 'autoPauseDelay'), 'maxCapacity', json(tryGet(parameters('perDatabaseSettings'), 'maxCapacity')), 'minCapacity', json(tryGet(parameters('perDatabaseSettings'), 'minCapacity'))), null())]",
        "preferredEnclaveType": "[parameters('preferredEnclaveType')]",
        "zoneRedundant": "[parameters('zoneRedundant')]"
      }
    },
    "elasticPool_lock": {
      "condition": "[and(not(empty(coalesce(parameters('lock'), createObject()))), not(equals(tryGet(parameters('lock'), 'kind'), 'None')))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.Sql/servers/{0}/elasticPools/{1}', parameters('serverName'), parameters('name'))]",
      "name": "[coalesce(tryGet(parameters('lock'), 'name'), format('lock-{0}', parameters('name')))]",
      "properties": {
        "level": "[coalesce(tryGet(parameters('lock'), 'kind'), '')]",
        "notes": "[if(equals(tryGet(parameters('lock'), 'kind'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot delete or modify the resource or child resources.')]"
      },
      "dependsOn": [
        "elasticPool"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployed Elastic Pool."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the deployed Elastic Pool."
      },
      "value": "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('serverName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group of the deployed Elastic Pool."
      },
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference('elasticPool', '2023-08-01', 'full').location]"
    }
  }
}