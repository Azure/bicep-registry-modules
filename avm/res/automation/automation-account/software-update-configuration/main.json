{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "11568533167274650070"
    },
    "name": "Automation Account Software Update Configurations",
    "description": "This module deploys an Azure Automation Account Software Update Configuration.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Deployment schedule."
      }
    },
    "automationAccountName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent Automation Account. Required if the template is used in a standalone deployment."
      }
    },
    "operatingSystem": {
      "type": "string",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "metadata": {
        "description": "Required. The operating system to be configured by the deployment schedule."
      }
    },
    "rebootSetting": {
      "type": "string",
      "allowedValues": [
        "IfRequired",
        "Never",
        "RebootOnly",
        "Always"
      ],
      "metadata": {
        "description": "Required. Reboot setting for the deployment schedule."
      }
    },
    "frequency": {
      "type": "string",
      "allowedValues": [
        "OneTime",
        "Hour",
        "Day",
        "Week",
        "Month"
      ],
      "metadata": {
        "description": "Required. The frequency of the deployment schedule. When using 'Hour', 'Day', 'Week' or 'Month', an interval needs to be provided."
      }
    },
    "maintenanceWindow": {
      "type": "string",
      "defaultValue": "PT2H",
      "metadata": {
        "description": "Optional. Maximum time allowed for the deployment schedule to run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601."
      }
    },
    "updateClassifications": {
      "type": "array",
      "defaultValue": [
        "Critical",
        "Security"
      ],
      "allowedValues": [
        "Critical",
        "Security",
        "UpdateRollup",
        "FeaturePack",
        "ServicePack",
        "Definition",
        "Tools",
        "Updates",
        "Other"
      ],
      "metadata": {
        "description": "Optional. Update classification included in the deployment schedule."
      }
    },
    "excludeUpdates": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. KB numbers or Linux packages excluded in the deployment schedule."
      }
    },
    "includeUpdates": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. KB numbers or Linux packages included in the deployment schedule."
      }
    },
    "scopeByResources": {
      "type": "array",
      "defaultValue": [
        "[subscription().id]"
      ],
      "metadata": {
        "description": "Optional. Specify the resources to scope the deployment schedule to."
      }
    },
    "scopeByTags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Specify tags to which to scope the deployment schedule to."
      }
    },
    "scopeByTagsOperation": {
      "type": "string",
      "defaultValue": "All",
      "allowedValues": [
        "All",
        "Any"
      ],
      "metadata": {
        "description": "Optional. Enables the scopeByTags to require All (Tag A and Tag B) or Any (Tag A or Tag B)."
      }
    },
    "scopeByLocations": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Specify locations to which to scope the deployment schedule to."
      }
    },
    "preTaskParameters": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Parameters provided to the task running before the deployment schedule."
      }
    },
    "preTaskSource": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The source of the task running before the deployment schedule."
      }
    },
    "postTaskParameters": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Parameters provided to the task running after the deployment schedule."
      }
    },
    "postTaskSource": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The source of the task running after the deployment schedule."
      }
    },
    "interval": {
      "type": "int",
      "defaultValue": 1,
      "maxValue": 100,
      "metadata": {
        "description": "Optional. The interval of the frequency for the deployment schedule. 1 Hour is every hour, 2 Day is every second day, etc."
      }
    },
    "isEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enables the deployment schedule."
      }
    },
    "timeZone": {
      "type": "string",
      "defaultValue": "UTC",
      "metadata": {
        "description": "Optional. Time zone for the deployment schedule. IANA ID or a Windows Time Zone ID."
      }
    },
    "nonAzureQueries": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of functions from a Log Analytics workspace, used to scope the deployment schedule."
      }
    },
    "azureVirtualMachines": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of azure resource IDs for azure virtual machines in scope for the deployment schedule."
      }
    },
    "nonAzureComputerNames": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of names of non-azure machines in scope for the deployment schedule."
      }
    },
    "weekDays": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "nullable": true,
      "allowedValues": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ],
      "metadata": {
        "description": "Optional. Required when used with frequency 'Week'. Specified the day of the week to run the deployment schedule."
      }
    },
    "monthDays": {
      "type": "array",
      "items": {
        "type": "int"
      },
      "nullable": true,
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31
      ],
      "metadata": {
        "description": "Optional. Can be used with frequency 'Month'. Provides the specific days of the month to run the deployment schedule."
      }
    },
    "monthlyOccurrences": {
      "type": "array",
      "nullable": true,
      "metadata": {
        "description": "Optional. Can be used with frequency 'Month'. Provides the pattern/cadence for running the deployment schedule in a month. Takes objects formed like this {occurance(int),day(string)}. Day is the name of the day to run the deployment schedule, the occurance specifies which occurance of that day to run the deployment schedule."
      }
    },
    "startTime": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The start time of the deployment schedule in ISO 8601 format. To specify a specific time use YYYY-MM-DDTHH:MM:SS, 2021-12-31T23:00:00. For schedules where we want to start the deployment as soon as possible, specify the time segment only in 24 hour format, HH:MM, 22:00."
      }
    },
    "expiryTime": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The end time of the deployment schedule in ISO 8601 format. YYYY-MM-DDTHH:MM:SS, 2021-12-31T23:00:00."
      }
    },
    "expiryTimeOffsetMinutes": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. The expiry time's offset in minutes."
      }
    },
    "nextRun": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The next time the deployment schedule runs in ISO 8601 format. YYYY-MM-DDTHH:MM:SS, 2021-12-31T23:00:00."
      }
    },
    "nextRunOffsetMinutes": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. The next run's offset in minutes."
      }
    },
    "scheduleDescription": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The schedules description."
      }
    },
    "baseTime": {
      "type": "string",
      "defaultValue": "[utcNow('u')]",
      "metadata": {
        "description": "Generated. Do not touch. Is used to provide the base time for time comparison for startTime. If startTime is specified in HH:MM format, baseTime is used to check if the provided startTime has passed, adding one day before setting the deployment schedule."
      }
    }
  },
  "variables": {
    "updateClassificationsVar": "[replace(replace(replace(replace(string(parameters('updateClassifications')), ',', ', '), '[', ''), ']', ''), '\"', '')]"
  },
  "resources": {
    "automationAccount": {
      "existing": true,
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2022-08-08",
      "name": "[parameters('automationAccountName')]"
    },
    "softwareUpdateConfiguration": {
      "type": "Microsoft.Automation/automationAccounts/softwareUpdateConfigurations",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('name'))]",
      "properties": {
        "updateConfiguration": {
          "operatingSystem": "[parameters('operatingSystem')]",
          "duration": "[parameters('maintenanceWindow')]",
          "linux": "[if(equals(parameters('operatingSystem'), 'Linux'), createObject('excludedPackageNameMasks', parameters('excludeUpdates'), 'includedPackageNameMasks', parameters('includeUpdates'), 'includedPackageClassifications', variables('updateClassificationsVar'), 'rebootSetting', parameters('rebootSetting')), null())]",
          "windows": "[if(equals(parameters('operatingSystem'), 'Windows'), createObject('excludedKbNumbers', parameters('excludeUpdates'), 'includedKbNumbers', parameters('includeUpdates'), 'includedUpdateClassifications', variables('updateClassificationsVar'), 'rebootSetting', parameters('rebootSetting')), null())]",
          "targets": {
            "azureQueries": [
              {
                "scope": "[parameters('scopeByResources')]",
                "tagSettings": {
                  "tags": "[parameters('scopeByTags')]",
                  "filterOperator": "[parameters('scopeByTagsOperation')]"
                },
                "locations": "[parameters('scopeByLocations')]"
              }
            ],
            "nonAzureQueries": "[parameters('nonAzureQueries')]"
          },
          "azureVirtualMachines": "[parameters('azureVirtualMachines')]",
          "nonAzureComputerNames": "[parameters('nonAzureComputerNames')]"
        },
        "tasks": {
          "preTask": {
            "parameters": "[parameters('preTaskParameters')]",
            "source": "[parameters('preTaskSource')]"
          },
          "postTask": {
            "parameters": "[parameters('postTaskParameters')]",
            "source": "[parameters('postTaskSource')]"
          }
        },
        "scheduleInfo": {
          "interval": "[parameters('interval')]",
          "frequency": "[parameters('frequency')]",
          "isEnabled": "[parameters('isEnabled')]",
          "timeZone": "[parameters('timeZone')]",
          "advancedSchedule": {
            "weekDays": "[parameters('weekDays')]",
            "monthDays": "[parameters('monthDays')]",
            "monthlyOccurrences": "[parameters('monthlyOccurrences')]"
          },
          "startTime": "[if(empty(parameters('startTime')), dateTimeAdd(parameters('baseTime'), 'PT10M'), parameters('startTime'))]",
          "expiryTime": "[parameters('expiryTime')]",
          "expiryTimeOffsetMinutes": "[parameters('expiryTimeOffsetMinutes')]",
          "nextRun": "[parameters('nextRun')]",
          "nextRunOffsetMinutes": "[parameters('nextRunOffsetMinutes')]",
          "description": "[parameters('scheduleDescription')]"
        }
      }
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployed softwareUpdateConfiguration."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the deployed softwareUpdateConfiguration."
      },
      "value": "[resourceId('Microsoft.Automation/automationAccounts/softwareUpdateConfigurations', parameters('automationAccountName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group of the deployed softwareUpdateConfiguration."
      },
      "value": "[resourceGroup().name]"
    }
  }
}