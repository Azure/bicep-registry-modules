{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "6629339591821662719"
    },
    "name": "API Management Service APIs Operations",
    "description": "This module deploys an API Management Service API Operation."
  },
  "definitions": {
    "policyType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "metadata": {
            "description": "Required. The name of the policy."
          }
        },
        "format": {
          "type": "string",
          "allowedValues": [
            "rawxml",
            "rawxml-link",
            "xml",
            "xml-link"
          ],
          "metadata": {
            "description": "Required. Format of the policyContent."
          }
        },
        "value": {
          "type": "string",
          "metadata": {
            "description": "Required. Contents of the Policy as defined by the format."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The type of a policy."
      }
    }
  },
  "parameters": {
    "apiManagementServiceName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent API Management service. Required if the template is used in a standalone deployment."
      }
    },
    "apiName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent API. Required if the template is used in a standalone deployment."
      }
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the operation."
      }
    },
    "displayName": {
      "type": "string",
      "metadata": {
        "description": "Required. The display name of the operation."
      }
    },
    "policies": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/policyType"
      },
      "nullable": true,
      "metadata": {
        "description": "Optional. The policies to apply to the operation."
      }
    },
    "method": {
      "type": "string",
      "metadata": {
        "description": "Required. A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them."
      }
    },
    "urlTemplate": {
      "type": "string",
      "metadata": {
        "description": "Required. Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}."
      }
    },
    "description": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. Description of the operation. May include HTML formatting tags. Must not be longer than 1.000 characters."
      }
    },
    "request": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.ApiManagement/service/apis/operations@2024-05-01#properties/properties/properties/request"
        },
        "description": "Optional. An entity containing request details."
      },
      "nullable": true
    },
    "responses": {
      "type": "array",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.ApiManagement/service/apis/operations@2024-05-01#properties/properties/properties/responses"
        },
        "description": "Optional. An entity containing request details."
      },
      "nullable": true
    },
    "templateParameters": {
      "type": "array",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.ApiManagement/service/apis/operations@2024-05-01#properties/properties/properties/templateParameters"
        },
        "description": "Optional. Collection of URL template parameters."
      },
      "nullable": true
    }
  },
  "resources": {
    "service::api": {
      "existing": true,
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}', parameters('apiManagementServiceName'), parameters('apiName'))]"
    },
    "service": {
      "existing": true,
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2023-05-01-preview",
      "name": "[parameters('apiManagementServiceName')]"
    },
    "operation": {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}/{1}/{2}', parameters('apiManagementServiceName'), parameters('apiName'), parameters('name'))]",
      "properties": {
        "displayName": "[parameters('displayName')]",
        "method": "[parameters('method')]",
        "urlTemplate": "[parameters('urlTemplate')]",
        "description": "[parameters('description')]",
        "request": "[parameters('request')]",
        "responses": "[parameters('responses')]",
        "templateParameters": "[parameters('templateParameters')]"
      }
    },
    "policy": {
      "copy": {
        "name": "policy",
        "count": "[length(coalesce(parameters('policies'), createArray()))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Policy-{1}', deployment().name, copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "apiManagementServiceName": {
            "value": "[parameters('apiManagementServiceName')]"
          },
          "apiName": {
            "value": "[parameters('apiName')]"
          },
          "operationName": {
            "value": "[parameters('name')]"
          },
          "name": {
            "value": "[coalesce(parameters('policies'), createArray())[copyIndex()].name]"
          },
          "format": {
            "value": "[coalesce(parameters('policies'), createArray())[copyIndex()].format]"
          },
          "value": {
            "value": "[coalesce(parameters('policies'), createArray())[copyIndex()].value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.35.1.17967",
              "templateHash": "15561539799762283135"
            },
            "name": "API Management Service API Operation Policies",
            "description": "This module deploys an API Management Service API Operation Policy."
          },
          "parameters": {
            "apiManagementServiceName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent API Management service. Required if the template is used in a standalone deployment."
              }
            },
            "apiName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent API. Required if the template is used in a standalone deployment."
              }
            },
            "operationName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent operation. Required if the template is used in a standalone deployment."
              }
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the policy."
              }
            },
            "format": {
              "type": "string",
              "allowedValues": [
                "rawxml",
                "rawxml-link",
                "xml",
                "xml-link"
              ],
              "metadata": {
                "description": "Required. Format of the policyContent."
              }
            },
            "value": {
              "type": "string",
              "metadata": {
                "description": "Required. Contents of the Policy as defined by the format."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service/apis/operations/policies",
              "apiVersion": "2022-08-01",
              "name": "[format('{0}/{1}/{2}/{3}', parameters('apiManagementServiceName'), parameters('apiName'), parameters('operationName'), parameters('name'))]",
              "properties": {
                "value": "[parameters('value')]",
                "format": "[parameters('format')]"
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the policy."
              },
              "value": "[resourceId('Microsoft.ApiManagement/service/apis/operations/policies', parameters('apiManagementServiceName'), parameters('apiName'), parameters('operationName'), parameters('name'))]"
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the policy."
              },
              "value": "[parameters('name')]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The resource group the policy was deployed into."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "operation"
      ]
    }
  },
  "outputs": {
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the operation."
      },
      "value": "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apiManagementServiceName'), parameters('apiName'), parameters('name'))]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the operation."
      },
      "value": "[parameters('name')]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group the operation was deployed into."
      },
      "value": "[resourceGroup().name]"
    }
  }
}