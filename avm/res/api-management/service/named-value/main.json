{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "16893893897869493831"
    },
    "name": "API Management Service Named Values",
    "description": "This module deploys an API Management Service Named Value.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "apiManagementServiceName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent API Management service. Required if the template is used in a standalone deployment."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    },
    "displayName": {
      "type": "string",
      "metadata": {
        "description": "Required. Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters."
      }
    },
    "keyVault": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. KeyVault location details of the namedValue."
      }
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Named value Name."
      }
    },
    "tags": {
      "type": "array",
      "nullable": true,
      "metadata": {
        "description": "Optional. Tags that when provided can be used to filter the NamedValue list. - string."
      }
    },
    "secret": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Determines whether the value is a secret and should be encrypted or not. Default value is false."
      }
    },
    "value": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Optional. Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
      }
    }
  },
  "variables": {
    "keyVaultEmpty": "[empty(parameters('keyVault'))]"
  },
  "resources": {
    "defaultTelemetry": {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    "service": {
      "existing": true,
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2021-08-01",
      "name": "[parameters('apiManagementServiceName')]"
    },
    "namedValue": {
      "type": "Microsoft.ApiManagement/service/namedValues",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}', parameters('apiManagementServiceName'), parameters('name'))]",
      "properties": {
        "tags": "[parameters('tags')]",
        "secret": "[parameters('secret')]",
        "displayName": "[parameters('displayName')]",
        "value": "[if(variables('keyVaultEmpty'), parameters('value'), null())]",
        "keyVault": "[if(not(variables('keyVaultEmpty')), parameters('keyVault'), null())]"
      },
      "dependsOn": [
        "service"
      ]
    }
  },
  "outputs": {
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the named value."
      },
      "value": "[resourceId('Microsoft.ApiManagement/service/namedValues', parameters('apiManagementServiceName'), parameters('name'))]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the named value."
      },
      "value": "[parameters('name')]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group the named value was deployed into."
      },
      "value": "[resourceGroup().name]"
    }
  }
}