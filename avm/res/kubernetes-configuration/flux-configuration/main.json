{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "6151400759094139789"
    },
    "name": "Kubernetes Configuration Flux Configurations",
    "description": "This module deploys a Kubernetes Configuration Flux Configuration."
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Flux Configuration."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the AKS cluster that should be configured."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "clusterType": {
      "type": "string",
      "defaultValue": "managedCluster",
      "allowedValues": [
        "managedCluster",
        "connectedCluster"
      ],
      "metadata": {
        "description": "Optional. The type of cluster to configure. Choose between AKS managed cluster or Arc-enabled connected cluster."
      }
    },
    "bucket": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.KubernetesConfiguration/fluxConfigurations@2025-04-01#properties/properties/properties/bucket"
        },
        "description": "Conditional. Parameters to reconcile to the GitRepository source kind type. Required if `sourceKind` is `Bucket`."
      },
      "nullable": true
    },
    "configurationProtectedSettings": {
      "type": "secureObject",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.KubernetesConfiguration/fluxConfigurations@2025-04-01#properties/properties/properties/configurationProtectedSettings"
        },
        "description": "Optional. Key-value pairs of protected configuration settings for the configuration."
      },
      "nullable": true
    },
    "gitRepository": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.KubernetesConfiguration/fluxConfigurations@2025-04-01#properties/properties/properties/gitRepository"
        },
        "description": "Conditional. Parameters to reconcile to the GitRepository source kind type. Required if `sourceKind` is `GitRepository`."
      },
      "nullable": true
    },
    "ociRepository": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.KubernetesConfiguration/fluxConfigurations@2025-04-01#properties/properties/properties/ociRepository"
        },
        "description": "Conditional. Parameters to reconcile to the GitRepository source kind type. Required if `sourceKind` is `OciRepository`."
      },
      "nullable": true
    },
    "azureBlob": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.KubernetesConfiguration/fluxConfigurations@2025-04-01#properties/properties/properties/azureBlob"
        },
        "description": "Conditional. Parameters to reconcile to the GitRepository source kind type. Required if `sourceKind` is `AzureBlob`."
      },
      "nullable": true
    },
    "kustomizations": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.KubernetesConfiguration/fluxConfigurations@2025-04-01#properties/properties/properties/kustomizations"
        },
        "description": "Required. Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster."
      }
    },
    "namespace": {
      "type": "string",
      "metadata": {
        "description": "Required. The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only."
      }
    },
    "scope": {
      "type": "string",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.KubernetesConfiguration/fluxConfigurations@2025-04-01#properties/properties/properties/scope"
        },
        "description": "Required. Scope at which the configuration will be installed."
      }
    },
    "sourceKind": {
      "type": "string",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.KubernetesConfiguration/fluxConfigurations@2025-04-01#properties/properties/properties/sourceKind"
        },
        "description": "Required. Source Kind to pull the configuration data from."
      }
    },
    "reconciliationWaitDuration": {
      "type": "string",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.KubernetesConfiguration/fluxConfigurations@2025-04-01#properties/properties/properties/reconciliationWaitDuration"
        },
        "description": "Optional. Reconciliation wait duration (ISO 8601 format)."
      },
      "nullable": true
    },
    "suspend": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Whether this configuration should suspend its reconciliation of its kustomizations and sources."
      }
    }
  },
  "variables": {
    "fluxConfigProperties": {
      "scope": "[parameters('scope')]",
      "namespace": "[parameters('namespace')]",
      "sourceKind": "[parameters('sourceKind')]",
      "suspend": "[parameters('suspend')]",
      "reconciliationWaitDuration": "[parameters('reconciliationWaitDuration')]",
      "gitRepository": "[parameters('gitRepository')]",
      "azureBlob": "[parameters('azureBlob')]",
      "bucket": "[parameters('bucket')]",
      "configurationProtectedSettings": "[parameters('configurationProtectedSettings')]",
      "ociRepository": "[parameters('ociRepository')]",
      "kustomizations": "[parameters('kustomizations')]"
    }
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[format('46d3xbcp.res.kubernetesconfiguration-fluxconfig.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "managedCluster": {
      "condition": "[equals(parameters('clusterType'), 'managedCluster')]",
      "existing": true,
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2025-04-01",
      "name": "[parameters('clusterName')]"
    },
    "connectedCluster": {
      "condition": "[equals(parameters('clusterType'), 'connectedCluster')]",
      "existing": true,
      "type": "Microsoft.Kubernetes/connectedClusters",
      "apiVersion": "2024-01-01",
      "name": "[parameters('clusterName')]"
    },
    "fluxConfigurationManaged": {
      "condition": "[equals(parameters('clusterType'), 'managedCluster')]",
      "type": "Microsoft.KubernetesConfiguration/fluxConfigurations",
      "apiVersion": "2025-04-01",
      "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', parameters('clusterName'))]",
      "name": "[parameters('name')]",
      "properties": "[variables('fluxConfigProperties')]"
    },
    "fluxConfigurationConnected": {
      "condition": "[equals(parameters('clusterType'), 'connectedCluster')]",
      "type": "Microsoft.KubernetesConfiguration/fluxConfigurations",
      "apiVersion": "2025-04-01",
      "scope": "[format('Microsoft.Kubernetes/connectedClusters/{0}', parameters('clusterName'))]",
      "name": "[parameters('name')]",
      "properties": "[variables('fluxConfigProperties')]"
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the flux configuration."
      },
      "value": "[if(equals(parameters('clusterType'), 'managedCluster'), parameters('name'), parameters('name'))]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the flux configuration."
      },
      "value": "[if(equals(parameters('clusterType'), 'managedCluster'), extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), 'Microsoft.KubernetesConfiguration/fluxConfigurations', parameters('name')), extensionResourceId(resourceId('Microsoft.Kubernetes/connectedClusters', parameters('clusterName')), 'Microsoft.KubernetesConfiguration/fluxConfigurations', parameters('name')))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the flux configuration was deployed into."
      },
      "value": "[resourceGroup().name]"
    }
  }
}