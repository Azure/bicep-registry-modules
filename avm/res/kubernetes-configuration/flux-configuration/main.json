{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.21.1.54444",
      "templateHash": "11648869363176032755"
    },
    "name": "Kubernetes Configuration Flux Configurations",
    "description": "This module deploys a Kubernetes Configuration Flux Configuration.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Flux Configuration."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the AKS cluster that should be configured."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "bucket": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Parameters to reconcile to the GitRepository source kind type."
      }
    },
    "configurationProtectedSettings": {
      "type": "secureObject",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Key-value pairs of protected configuration settings for the configuration."
      }
    },
    "gitRepository": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Parameters to reconcile to the GitRepository source kind type."
      }
    },
    "kustomizations": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster."
      }
    },
    "namespace": {
      "type": "string",
      "metadata": {
        "description": "Required. The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only."
      }
    },
    "scope": {
      "type": "string",
      "allowedValues": [
        "cluster",
        "namespace"
      ],
      "metadata": {
        "description": "Required. Scope at which the configuration will be installed."
      }
    },
    "sourceKind": {
      "type": "string",
      "allowedValues": [
        "Bucket",
        "GitRepository"
      ],
      "metadata": {
        "description": "Required. Source Kind to pull the configuration data from."
      }
    },
    "suspend": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Whether this configuration should suspend its reconciliation of its kustomizations and sources."
      }
    }
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.KubernetesConfiguration/fluxConfigurations",
      "apiVersion": "2022-03-01",
      "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', parameters('clusterName'))]",
      "name": "[parameters('name')]",
      "properties": {
        "bucket": "[if(not(empty(parameters('bucket'))), parameters('bucket'), null())]",
        "configurationProtectedSettings": "[if(not(empty(parameters('configurationProtectedSettings'))), parameters('configurationProtectedSettings'), createObject())]",
        "gitRepository": "[if(not(empty(parameters('gitRepository'))), parameters('gitRepository'), null())]",
        "kustomizations": "[if(not(empty(parameters('kustomizations'))), parameters('kustomizations'), createObject())]",
        "namespace": "[parameters('namespace')]",
        "scope": "[parameters('scope')]",
        "sourceKind": "[parameters('sourceKind')]",
        "suspend": "[parameters('suspend')]"
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the flux configuration."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the flux configuration."
      },
      "value": "[extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), 'Microsoft.KubernetesConfiguration/fluxConfigurations', parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the flux configuration was deployed into."
      },
      "value": "[resourceGroup().name]"
    }
  }
}