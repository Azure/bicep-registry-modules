{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "18446018266032220508"
    },
    "name": "Role Assignments (Resource Group scope)",
    "description": "This module deploys a Role Assignment to a Resource Group scope."
  },
  "parameters": {
    "name": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The name (as GUID) of the role assignment. If not provided, a GUID will be generated."
      }
    },
    "roleDefinitionIdOrName": {
      "type": "string",
      "metadata": {
        "description": "Required. You can provide either the display name of the role definition (must be configured in the variable `builtInRoleNames`), or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
      }
    },
    "principalId": {
      "type": "string",
      "metadata": {
        "description": "Required. The Principal or Object ID of the Security Principal (User, Group, Service Principal, Managed Identity)."
      }
    },
    "description": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The description of the role assignment."
      }
    },
    "delegatedManagedIdentityResourceId": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. ID of the delegated managed identity resource."
      }
    },
    "condition": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to."
      }
    },
    "conditionVersion": {
      "type": "string",
      "defaultValue": "2.0",
      "allowedValues": [
        "2.0"
      ],
      "metadata": {
        "description": "Optional. The version of the condition."
      }
    },
    "principalType": {
      "type": "string",
      "nullable": true,
      "allowedValues": [
        "ServicePrincipal",
        "Group",
        "User",
        "ForeignGroup",
        "Device"
      ],
      "metadata": {
        "description": "Optional. The principal type of the assigned principal ID."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    }
  },
  "variables": {
    "builtInRoleNames": {
      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
      "Role Based Access Control Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]",
      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
    },
    "roleDefinitionIdVar": "[coalesce(tryGet(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), if(contains(parameters('roleDefinitionIdOrName'), '/providers/Microsoft.Authorization/roleDefinitions/'), parameters('roleDefinitionIdOrName'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionIdOrName'))))]"
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[format('\t46d3xbcp.res.authz-roleassignment_scoperg.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "roleAssignment": {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[coalesce(parameters('name'), guid(subscription().id, resourceGroup().name, variables('roleDefinitionIdVar'), parameters('principalId')))]",
      "properties": {
        "roleDefinitionId": "[variables('roleDefinitionIdVar')]",
        "principalId": "[parameters('principalId')]",
        "description": "[parameters('description')]",
        "principalType": "[parameters('principalType')]",
        "delegatedManagedIdentityResourceId": "[parameters('delegatedManagedIdentityResourceId')]",
        "conditionVersion": "[if(and(not(empty(parameters('conditionVersion'))), not(empty(parameters('condition')))), parameters('conditionVersion'), null())]",
        "condition": "[parameters('condition')]"
      }
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The GUID of the Role Assignment."
      },
      "value": "[coalesce(parameters('name'), guid(subscription().id, resourceGroup().name, variables('roleDefinitionIdVar'), parameters('principalId')))]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the Role Assignment."
      },
      "value": "[resourceId('Microsoft.Authorization/roleAssignments', coalesce(parameters('name'), guid(subscription().id, resourceGroup().name, variables('roleDefinitionIdVar'), parameters('principalId'))))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the role assignment was applied at."
      },
      "value": "[resourceGroup().name]"
    },
    "scope": {
      "type": "string",
      "metadata": {
        "description": "The scope this Role Assignment applies to."
      },
      "value": "[resourceGroup().id]"
    }
  }
}