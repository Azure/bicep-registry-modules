{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "13077585072840054812"
    },
    "name": "Event Grid System Topic Event Subscriptions",
    "description": "This module deploys an Event Grid System Topic Event Subscription."
  },
  "definitions": {
    "identityType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "allowedValues": [
            "SystemAssigned",
            "UserAssigned"
          ],
          "metadata": {
            "description": "Required. The type of identity to use."
          }
        },
        "userAssignedIdentity": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Conditional. Required if type is UserAssigned. The user assigned identity resource ID."
          }
        }
      },
      "metadata": {
        "description": "Identity configuration for delivery or dead letter."
      }
    },
    "filterType": {
      "type": "object",
      "properties": {
        "enableAdvancedFilteringOnArrays": {
          "type": "bool",
          "nullable": true,
          "metadata": {
            "description": "Optional. Allows advanced filters to be evaluated against an array of values instead of expecting a singular value."
          }
        },
        "includedEventTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. A list of applicable event types that can be filtered."
          }
        },
        "isSubjectCaseSensitive": {
          "type": "bool",
          "nullable": true,
          "metadata": {
            "description": "Optional. Defines if the subject field should be compared in a case sensitive manner."
          }
        },
        "subjectBeginsWith": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. An optional string to filter events for an event subscription based on a resource path prefix."
          }
        },
        "subjectEndsWith": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. An optional string to filter events for an event subscription based on a resource path suffix."
          }
        },
        "advancedFilters": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. A list of advanced filters that are used for filtering event subscriptions. Each filter must be an object with required properties: key (string) and operatorType (BoolEquals|IsNotNull|IsNullOrUndefined|NumberGreaterThan|NumberGreaterThanOrEquals|NumberIn|NumberInRange|NumberLessThan|NumberLessThanOrEquals|NumberNotIn|NumberNotInRange|StringBeginsWith|StringContains|StringEndsWith|StringIn|StringNotBeginsWith|StringNotContains|StringNotEndsWith|StringNotIn). Additionally include either value (for single value operators) or values (array for multi-value operators). Example: {key: \"data.eventType\", operatorType: \"StringContains\", values: [\"Microsoft.Storage\"]}."
          }
        }
      },
      "metadata": {
        "description": "Event subscription filter configuration."
      }
    },
    "retryPolicyType": {
      "type": "object",
      "properties": {
        "maxDeliveryAttempts": {
          "type": "int",
          "nullable": true,
          "metadata": {
            "description": "Optional. The maximum number of delivery attempts for events."
          }
        },
        "eventTimeToLiveInMinutes": {
          "type": "int",
          "nullable": true,
          "metadata": {
            "description": "Optional. Time in minutes that determines how long to continue attempting delivery."
          }
        }
      },
      "metadata": {
        "description": "Retry policy configuration for event delivery."
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Event Subscription."
      }
    },
    "systemTopicName": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the Event Grid System Topic."
      }
    },
    "deadLetterDestination": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.EventGrid/systemTopics/eventSubscriptions@2025-02-15#properties/properties/properties/deadLetterDestination"
        },
        "description": "Optional. Dead Letter Destination."
      },
      "nullable": true
    },
    "deadLetterWithResourceIdentity": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.EventGrid/systemTopics/eventSubscriptions@2025-02-15#properties/properties/properties/deadLetterWithResourceIdentity"
        },
        "description": "Optional. Dead Letter with Resource Identity Configuration."
      },
      "nullable": true
    },
    "deliveryWithResourceIdentity": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.EventGrid/systemTopics/eventSubscriptions@2025-02-15#properties/properties/properties/deliveryWithResourceIdentity"
        },
        "description": "Optional. Delivery with Resource Identity Configuration."
      },
      "nullable": true
    },
    "destination": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.EventGrid/systemTopics/eventSubscriptions@2025-02-15#properties/properties/properties/destination"
        },
        "description": "Conditional. Required if deliveryWithResourceIdentity is not provided. The destination for the event subscription."
      },
      "nullable": true
    },
    "eventDeliverySchema": {
      "type": "string",
      "defaultValue": "EventGridSchema",
      "allowedValues": [
        "CloudEventSchemaV1_0",
        "CustomInputSchema",
        "EventGridSchema",
        "EventGridEvent"
      ],
      "metadata": {
        "description": "Optional. The event delivery schema for the event subscription."
      }
    },
    "expirationTimeUtc": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The expiration time for the event subscription. Format is ISO-8601 (yyyy-MM-ddTHH:mm:ssZ)."
      }
    },
    "filter": {
      "$ref": "#/definitions/filterType",
      "nullable": true,
      "metadata": {
        "description": "Optional. The filter for the event subscription."
      }
    },
    "labels": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "nullable": true,
      "metadata": {
        "description": "Optional. The list of user defined labels."
      }
    },
    "retryPolicy": {
      "$ref": "#/definitions/retryPolicyType",
      "nullable": true,
      "metadata": {
        "description": "Optional. The retry policy for events."
      }
    }
  },
  "resources": {
    "systemTopic": {
      "existing": true,
      "type": "Microsoft.EventGrid/systemTopics",
      "apiVersion": "2025-02-15",
      "name": "[parameters('systemTopicName')]"
    },
    "eventSubscription": {
      "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
      "apiVersion": "2025-02-15",
      "name": "[format('{0}/{1}', parameters('systemTopicName'), parameters('name'))]",
      "properties": {
        "deadLetterDestination": "[parameters('deadLetterDestination')]",
        "deadLetterWithResourceIdentity": "[parameters('deadLetterWithResourceIdentity')]",
        "deliveryWithResourceIdentity": "[parameters('deliveryWithResourceIdentity')]",
        "destination": "[if(empty(parameters('deliveryWithResourceIdentity')), parameters('destination'), null())]",
        "eventDeliverySchema": "[parameters('eventDeliverySchema')]",
        "expirationTimeUtc": "[coalesce(parameters('expirationTimeUtc'), '')]",
        "filter": "[coalesce(parameters('filter'), createObject())]",
        "labels": "[coalesce(parameters('labels'), createArray())]",
        "retryPolicy": "[parameters('retryPolicy')]"
      }
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the event subscription."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the event subscription."
      },
      "value": "[resourceId('Microsoft.EventGrid/systemTopics/eventSubscriptions', parameters('systemTopicName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the event subscription was deployed into."
      },
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference('systemTopic', '2025-02-15', 'full').location]"
    }
  }
}