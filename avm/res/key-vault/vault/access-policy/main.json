{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "10878813547461142217"
    },
    "name": "Key Vault Access Policies",
    "description": "This module deploys a Key Vault Access Policy.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "accessPoliciesType": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The tenant ID that is used for authenticating requests to the key vault."
            }
          },
          "objectId": {
            "type": "string",
            "metadata": {
              "description": "Required. The object ID of a user, service principal or security group in the tenant for the vault."
            }
          },
          "applicationId": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. Application ID of the client making request on behalf of a principal."
            }
          },
          "permissions": {
            "type": "object",
            "properties": {
              "keys": {
                "type": "array",
                "allowedValues": [
                  "all",
                  "backup",
                  "create",
                  "decrypt",
                  "delete",
                  "encrypt",
                  "get",
                  "getrotationpolicy",
                  "import",
                  "list",
                  "purge",
                  "recover",
                  "release",
                  "restore",
                  "rotate",
                  "setrotationpolicy",
                  "sign",
                  "unwrapKey",
                  "update",
                  "verify",
                  "wrapKey"
                ],
                "nullable": true,
                "metadata": {
                  "description": "Optional. Permissions to keys."
                }
              },
              "secrets": {
                "type": "array",
                "allowedValues": [
                  "all",
                  "backup",
                  "delete",
                  "get",
                  "list",
                  "purge",
                  "recover",
                  "restore",
                  "set"
                ],
                "nullable": true,
                "metadata": {
                  "description": "Optional. Permissions to secrets."
                }
              },
              "certificates": {
                "type": "array",
                "allowedValues": [
                  "all",
                  "backup",
                  "create",
                  "delete",
                  "deleteissuers",
                  "get",
                  "getissuers",
                  "import",
                  "list",
                  "listissuers",
                  "managecontacts",
                  "manageissuers",
                  "purge",
                  "recover",
                  "restore",
                  "setissuers",
                  "update"
                ],
                "nullable": true,
                "metadata": {
                  "description": "Optional. Permissions to certificates."
                }
              },
              "storage": {
                "type": "array",
                "allowedValues": [
                  "all",
                  "backup",
                  "delete",
                  "deletesas",
                  "get",
                  "getsas",
                  "list",
                  "listsas",
                  "purge",
                  "recover",
                  "regeneratekey",
                  "restore",
                  "set",
                  "setsas",
                  "update"
                ],
                "nullable": true,
                "metadata": {
                  "description": "Optional. Permissions to storage accounts."
                }
              }
            },
            "metadata": {
              "description": "Required. Permissions the identity has for keys, secrets and certificates."
            }
          }
        }
      },
      "nullable": true
    }
  },
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent key vault. Required if the template is used in a standalone deployment."
      }
    },
    "accessPolicies": {
      "$ref": "#/definitions/accessPoliciesType",
      "metadata": {
        "description": "Optional. An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "formattedAccessPolicies",
        "count": "[length(coalesce(parameters('accessPolicies'), createArray()))]",
        "input": {
          "applicationId": "[coalesce(tryGet(coalesce(parameters('accessPolicies'), createArray())[copyIndex('formattedAccessPolicies')], 'applicationId'), '')]",
          "objectId": "[coalesce(parameters('accessPolicies'), createArray())[copyIndex('formattedAccessPolicies')].objectId]",
          "permissions": "[coalesce(parameters('accessPolicies'), createArray())[copyIndex('formattedAccessPolicies')].permissions]",
          "tenantId": "[coalesce(tryGet(coalesce(parameters('accessPolicies'), createArray())[copyIndex('formattedAccessPolicies')], 'tenantId'), tenant().tenantId)]"
        }
      }
    ]
  },
  "resources": {
    "keyVault": {
      "existing": true,
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[parameters('keyVaultName')]"
    },
    "policies": {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'add')]",
      "properties": {
        "accessPolicies": "[variables('formattedAccessPolicies')]"
      },
      "dependsOn": [
        "keyVault"
      ]
    }
  },
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the access policies assignment was created in."
      },
      "value": "[resourceGroup().name]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the access policies assignment."
      },
      "value": "add"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the access policies assignment."
      },
      "value": "[resourceId('Microsoft.KeyVault/vaults/accessPolicies', parameters('keyVaultName'), 'add')]"
    }
  }
}