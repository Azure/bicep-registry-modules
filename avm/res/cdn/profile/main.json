{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.24.24.22086",
      "templateHash": "2094374182247826446"
    },
    "name": "CDN Profiles",
    "description": "This module deploys a CDN Profile.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "lockType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the name of lock."
          }
        },
        "kind": {
          "type": "string",
          "allowedValues": [
            "CanNotDelete",
            "None",
            "ReadOnly"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the type of lock."
          }
        }
      },
      "nullable": true
    },
    "roleAssignmentType": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "roleDefinitionIdOrName": {
            "type": "string",
            "metadata": {
              "description": "Required. The role to assign. You can provide either the display name of the role definition, the role definition GUID, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
            }
          },
          "principalId": {
            "type": "string",
            "metadata": {
              "description": "Required. The principal ID of the principal (user/group/identity) to assign the role to."
            }
          },
          "principalType": {
            "type": "string",
            "allowedValues": [
              "Device",
              "ForeignGroup",
              "Group",
              "ServicePrincipal",
              "User"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. The principal type of the assigned principal ID."
            }
          },
          "description": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The description of the role assignment."
            }
          },
          "condition": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\""
            }
          },
          "conditionVersion": {
            "type": "string",
            "allowedValues": [
              "2.0"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. Version of the condition."
            }
          },
          "delegatedManagedIdentityResourceId": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The Resource Id of the delegated managed identity resource."
            }
          }
        }
      },
      "nullable": true
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the CDN profile."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources."
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Custom_Verizon",
        "Premium_AzureFrontDoor",
        "Premium_Verizon",
        "StandardPlus_955BandWidth_ChinaCdn",
        "StandardPlus_AvgBandWidth_ChinaCdn",
        "StandardPlus_ChinaCdn",
        "Standard_955BandWidth_ChinaCdn",
        "Standard_Akamai",
        "Standard_AvgBandWidth_ChinaCdn",
        "Standard_AzureFrontDoor",
        "Standard_ChinaCdn",
        "Standard_Microsoft",
        "Standard_Verizon"
      ],
      "metadata": {
        "description": "Required. The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile."
      }
    },
    "originResponseTimeoutSeconds": {
      "type": "int",
      "defaultValue": 60,
      "metadata": {
        "description": "Optional. Send and receive timeout on forwarding request to the origin."
      }
    },
    "endpointName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Name of the endpoint under the profile which is unique globally."
      }
    },
    "endpointProperties": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Endpoint properties (see https://learn.microsoft.com/en-us/azure/templates/microsoft.cdn/profiles/endpoints?pivots=deployment-language-bicep#endpointproperties for details)."
      }
    },
    "secrets": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of secret objects."
      }
    },
    "customDomains": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of custom domain objects."
      }
    },
    "origionGroups": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Conditional. Array of origin group objects. Required if the afdEndpoints is specified."
      }
    },
    "ruleSets": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of rule set objects."
      }
    },
    "afdEndpoints": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of AFD endpoint objects."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Endpoint tags."
      }
    },
    "lock": {
      "$ref": "#/definitions/lockType",
      "metadata": {
        "description": "Optional. The lock settings of the service."
      }
    },
    "roleAssignments": {
      "$ref": "#/definitions/roleAssignmentType",
      "metadata": {
        "description": "Optional. Array of role assignments to create."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    }
  },
  "variables": {
    "enableReferencedModulesTelemetry": false,
    "builtInRoleNames": {
      "CDN Endpoint Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '426e0c7f-0c7e-4658-b36f-ff54d6c29b45')]",
      "CDN Endpoint Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '871e35f6-b5c1-49cc-a043-bde969a0f2cd')]",
      "CDN Profile Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ec156ff8-a8d1-4d15-830c-5b80698ca432')]",
      "CDN Profile Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8f96442b-4075-438f-813d-ad51ab4019af')]",
      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
      "Role Based Access Control Administrator (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]",
      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
    }
  },
  "resources": {
    "defaultTelemetry": {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    "profile": {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2023-05-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "properties": {
        "originResponseTimeoutSeconds": "[parameters('originResponseTimeoutSeconds')]"
      },
      "tags": "[parameters('tags')]"
    },
    "profile_lock": {
      "condition": "[and(not(empty(coalesce(parameters('lock'), createObject()))), not(equals(tryGet(parameters('lock'), 'kind'), 'None')))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.Cdn/profiles/{0}', parameters('name'))]",
      "name": "[coalesce(tryGet(parameters('lock'), 'name'), format('lock-{0}', parameters('name')))]",
      "properties": {
        "level": "[coalesce(tryGet(parameters('lock'), 'kind'), '')]",
        "notes": "[if(equals(tryGet(parameters('lock'), 'kind'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot delete or modify the resource or child resources.')]"
      },
      "dependsOn": [
        "profile"
      ]
    },
    "profile_roleAssignments": {
      "copy": {
        "name": "profile_roleAssignments",
        "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Cdn/profiles/{0}', parameters('name'))]",
      "name": "[guid(resourceId('Microsoft.Cdn/profiles', parameters('name')), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].principalId, coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName)]",
      "properties": {
        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName), variables('builtInRoleNames')[coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName], if(contains(coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName, '/providers/Microsoft.Authorization/roleDefinitions/'), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName)))]",
        "principalId": "[coalesce(parameters('roleAssignments'), createArray())[copyIndex()].principalId]",
        "description": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'description')]",
        "principalType": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'principalType')]",
        "condition": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'condition')]",
        "conditionVersion": "[if(not(empty(tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
        "delegatedManagedIdentityResourceId": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
      },
      "dependsOn": [
        "profile"
      ]
    },
    "profile_endpoint": {
      "condition": "[not(empty(parameters('endpointProperties')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Profile-Endpoint', uniqueString(deployment().name, parameters('location')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('endpointName'))), createObject('value', parameters('endpointName')), createObject('value', format('{0}-endpoint', parameters('name'))))]",
          "properties": {
            "value": "[parameters('endpointProperties')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "profileName": {
            "value": "[parameters('name')]"
          },
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "12835560149201986440"
            },
            "name": "CDN Profiles Endpoints",
            "description": "This module deploys a CDN Profile Endpoint.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "profileName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent CDN profile. Required if the template is used in a standalone deployment."
              }
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the endpoint under the profile which is unique globally."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Resource location."
              }
            },
            "properties": {
              "type": "object",
              "metadata": {
                "description": "Required. Endpoint properties (see https://learn.microsoft.com/en-us/azure/templates/microsoft.cdn/profiles/endpoints?pivots=deployment-language-bicep#endpointproperties for details)."
              }
            },
            "tags": {
              "type": "object",
              "nullable": true,
              "metadata": {
                "description": "Optional. Endpoint tags."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "variables": {
            "enableReferencedModulesTelemetry": false
          },
          "resources": {
            "defaultTelemetry": {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            "profile": {
              "existing": true,
              "type": "Microsoft.Cdn/profiles",
              "apiVersion": "2021-06-01",
              "name": "[parameters('profileName')]"
            },
            "endpoint": {
              "type": "Microsoft.Cdn/profiles/endpoints",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('profileName'), parameters('name'))]",
              "location": "[parameters('location')]",
              "properties": "[parameters('properties')]",
              "tags": "[parameters('tags')]",
              "dependsOn": [
                "profile"
              ]
            },
            "endpoint_origins": {
              "copy": {
                "name": "endpoint_origins",
                "count": "[length(parameters('properties').origins)]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-origins-{1}', parameters('name'), parameters('properties').origins[copyIndex()].name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "profileName": {
                    "value": "[parameters('profileName')]"
                  },
                  "endpointName": {
                    "value": "[parameters('name')]"
                  },
                  "name": {
                    "value": "[parameters('properties').origins[copyIndex()].name]"
                  },
                  "hostName": {
                    "value": "[parameters('properties').origins[copyIndex()].properties.hostName]"
                  },
                  "httpPort": "[if(contains(parameters('properties').origins[copyIndex()].properties, 'httpPort'), createObject('value', parameters('properties').origins[copyIndex()].properties.httpPort), createObject('value', 80))]",
                  "httpsPort": "[if(contains(parameters('properties').origins[copyIndex()].properties, 'httpsPort'), createObject('value', parameters('properties').origins[copyIndex()].properties.httpsPort), createObject('value', 443))]",
                  "enabled": {
                    "value": "[parameters('properties').origins[copyIndex()].properties.enabled]"
                  },
                  "priority": "[if(contains(parameters('properties').origins[copyIndex()].properties, 'priority'), createObject('value', parameters('properties').origins[copyIndex()].properties.priority), createObject('value', -1))]",
                  "weight": "[if(contains(parameters('properties').origins[copyIndex()].properties, 'weight'), createObject('value', parameters('properties').origins[copyIndex()].properties.weight), createObject('value', -1))]",
                  "originHostHeader": "[if(contains(parameters('properties').origins[copyIndex()].properties, 'originHostHeader'), createObject('value', parameters('properties').origins[copyIndex()].properties.originHostHeader), createObject('value', ''))]",
                  "privateLinkAlias": "[if(contains(parameters('properties').origins[copyIndex()].properties, 'privateLinkAlias'), createObject('value', parameters('properties').origins[copyIndex()].properties.privateLinkAlias), createObject('value', ''))]",
                  "privateLinkLocation": "[if(contains(parameters('properties').origins[copyIndex()].properties, 'privateLinkLocation'), createObject('value', parameters('properties').origins[copyIndex()].properties.privateLinkLocation), createObject('value', ''))]",
                  "privateLinkResourceId": "[if(contains(parameters('properties').origins[copyIndex()].properties, 'privateLinkResourceId'), createObject('value', parameters('properties').origins[copyIndex()].properties.privateLinkResourceId), createObject('value', ''))]",
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "13313881743665626025"
                    },
                    "name": "CDN Profiles Endpoints Origins",
                    "description": "This module deploys a CDN Profile Endpoint Origin.",
                    "owner": "Azure/module-maintainers"
                  },
                  "parameters": {
                    "endpointName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the CDN Endpoint."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
                      }
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the origin."
                      }
                    },
                    "enabled": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Whether the origin is enabled for load balancing."
                      }
                    },
                    "hostName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The hostname of the origin."
                      }
                    },
                    "httpPort": {
                      "type": "int",
                      "defaultValue": 80,
                      "metadata": {
                        "description": "Optional. The HTTP port of the origin."
                      }
                    },
                    "httpsPort": {
                      "type": "int",
                      "defaultValue": 443,
                      "metadata": {
                        "description": "Optional. The HTTPS port of the origin."
                      }
                    },
                    "priority": {
                      "type": "int",
                      "defaultValue": -1,
                      "metadata": {
                        "description": "Conditional. The priority of origin in given origin group for load balancing. Required if `weight` is provided."
                      }
                    },
                    "weight": {
                      "type": "int",
                      "defaultValue": -1,
                      "metadata": {
                        "description": "Conditional. The weight of the origin used for load balancing. Required if `priority` is provided."
                      }
                    },
                    "privateLinkAlias": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The private link alias of the origin. Required if privateLinkLocation is provided."
                      }
                    },
                    "privateLinkLocation": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The private link location of the origin. Required if privateLinkAlias is provided."
                      }
                    },
                    "privateLinkResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Optional. The private link resource ID of the origin."
                      }
                    },
                    "originHostHeader": {
                      "type": "string",
                      "metadata": {
                        "description": "Optional. The host header value sent to the origin."
                      }
                    },
                    "profileName": {
                      "type": "string",
                      "defaultValue": "default",
                      "metadata": {
                        "description": "Optional. The name of the CDN profile. Default to \"default\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Cdn/profiles/endpoints/origins",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}/{2}', parameters('profileName'), parameters('endpointName'), parameters('name'))]",
                      "properties": "[union(createObject('hostName', parameters('hostName'), 'httpPort', parameters('httpPort'), 'enabled', parameters('enabled'), 'httpsPort', parameters('httpsPort')), if(or(greater(parameters('priority'), 0), greater(parameters('weight'), 0)), createObject('priority', parameters('priority'), 'weight', parameters('weight')), createObject()), if(and(not(empty(parameters('privateLinkAlias'))), not(empty(parameters('privateLinkLocation')))), createObject('privateLinkAlias', parameters('privateLinkAlias'), 'privateLinkLocation', parameters('privateLinkLocation')), createObject()), if(not(empty(parameters('privateLinkResourceId'))), createObject('privateLinkResourceId', parameters('privateLinkResourceId')), createObject()), if(not(empty(parameters('originHostHeader'))), createObject('originHostHeader', parameters('originHostHeader')), createObject()))]"
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the endpoint."
                      },
                      "value": "[parameters('name')]"
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource ID of the endpoint."
                      },
                      "value": "[resourceId('Microsoft.Cdn/profiles/endpoints/origins', parameters('profileName'), parameters('endpointName'), parameters('name'))]"
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the resource group the endpoint was created in."
                      },
                      "value": "[resourceGroup().name]"
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "The location the resource was deployed into."
                      },
                      "value": "[reference(resourceId('Microsoft.Cdn/profiles/endpoints', parameters('profileName'), parameters('endpointName')), '2021-06-01', 'full').location]"
                    }
                  }
                }
              },
              "dependsOn": [
                "endpoint",
                "profile"
              ]
            }
          },
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the endpoint."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the endpoint."
              },
              "value": "[resourceId('Microsoft.Cdn/profiles/endpoints', parameters('profileName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the endpoint was created in."
              },
              "value": "[resourceGroup().name]"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location the resource was deployed into."
              },
              "value": "[reference('endpoint', '2021-06-01', 'full').location]"
            },
            "endpointProperties": {
              "type": "object",
              "metadata": {
                "description": "The properties of the endpoint."
              },
              "value": "[reference('endpoint')]"
            }
          }
        }
      },
      "dependsOn": [
        "profile"
      ]
    },
    "profile_secret": {
      "copy": {
        "name": "profile_secret",
        "count": "[length(parameters('secrets'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Profile-Secret-{1}', uniqueString(deployment().name), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('secrets')[copyIndex()].name]"
          },
          "profileName": {
            "value": "[parameters('name')]"
          },
          "type": {
            "value": "[parameters('secrets')[copyIndex()].type]"
          },
          "secretSourceResourceId": {
            "value": "[parameters('secrets')[copyIndex()].secretSourceResourceId]"
          },
          "subjectAlternativeNames": "[if(contains(parameters('secrets')[copyIndex()], 'subjectAlternativeNames'), createObject('value', parameters('secrets')[copyIndex()].subjectAlternativeNames), createObject('value', createArray()))]",
          "useLatestVersion": "[if(contains(parameters('secrets')[copyIndex()], 'useLatestVersion'), createObject('value', parameters('secrets')[copyIndex()].useLatestVersion), createObject('value', false()))]",
          "secretVersion": {
            "value": "[parameters('secrets')[copyIndex()].secretVersion]"
          },
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "9065117765223577157"
            },
            "name": "CDN Profiles Secret",
            "description": "This module deploys a CDN Profile Secret.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the secrect."
              }
            },
            "profileName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent CDN profile. Required if the template is used in a standalone deployment."
              }
            },
            "type": {
              "type": "string",
              "defaultValue": "AzureFirstPartyManagedCertificate",
              "allowedValues": [
                "AzureFirstPartyManagedCertificate",
                "CustomerCertificate",
                "ManagedCertificate",
                "UrlSigningKey"
              ],
              "metadata": {
                "description": "Required. The type of the secrect."
              }
            },
            "secretSourceResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Conditional. The resource ID of the secret source. Required if the `type` is \"CustomerCertificate\"."
              }
            },
            "secretVersion": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The version of the secret."
              }
            },
            "subjectAlternativeNames": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The subject alternative names of the secrect."
              }
            },
            "useLatestVersion": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Optional. Indicates whether to use the latest version of the secrect."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Cdn/profiles/secrets",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('profileName'), parameters('name'))]",
              "properties": {
                "parameters": "[if(equals(parameters('type'), 'CustomerCertificate'), createObject('type', parameters('type'), 'secretSource', createObject('id', parameters('secretSourceResourceId')), 'secretVersion', parameters('secretVersion'), 'subjectAlternativeNames', parameters('subjectAlternativeNames'), 'useLatestVersion', parameters('useLatestVersion')), null())]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the secrect."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the secrect."
              },
              "value": "[resourceId('Microsoft.Cdn/profiles/secrets', parameters('profileName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the secret was created in."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "profile"
      ]
    },
    "profile_custom_domain": {
      "copy": {
        "name": "profile_custom_domain",
        "count": "[length(parameters('customDomains'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-CustomDomain-{1}', uniqueString(deployment().name), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('customDomains')[copyIndex()].name]"
          },
          "profileName": {
            "value": "[parameters('name')]"
          },
          "hostName": {
            "value": "[parameters('customDomains')[copyIndex()].hostName]"
          },
          "azureDnsZoneResourceId": "[if(contains(parameters('customDomains')[copyIndex()], 'azureDnsZoneResourceId'), createObject('value', parameters('customDomains')[copyIndex()].azureDnsZoneResourceId), createObject('value', ''))]",
          "extendedProperties": "[if(contains(parameters('customDomains')[copyIndex()], 'extendedProperties'), createObject('value', parameters('customDomains')[copyIndex()].extendedProperties), createObject('value', createObject()))]",
          "certificateType": {
            "value": "[parameters('customDomains')[copyIndex()].certificateType]"
          },
          "minimumTlsVersion": "[if(contains(parameters('customDomains')[copyIndex()], 'minimumTlsVersion'), createObject('value', parameters('customDomains')[copyIndex()].minimumTlsVersion), createObject('value', 'TLS12'))]",
          "preValidatedCustomDomainResourceId": "[if(contains(parameters('customDomains')[copyIndex()], 'preValidatedCustomDomainResourceId'), createObject('value', parameters('customDomains')[copyIndex()].preValidatedCustomDomainResourceId), createObject('value', ''))]",
          "secretName": "[if(contains(parameters('customDomains')[copyIndex()], 'secretName'), createObject('value', parameters('customDomains')[copyIndex()].secretName), createObject('value', ''))]",
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "14020917186794999695"
            },
            "name": "CDN Profiles Custom Domains",
            "description": "This module deploys a CDN Profile Custom Domains.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the custom domain."
              }
            },
            "profileName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the CDN profile."
              }
            },
            "hostName": {
              "type": "string",
              "metadata": {
                "description": "Required. The host name of the domain. Must be a domain name."
              }
            },
            "azureDnsZoneResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optonal. Resource reference to the Azure DNS zone."
              }
            },
            "extendedProperties": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Key-Value pair representing migration properties for domains."
              }
            },
            "preValidatedCustomDomainResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Resource reference to the Azure resource where custom domain ownership was prevalidated."
              }
            },
            "certificateType": {
              "type": "string",
              "allowedValues": [
                "CustomerCertificate",
                "ManagedCertificate"
              ],
              "metadata": {
                "description": "Required. The type of the certificate used for secure delivery."
              }
            },
            "minimumTlsVersion": {
              "type": "string",
              "defaultValue": "TLS12",
              "allowedValues": [
                "TLS10",
                "TLS12"
              ],
              "metadata": {
                "description": "Optional. The minimum TLS version required for the custom domain. Default value: TLS12."
              }
            },
            "secretName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The name of the secret. ie. subs/rg/profile/secret."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Cdn/profiles/customDomains",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('profileName'), parameters('name'))]",
              "properties": {
                "azureDnsZone": "[if(not(empty(parameters('azureDnsZoneResourceId'))), createObject('id', parameters('azureDnsZoneResourceId')), null())]",
                "extendedProperties": "[if(not(empty(parameters('extendedProperties'))), parameters('extendedProperties'), null())]",
                "hostName": "[parameters('hostName')]",
                "preValidatedCustomDomainResourceId": "[if(not(empty(parameters('preValidatedCustomDomainResourceId'))), createObject('id', parameters('preValidatedCustomDomainResourceId')), null())]",
                "tlsSettings": {
                  "certificateType": "[parameters('certificateType')]",
                  "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                  "secret": "[if(not(empty(parameters('secretName'))), createObject('id', resourceId('Microsoft.Cdn/profiles/secrets', parameters('profileName'), parameters('secretName'))), null())]"
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the custom domain."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource id of the custom domain."
              },
              "value": "[resourceId('Microsoft.Cdn/profiles/customDomains', parameters('profileName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the custom domain was created in."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "profile",
        "profile_secret"
      ]
    },
    "profile_origionGroup": {
      "copy": {
        "name": "profile_origionGroup",
        "count": "[length(parameters('origionGroups'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Profile-OrigionGroup-{1}', uniqueString(deployment().name), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('origionGroups')[copyIndex()].name]"
          },
          "profileName": {
            "value": "[parameters('name')]"
          },
          "healthProbeSettings": "[if(contains(parameters('origionGroups')[copyIndex()], 'healthProbeSettings'), createObject('value', parameters('origionGroups')[copyIndex()].healthProbeSettings), createObject('value', createObject()))]",
          "loadBalancingSettings": {
            "value": "[parameters('origionGroups')[copyIndex()].loadBalancingSettings]"
          },
          "sessionAffinityState": "[if(contains(parameters('origionGroups')[copyIndex()], 'sessionAffinityState'), createObject('value', parameters('origionGroups')[copyIndex()].sessionAffinityState), createObject('value', 'Disabled'))]",
          "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": "[if(contains(parameters('origionGroups')[copyIndex()], 'trafficRestorationTimeToHealedOrNewEndpointsInMinutes'), createObject('value', parameters('origionGroups')[copyIndex()].trafficRestorationTimeToHealedOrNewEndpointsInMinutes), createObject('value', 10))]",
          "origins": {
            "value": "[parameters('origionGroups')[copyIndex()].origins]"
          },
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "11971964733746078182"
            },
            "name": "CDN Profiles Origin Group",
            "description": "This module deploys a CDN Profile Origin Group.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the origin group."
              }
            },
            "profileName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the CDN profile."
              }
            },
            "healthProbeSettings": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Health probe settings to the origin that is used to determine the health of the origin."
              }
            },
            "loadBalancingSettings": {
              "type": "object",
              "metadata": {
                "description": "Required. Load balancing settings for a backend pool."
              }
            },
            "sessionAffinityState": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ],
              "metadata": {
                "description": "Optional. Whether to allow session affinity on this host."
              }
            },
            "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": {
              "type": "int",
              "defaultValue": 10,
              "metadata": {
                "description": "Optional. Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins."
              }
            },
            "origins": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required. The list of origins within the origin group."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "variables": {
            "enableReferencedModulesTelemetry": false
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Cdn/profiles/originGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('profileName'), parameters('name'))]",
              "properties": {
                "healthProbeSettings": "[if(not(empty(parameters('healthProbeSettings'))), parameters('healthProbeSettings'), null())]",
                "loadBalancingSettings": "[parameters('loadBalancingSettings')]",
                "sessionAffinityState": "[parameters('sessionAffinityState')]",
                "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": "[parameters('trafficRestorationTimeToHealedOrNewEndpointsInMinutes')]"
              }
            },
            {
              "copy": {
                "name": "origin",
                "count": "[length(parameters('origins'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-OriginGroup-Origin-{1}', uniqueString(deployment().name), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('origins')[copyIndex()].name]"
                  },
                  "profileName": {
                    "value": "[parameters('profileName')]"
                  },
                  "hostName": {
                    "value": "[parameters('origins')[copyIndex()].hostName]"
                  },
                  "originGroupName": {
                    "value": "[parameters('name')]"
                  },
                  "enabledState": "[if(contains(parameters('origins')[copyIndex()], 'enabledState'), createObject('value', parameters('origins')[copyIndex()].enabledState), createObject('value', 'Enabled'))]",
                  "enforceCertificateNameCheck": "[if(contains(parameters('origins')[copyIndex()], 'enforceCertificateNameCheck'), createObject('value', parameters('origins')[copyIndex()].enforceCertificateNameCheck), createObject('value', true()))]",
                  "httpPort": "[if(contains(parameters('origins')[copyIndex()], 'httpPort'), createObject('value', parameters('origins')[copyIndex()].httpPort), createObject('value', 80))]",
                  "httpsPort": "[if(contains(parameters('origins')[copyIndex()], 'httpsPort'), createObject('value', parameters('origins')[copyIndex()].httpsPort), createObject('value', 443))]",
                  "originHostHeader": "[if(contains(parameters('origins')[copyIndex()], 'originHostHeader'), createObject('value', parameters('origins')[copyIndex()].originHostHeader), createObject('value', parameters('origins')[copyIndex()].hostName))]",
                  "priority": "[if(contains(parameters('origins')[copyIndex()], 'priority'), createObject('value', parameters('origins')[copyIndex()].priority), createObject('value', 1))]",
                  "weight": "[if(contains(parameters('origins')[copyIndex()], 'weight'), createObject('value', parameters('origins')[copyIndex()].weight), createObject('value', 1000))]",
                  "sharedPrivateLinkResource": "[if(contains(parameters('origins')[copyIndex()], 'sharedPrivateLinkResource'), createObject('value', parameters('origins')[copyIndex()].sharedPrivateLinkResource), createObject('value', null()))]",
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "9016533430746404335"
                    },
                    "name": "CDN Profiles Origin",
                    "description": "This module deploys a CDN Profile Origin.",
                    "owner": "Azure/module-maintainers"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the origion."
                      }
                    },
                    "profileName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the CDN profile."
                      }
                    },
                    "originGroupName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the group."
                      }
                    },
                    "enabledState": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Disabled",
                        "Enabled"
                      ],
                      "metadata": {
                        "description": "Optional. Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool."
                      }
                    },
                    "enforceCertificateNameCheck": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Whether to enable certificate name check at origin level."
                      }
                    },
                    "hostName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint."
                      }
                    },
                    "httpPort": {
                      "type": "int",
                      "defaultValue": 80,
                      "metadata": {
                        "description": "Optional. The value of the HTTP port. Must be between 1 and 65535."
                      }
                    },
                    "httpsPort": {
                      "type": "int",
                      "defaultValue": 443,
                      "metadata": {
                        "description": "Optional. The value of the HTTPS port. Must be between 1 and 65535."
                      }
                    },
                    "originHostHeader": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure Front Door origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint."
                      }
                    },
                    "priority": {
                      "type": "int",
                      "defaultValue": 1,
                      "metadata": {
                        "description": "Optional. Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5."
                      }
                    },
                    "sharedPrivateLinkResource": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The properties of the private link resource for private origin."
                      }
                    },
                    "weight": {
                      "type": "int",
                      "defaultValue": 1000,
                      "metadata": {
                        "description": "Optional. Weight of the origin in given origin group for load balancing. Must be between 1 and 1000."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Cdn/profiles/originGroups/origins",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('profileName'), parameters('originGroupName'), parameters('name'))]",
                      "properties": {
                        "enabledState": "[parameters('enabledState')]",
                        "enforceCertificateNameCheck": "[parameters('enforceCertificateNameCheck')]",
                        "hostName": "[parameters('hostName')]",
                        "httpPort": "[parameters('httpPort')]",
                        "httpsPort": "[parameters('httpsPort')]",
                        "originHostHeader": "[parameters('originHostHeader')]",
                        "priority": "[parameters('priority')]",
                        "sharedPrivateLinkResource": "[if(not(empty(parameters('sharedPrivateLinkResource'))), parameters('sharedPrivateLinkResource'), null())]",
                        "weight": "[parameters('weight')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the origin."
                      },
                      "value": "[parameters('name')]"
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource id of the origin."
                      },
                      "value": "[resourceId('Microsoft.Cdn/profiles/originGroups/origins', parameters('profileName'), parameters('originGroupName'), parameters('name'))]"
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the resource group the origin was created in."
                      },
                      "value": "[resourceGroup().name]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('profileName'), parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the origin group."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource id of the origin group."
              },
              "value": "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('profileName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the origin group was created in."
              },
              "value": "[resourceGroup().name]"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location the resource was deployed into."
              },
              "value": "[reference(resourceId('Microsoft.Cdn/profiles', parameters('profileName')), '2023-05-01', 'full').location]"
            }
          }
        }
      },
      "dependsOn": [
        "profile"
      ]
    },
    "profile_ruleSet": {
      "copy": {
        "name": "profile_ruleSet",
        "count": "[length(parameters('ruleSets'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Profile-RuleSet-{1}', uniqueString(deployment().name), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('ruleSets')[copyIndex()].name]"
          },
          "profileName": {
            "value": "[parameters('name')]"
          },
          "rules": {
            "value": "[parameters('ruleSets')[copyIndex()].rules]"
          },
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "6357254985592021008"
            },
            "name": "CDN Profiles Rule Sets",
            "description": "This module deploys a CDN Profile rule set.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the rule set."
              }
            },
            "profileName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the CDN profile."
              }
            },
            "rules": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optinal. The rules to apply to the rule set."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "variables": {
            "enableReferencedModulesTelemetry": false
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Cdn/profiles/ruleSets",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('profileName'), parameters('name'))]"
            },
            {
              "copy": {
                "name": "rule",
                "count": "[length(parameters('rules'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-RuleSet-Rule-{1}-{2}', uniqueString(deployment().name), parameters('rules')[copyIndex()].name, copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "profileName": {
                    "value": "[parameters('profileName')]"
                  },
                  "ruleSetName": {
                    "value": "[parameters('name')]"
                  },
                  "name": {
                    "value": "[parameters('rules')[copyIndex()].name]"
                  },
                  "order": {
                    "value": "[parameters('rules')[copyIndex()].order]"
                  },
                  "actions": {
                    "value": "[parameters('rules')[copyIndex()].actions]"
                  },
                  "conditions": "[if(contains(parameters('rules')[copyIndex()], 'conditions'), createObject('value', parameters('rules')[copyIndex()].conditions), createObject('value', createArray()))]",
                  "matchProcessingBehavior": "[if(contains(parameters('rules')[copyIndex()], 'matchProcessingBehavior'), createObject('value', parameters('rules')[copyIndex()].matchProcessingBehavior), createObject('value', 'Continue'))]",
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "5740342061156329686"
                    },
                    "name": "CDN Profiles Rules",
                    "description": "This module deploys a CDN Profile rule.",
                    "owner": "Azure/module-maintainers"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the rule."
                      }
                    },
                    "profileName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the profile."
                      }
                    },
                    "ruleSetName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the rule set."
                      }
                    },
                    "order": {
                      "type": "int",
                      "metadata": {
                        "description": "Required. The order in which this rule will be applied. Rules with a lower order are applied before rules with a higher order."
                      }
                    },
                    "actions": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. A list of actions that are executed when all the conditions of a rule are satisfied."
                      }
                    },
                    "conditions": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. A list of conditions that must be matched for the actions to be executed."
                      }
                    },
                    "matchProcessingBehavior": {
                      "type": "string",
                      "allowedValues": [
                        "Continue",
                        "Stop"
                      ],
                      "metadata": {
                        "description": "Required. If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Cdn/profiles/ruleSets/rules",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('profileName'), parameters('ruleSetName'), parameters('name'))]",
                      "properties": {
                        "order": "[parameters('order')]",
                        "actions": "[parameters('actions')]",
                        "conditions": "[parameters('conditions')]",
                        "matchProcessingBehavior": "[parameters('matchProcessingBehavior')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the rule."
                      },
                      "value": "[parameters('name')]"
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The resource id of the rule."
                      },
                      "value": "[resourceId('Microsoft.Cdn/profiles/ruleSets/rules', parameters('profileName'), parameters('ruleSetName'), parameters('name'))]"
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the resource group the custom domain was created in."
                      },
                      "value": "[resourceGroup().name]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the rule set."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource id of the rule set."
              },
              "value": "[resourceId('Microsoft.Cdn/profiles/ruleSets', parameters('profileName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the custom domain was created in."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "profile"
      ]
    },
    "profile_afdEndpoint": {
      "copy": {
        "name": "profile_afdEndpoint",
        "count": "[length(parameters('afdEndpoints'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Profile-AfdEndpoint-{1}', uniqueString(deployment().name), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('afdEndpoints')[copyIndex()].name]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "profileName": {
            "value": "[parameters('name')]"
          },
          "autoGeneratedDomainNameLabelScope": "[if(contains(parameters('afdEndpoints')[copyIndex()], 'autoGeneratedDomainNameLabelScope'), createObject('value', parameters('afdEndpoints')[copyIndex()].autoGeneratedDomainNameLabelScope), createObject('value', 'TenantReuse'))]",
          "enabledState": "[if(contains(parameters('afdEndpoints')[copyIndex()], 'enabledState'), createObject('value', parameters('afdEndpoints')[copyIndex()].enabledState), createObject('value', 'Enabled'))]",
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          },
          "routes": "[if(contains(parameters('afdEndpoints')[copyIndex()], 'routes'), createObject('value', parameters('afdEndpoints')[copyIndex()].routes), createObject('value', createArray()))]",
          "tags": {
            "value": "[coalesce(tryGet(parameters('afdEndpoints')[copyIndex()], 'tags'), parameters('tags'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "9151451101933620806"
            },
            "name": "CDN Profiles AFD Endpoints",
            "description": "This module deploys a CDN Profile AFD Endpoint.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the AFD Endpoint."
              }
            },
            "profileName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent CDN profile. Required if the template is used in a standalone deployment."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. The location of the AFD Endpoint."
              }
            },
            "tags": {
              "type": "object",
              "nullable": true,
              "metadata": {
                "description": "Optional. The tags of the AFD Endpoint."
              }
            },
            "autoGeneratedDomainNameLabelScope": {
              "type": "string",
              "defaultValue": "TenantReuse",
              "allowedValues": [
                "NoReuse",
                "ResourceGroupReuse",
                "SubscriptionReuse",
                "TenantReuse"
              ],
              "metadata": {
                "description": "Optional. Indicates the endpoint name reuse scope. The default value is TenantReuse."
              }
            },
            "enabledState": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ],
              "metadata": {
                "description": "Optional. Indicates whether the AFD Endpoint is enabled. The default value is Enabled."
              }
            },
            "routes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of routes for this AFD Endpoint."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "variables": {
            "enableReferencedModulesTelemetry": false
          },
          "resources": {
            "defaultTelemetry": {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            "profile": {
              "existing": true,
              "type": "Microsoft.Cdn/profiles",
              "apiVersion": "2023-05-01",
              "name": "[parameters('profileName')]"
            },
            "afd_endpoint": {
              "type": "Microsoft.Cdn/profiles/afdEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('profileName'), parameters('name'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "autoGeneratedDomainNameLabelScope": "[parameters('autoGeneratedDomainNameLabelScope')]",
                "enabledState": "[parameters('enabledState')]"
              },
              "dependsOn": [
                "profile"
              ]
            },
            "afd_endpoint_route": {
              "copy": {
                "name": "afd_endpoint_route",
                "count": "[length(parameters('routes'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-Profile-AfdEndpoint-Route', uniqueString(deployment().name, parameters('routes')[copyIndex()].name))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('routes')[copyIndex()].name]"
                  },
                  "profileName": {
                    "value": "[parameters('profileName')]"
                  },
                  "afdEndpointName": {
                    "value": "[parameters('name')]"
                  },
                  "cacheConfiguration": "[if(contains(parameters('routes')[copyIndex()], 'cacheConfiguration'), createObject('value', parameters('routes')[copyIndex()].cacheConfiguration), createObject('value', null()))]",
                  "customDomainName": "[if(contains(parameters('routes')[copyIndex()], 'customDomainName'), createObject('value', parameters('routes')[copyIndex()].customDomainName), createObject('value', ''))]",
                  "enabledState": "[if(contains(parameters('routes')[copyIndex()], 'enabledState'), createObject('value', parameters('routes')[copyIndex()].enabledState), createObject('value', 'Enabled'))]",
                  "forwardingProtocol": "[if(contains(parameters('routes')[copyIndex()], 'forwardingProtocol'), createObject('value', parameters('routes')[copyIndex()].forwardingProtocol), createObject('value', 'MatchRequest'))]",
                  "httpsRedirect": "[if(contains(parameters('routes')[copyIndex()], 'httpsRedirect'), createObject('value', parameters('routes')[copyIndex()].httpsRedirect), createObject('value', 'Enabled'))]",
                  "linkToDefaultDomain": "[if(contains(parameters('routes')[copyIndex()], 'linkToDefaultDomain'), createObject('value', parameters('routes')[copyIndex()].linkToDefaultDomain), createObject('value', 'Enabled'))]",
                  "originGroupName": "[if(contains(parameters('routes')[copyIndex()], 'originGroupName'), createObject('value', parameters('routes')[copyIndex()].originGroupName), createObject('value', ''))]",
                  "originPath": "[if(contains(parameters('routes')[copyIndex()], 'originPath'), createObject('value', parameters('routes')[copyIndex()].originPath), createObject('value', ''))]",
                  "patternsToMatch": "[if(contains(parameters('routes')[copyIndex()], 'patternsToMatch'), createObject('value', parameters('routes')[copyIndex()].patternsToMatch), createObject('value', createArray()))]",
                  "ruleSets": "[if(contains(parameters('routes')[copyIndex()], 'ruleSets'), createObject('value', parameters('routes')[copyIndex()].ruleSets), createObject('value', createArray()))]",
                  "supportedProtocols": "[if(contains(parameters('routes')[copyIndex()], 'supportedProtocols'), createObject('value', parameters('routes')[copyIndex()].supportedProtocols), createObject('value', createArray()))]",
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.24.24.22086",
                      "templateHash": "1534020105352910282"
                    },
                    "name": "CDN Profiles AFD Endpoint Route",
                    "description": "This module deploys a CDN Profile AFD Endpoint route.",
                    "owner": "Azure/module-maintainers"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the route."
                      }
                    },
                    "profileName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the parent CDN profile."
                      }
                    },
                    "afdEndpointName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the AFD endpoint."
                      }
                    },
                    "cacheConfiguration": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object."
                      }
                    },
                    "customDomainName": {
                      "type": "string",
                      "metadata": {
                        "description": "Optional. The name of the custom domain. The custom domain must be defined in the profile customDomains."
                      }
                    },
                    "forwardingProtocol": {
                      "type": "string",
                      "defaultValue": "MatchRequest",
                      "allowedValues": [
                        "HttpOnly",
                        "HttpsOnly",
                        "MatchRequest"
                      ],
                      "metadata": {
                        "description": "Optional. The protocol this rule will use when forwarding traffic to backends."
                      }
                    },
                    "enabledState": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Disabled",
                        "Enabled"
                      ],
                      "metadata": {
                        "description": "Optional. Whether this route is enabled."
                      }
                    },
                    "httpsRedirect": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Disabled",
                        "Enabled"
                      ],
                      "metadata": {
                        "description": "Optional. Whether to automatically redirect HTTP traffic to HTTPS traffic."
                      }
                    },
                    "linkToDefaultDomain": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Disabled",
                        "Enabled"
                      ],
                      "metadata": {
                        "description": "Optional. Whether this route will be linked to the default endpoint domain."
                      }
                    },
                    "originGroupName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Required. The name of the origin group. The origin group must be defined in the profile originGroups."
                      }
                    },
                    "originPath": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."
                      }
                    },
                    "patternsToMatch": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. The route patterns of the rule."
                      }
                    },
                    "ruleSets": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. The rule sets of the rule. The rule sets must be defined in the profile ruleSets."
                      }
                    },
                    "supportedProtocols": {
                      "type": "array",
                      "defaultValue": [],
                      "allowedValues": [
                        "Http",
                        "Https"
                      ],
                      "metadata": {
                        "description": "Optional. The supported protocols of the rule."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('profileName'), parameters('afdEndpointName'), parameters('name'))]",
                      "properties": {
                        "copy": [
                          {
                            "name": "ruleSets",
                            "count": "[length(parameters('ruleSets'))]",
                            "input": {
                              "id": "[resourceId('Microsoft.Cdn/profiles/ruleSets', parameters('profileName'), parameters('ruleSets')[copyIndex('ruleSets')].name)]"
                            }
                          }
                        ],
                        "cacheConfiguration": "[if(not(empty(parameters('cacheConfiguration'))), parameters('cacheConfiguration'), null())]",
                        "customDomains": "[if(not(empty(parameters('customDomainName'))), createArray(createObject('id', resourceId('Microsoft.Cdn/profiles/customDomains', parameters('profileName'), parameters('customDomainName')))), createArray())]",
                        "enabledState": "[parameters('enabledState')]",
                        "forwardingProtocol": "[parameters('forwardingProtocol')]",
                        "httpsRedirect": "[parameters('httpsRedirect')]",
                        "linkToDefaultDomain": "[parameters('linkToDefaultDomain')]",
                        "originGroup": {
                          "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('profileName'), parameters('originGroupName'))]"
                        },
                        "originPath": "[if(not(empty(parameters('originPath'))), parameters('originPath'), null())]",
                        "patternsToMatch": "[parameters('patternsToMatch')]",
                        "supportedProtocols": "[if(not(empty(parameters('supportedProtocols'))), parameters('supportedProtocols'), null())]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the route."
                      },
                      "value": "[parameters('name')]"
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The ID of the route."
                      },
                      "value": "[resourceId('Microsoft.Cdn/profiles/afdEndpoints/routes', parameters('profileName'), parameters('afdEndpointName'), parameters('name'))]"
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the resource group the route was created in."
                      },
                      "value": "[resourceGroup().name]"
                    }
                  }
                }
              },
              "dependsOn": [
                "afd_endpoint",
                "profile"
              ]
            }
          },
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the AFD Endpoint."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource id of the AFD Endpoint."
              },
              "value": "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', parameters('profileName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the endpoint was created in."
              },
              "value": "[resourceGroup().name]"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location the resource was deployed into."
              },
              "value": "[reference('afd_endpoint', '2023-05-01', 'full').location]"
            }
          }
        }
      },
      "dependsOn": [
        "profile",
        "profile_custom_domain",
        "profile_origionGroup",
        "profile_ruleSet"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the CDN profile."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the CDN profile."
      },
      "value": "[resourceId('Microsoft.Cdn/profiles', parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group where the CDN profile is deployed."
      },
      "value": "[resourceGroup().name]"
    },
    "profileType": {
      "type": "string",
      "metadata": {
        "description": "The type of the CDN profile."
      },
      "value": "Microsoft.Cdn/profiles"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference('profile', '2023-05-01', 'full').location]"
    }
  }
}