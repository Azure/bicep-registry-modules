{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.24.24.22086",
      "templateHash": "13313881743665626025"
    },
    "name": "CDN Profiles Endpoints Origins",
    "description": "This module deploys a CDN Profile Endpoint Origin.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "endpointName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the CDN Endpoint."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the origin."
      }
    },
    "enabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Whether the origin is enabled for load balancing."
      }
    },
    "hostName": {
      "type": "string",
      "metadata": {
        "description": "Required. The hostname of the origin."
      }
    },
    "httpPort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "Optional. The HTTP port of the origin."
      }
    },
    "httpsPort": {
      "type": "int",
      "defaultValue": 443,
      "metadata": {
        "description": "Optional. The HTTPS port of the origin."
      }
    },
    "priority": {
      "type": "int",
      "defaultValue": -1,
      "metadata": {
        "description": "Conditional. The priority of origin in given origin group for load balancing. Required if `weight` is provided."
      }
    },
    "weight": {
      "type": "int",
      "defaultValue": -1,
      "metadata": {
        "description": "Conditional. The weight of the origin used for load balancing. Required if `priority` is provided."
      }
    },
    "privateLinkAlias": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The private link alias of the origin. Required if privateLinkLocation is provided."
      }
    },
    "privateLinkLocation": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The private link location of the origin. Required if privateLinkAlias is provided."
      }
    },
    "privateLinkResourceId": {
      "type": "string",
      "metadata": {
        "description": "Optional. The private link resource ID of the origin."
      }
    },
    "originHostHeader": {
      "type": "string",
      "metadata": {
        "description": "Optional. The host header value sent to the origin."
      }
    },
    "profileName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Optional. The name of the CDN profile. Default to \"default\"."
      }
    }
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/endpoints/origins",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}/{2}', parameters('profileName'), parameters('endpointName'), parameters('name'))]",
      "properties": "[union(createObject('hostName', parameters('hostName'), 'httpPort', parameters('httpPort'), 'enabled', parameters('enabled'), 'httpsPort', parameters('httpsPort')), if(or(greater(parameters('priority'), 0), greater(parameters('weight'), 0)), createObject('priority', parameters('priority'), 'weight', parameters('weight')), createObject()), if(and(not(empty(parameters('privateLinkAlias'))), not(empty(parameters('privateLinkLocation')))), createObject('privateLinkAlias', parameters('privateLinkAlias'), 'privateLinkLocation', parameters('privateLinkLocation')), createObject()), if(not(empty(parameters('privateLinkResourceId'))), createObject('privateLinkResourceId', parameters('privateLinkResourceId')), createObject()), if(not(empty(parameters('originHostHeader'))), createObject('originHostHeader', parameters('originHostHeader')), createObject()))]"
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the endpoint."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the endpoint."
      },
      "value": "[resourceId('Microsoft.Cdn/profiles/endpoints/origins', parameters('profileName'), parameters('endpointName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the endpoint was created in."
      },
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference(resourceId('Microsoft.Cdn/profiles/endpoints', parameters('profileName'), parameters('endpointName')), '2021-06-01', 'full').location]"
    }
  }
}