{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.24.24.22086",
      "templateHash": "9151451101933620806"
    },
    "name": "CDN Profiles AFD Endpoints",
    "description": "This module deploys a CDN Profile AFD Endpoint.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the AFD Endpoint."
      }
    },
    "profileName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent CDN profile. Required if the template is used in a standalone deployment."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. The location of the AFD Endpoint."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. The tags of the AFD Endpoint."
      }
    },
    "autoGeneratedDomainNameLabelScope": {
      "type": "string",
      "defaultValue": "TenantReuse",
      "allowedValues": [
        "NoReuse",
        "ResourceGroupReuse",
        "SubscriptionReuse",
        "TenantReuse"
      ],
      "metadata": {
        "description": "Optional. Indicates the endpoint name reuse scope. The default value is TenantReuse."
      }
    },
    "enabledState": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "Optional. Indicates whether the AFD Endpoint is enabled. The default value is Enabled."
      }
    },
    "routes": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. The list of routes for this AFD Endpoint."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    }
  },
  "variables": {
    "enableReferencedModulesTelemetry": false
  },
  "resources": {
    "defaultTelemetry": {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    "profile": {
      "existing": true,
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2023-05-01",
      "name": "[parameters('profileName')]"
    },
    "afd_endpoint": {
      "type": "Microsoft.Cdn/profiles/afdEndpoints",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('profileName'), parameters('name'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "autoGeneratedDomainNameLabelScope": "[parameters('autoGeneratedDomainNameLabelScope')]",
        "enabledState": "[parameters('enabledState')]"
      },
      "dependsOn": [
        "profile"
      ]
    },
    "afd_endpoint_route": {
      "copy": {
        "name": "afd_endpoint_route",
        "count": "[length(parameters('routes'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Profile-AfdEndpoint-Route', uniqueString(deployment().name, parameters('routes')[copyIndex()].name))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('routes')[copyIndex()].name]"
          },
          "profileName": {
            "value": "[parameters('profileName')]"
          },
          "afdEndpointName": {
            "value": "[parameters('name')]"
          },
          "cacheConfiguration": "[if(contains(parameters('routes')[copyIndex()], 'cacheConfiguration'), createObject('value', parameters('routes')[copyIndex()].cacheConfiguration), createObject('value', null()))]",
          "customDomainName": "[if(contains(parameters('routes')[copyIndex()], 'customDomainName'), createObject('value', parameters('routes')[copyIndex()].customDomainName), createObject('value', ''))]",
          "enabledState": "[if(contains(parameters('routes')[copyIndex()], 'enabledState'), createObject('value', parameters('routes')[copyIndex()].enabledState), createObject('value', 'Enabled'))]",
          "forwardingProtocol": "[if(contains(parameters('routes')[copyIndex()], 'forwardingProtocol'), createObject('value', parameters('routes')[copyIndex()].forwardingProtocol), createObject('value', 'MatchRequest'))]",
          "httpsRedirect": "[if(contains(parameters('routes')[copyIndex()], 'httpsRedirect'), createObject('value', parameters('routes')[copyIndex()].httpsRedirect), createObject('value', 'Enabled'))]",
          "linkToDefaultDomain": "[if(contains(parameters('routes')[copyIndex()], 'linkToDefaultDomain'), createObject('value', parameters('routes')[copyIndex()].linkToDefaultDomain), createObject('value', 'Enabled'))]",
          "originGroupName": "[if(contains(parameters('routes')[copyIndex()], 'originGroupName'), createObject('value', parameters('routes')[copyIndex()].originGroupName), createObject('value', ''))]",
          "originPath": "[if(contains(parameters('routes')[copyIndex()], 'originPath'), createObject('value', parameters('routes')[copyIndex()].originPath), createObject('value', ''))]",
          "patternsToMatch": "[if(contains(parameters('routes')[copyIndex()], 'patternsToMatch'), createObject('value', parameters('routes')[copyIndex()].patternsToMatch), createObject('value', createArray()))]",
          "ruleSets": "[if(contains(parameters('routes')[copyIndex()], 'ruleSets'), createObject('value', parameters('routes')[copyIndex()].ruleSets), createObject('value', createArray()))]",
          "supportedProtocols": "[if(contains(parameters('routes')[copyIndex()], 'supportedProtocols'), createObject('value', parameters('routes')[copyIndex()].supportedProtocols), createObject('value', createArray()))]",
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "1534020105352910282"
            },
            "name": "CDN Profiles AFD Endpoint Route",
            "description": "This module deploys a CDN Profile AFD Endpoint route.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the route."
              }
            },
            "profileName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the parent CDN profile."
              }
            },
            "afdEndpointName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the AFD endpoint."
              }
            },
            "cacheConfiguration": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object."
              }
            },
            "customDomainName": {
              "type": "string",
              "metadata": {
                "description": "Optional. The name of the custom domain. The custom domain must be defined in the profile customDomains."
              }
            },
            "forwardingProtocol": {
              "type": "string",
              "defaultValue": "MatchRequest",
              "allowedValues": [
                "HttpOnly",
                "HttpsOnly",
                "MatchRequest"
              ],
              "metadata": {
                "description": "Optional. The protocol this rule will use when forwarding traffic to backends."
              }
            },
            "enabledState": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ],
              "metadata": {
                "description": "Optional. Whether this route is enabled."
              }
            },
            "httpsRedirect": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ],
              "metadata": {
                "description": "Optional. Whether to automatically redirect HTTP traffic to HTTPS traffic."
              }
            },
            "linkToDefaultDomain": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ],
              "metadata": {
                "description": "Optional. Whether this route will be linked to the default endpoint domain."
              }
            },
            "originGroupName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Required. The name of the origin group. The origin group must be defined in the profile originGroups."
              }
            },
            "originPath": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."
              }
            },
            "patternsToMatch": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The route patterns of the rule."
              }
            },
            "ruleSets": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The rule sets of the rule. The rule sets must be defined in the profile ruleSets."
              }
            },
            "supportedProtocols": {
              "type": "array",
              "defaultValue": [],
              "allowedValues": [
                "Http",
                "Https"
              ],
              "metadata": {
                "description": "Optional. The supported protocols of the rule."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('profileName'), parameters('afdEndpointName'), parameters('name'))]",
              "properties": {
                "copy": [
                  {
                    "name": "ruleSets",
                    "count": "[length(parameters('ruleSets'))]",
                    "input": {
                      "id": "[resourceId('Microsoft.Cdn/profiles/ruleSets', parameters('profileName'), parameters('ruleSets')[copyIndex('ruleSets')].name)]"
                    }
                  }
                ],
                "cacheConfiguration": "[if(not(empty(parameters('cacheConfiguration'))), parameters('cacheConfiguration'), null())]",
                "customDomains": "[if(not(empty(parameters('customDomainName'))), createArray(createObject('id', resourceId('Microsoft.Cdn/profiles/customDomains', parameters('profileName'), parameters('customDomainName')))), createArray())]",
                "enabledState": "[parameters('enabledState')]",
                "forwardingProtocol": "[parameters('forwardingProtocol')]",
                "httpsRedirect": "[parameters('httpsRedirect')]",
                "linkToDefaultDomain": "[parameters('linkToDefaultDomain')]",
                "originGroup": {
                  "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('profileName'), parameters('originGroupName'))]"
                },
                "originPath": "[if(not(empty(parameters('originPath'))), parameters('originPath'), null())]",
                "patternsToMatch": "[parameters('patternsToMatch')]",
                "supportedProtocols": "[if(not(empty(parameters('supportedProtocols'))), parameters('supportedProtocols'), null())]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the route."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the route."
              },
              "value": "[resourceId('Microsoft.Cdn/profiles/afdEndpoints/routes', parameters('profileName'), parameters('afdEndpointName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the route was created in."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "afd_endpoint",
        "profile"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the AFD Endpoint."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource id of the AFD Endpoint."
      },
      "value": "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', parameters('profileName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the endpoint was created in."
      },
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference('afd_endpoint', '2023-05-01', 'full').location]"
    }
  }
}