{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.23.1.45101",
      "templateHash": "10790106014691997162"
    },
    "name": "Machine Learning Services Workspaces Computes",
    "description": "This module deploys a Machine Learning Services Workspaces Compute.\n\nAttaching a compute is not idempotent and will fail in case you try to redeploy over an existing compute in AML (see parameter `deployCompute`).",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "managedIdentitiesType": {
      "type": "object",
      "properties": {
        "systemAssigned": {
          "type": "bool",
          "nullable": true,
          "metadata": {
            "description": "Optional. Enables system assigned managed identity on the resource."
          }
        },
        "userAssignedResourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. The resource ID(s) to assign to the resource."
          }
        }
      },
      "nullable": true
    }
  },
  "parameters": {
    "machineLearningWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent Machine Learning Workspace. Required if the template is used in a standalone deployment."
      }
    },
    "name": {
      "type": "string",
      "minLength": 2,
      "maxLength": 16,
      "metadata": {
        "description": "Required. Name of the compute."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Specifies the location of the resource."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "Basic",
        "Free",
        "Premium",
        "Standard",
        ""
      ],
      "metadata": {
        "description": "Optional. Specifies the sku, also referred as \"edition\". Required for creating a compute resource."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Contains resource tags defined as key-value pairs. Ignored when attaching a compute resource, i.e. when you provide a resource ID."
      }
    },
    "deployCompute": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Flag to specify whether to deploy the compute. Required only for attach (i.e. providing a resource ID), as in this case the operation is not idempotent, i.e. a second deployment will fail. Therefore, this flag needs to be set to \"false\" as long as the compute resource exists."
      }
    },
    "computeLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for the underlying compute. Ignored when attaching a compute resource, i.e. when you provide a resource ID."
      }
    },
    "description": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The description of the Machine Learning compute."
      }
    },
    "disableLocalAuth": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication."
      }
    },
    "resourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. ARM resource ID of the underlying compute."
      }
    },
    "computeType": {
      "type": "string",
      "allowedValues": [
        "AKS",
        "AmlCompute",
        "ComputeInstance",
        "Databricks",
        "DataFactory",
        "DataLakeAnalytics",
        "HDInsight",
        "Kubernetes",
        "SynapseSpark",
        "VirtualMachine"
      ],
      "metadata": {
        "description": "Required. Set the object type."
      }
    },
    "properties": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The properties of the compute. Will be ignored in case \"resourceId\" is set."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    },
    "managedIdentities": {
      "$ref": "#/definitions/managedIdentitiesType",
      "metadata": {
        "description": "Optional. The managed identity definition for this resource."
      }
    }
  },
  "variables": {
    "formattedUserAssignedIdentities": "[reduce(map(coalesce(tryGet(parameters('managedIdentities'), 'userAssignedResourceIds'), createArray()), lambda('id', createObject(format('{0}', lambdaVariables('id')), createObject()))), createObject(), lambda('cur', 'next', union(lambdaVariables('cur'), lambdaVariables('next'))))]",
    "identity": "[if(not(empty(parameters('managedIdentities'))), createObject('type', if(coalesce(tryGet(parameters('managedIdentities'), 'systemAssigned'), false()), if(not(empty(coalesce(tryGet(parameters('managedIdentities'), 'userAssignedResourceIds'), createObject()))), 'SystemAssigned,UserAssigned', 'SystemAssigned'), if(not(empty(coalesce(tryGet(parameters('managedIdentities'), 'userAssignedResourceIds'), createObject()))), 'UserAssigned', null())), 'userAssignedIdentities', if(not(empty(variables('formattedUserAssignedIdentities'))), variables('formattedUserAssignedIdentities'), null())), null())]"
  },
  "resources": {
    "machineLearningWorkspace": {
      "existing": true,
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('machineLearningWorkspaceName')]"
    },
    "defaultTelemetry": {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    "machineLearningWorkspaceCompute": {
      "condition": "[equals(parameters('deployCompute'), true())]",
      "type": "Microsoft.MachineLearningServices/workspaces/computes",
      "apiVersion": "2022-10-01",
      "name": "[format('{0}/{1}', parameters('machineLearningWorkspaceName'), parameters('name'))]",
      "location": "[parameters('location')]",
      "tags": "[if(empty(parameters('resourceId')), parameters('tags'), null())]",
      "sku": "[if(empty(parameters('resourceId')), createObject('name', parameters('sku'), 'tier', parameters('sku')), null())]",
      "identity": "[if(empty(parameters('resourceId')), variables('identity'), null())]",
      "properties": "[union(createObject('description', parameters('description'), 'disableLocalAuth', parameters('disableLocalAuth'), 'computeType', parameters('computeType')), if(not(empty(parameters('resourceId'))), createObject('resourceId', parameters('resourceId')), createObject('computeLocation', parameters('computeLocation'), 'properties', parameters('properties'))))]",
      "dependsOn": [
        "machineLearningWorkspace"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the compute."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the compute."
      },
      "value": "[resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('machineLearningWorkspaceName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group the compute was deployed into."
      },
      "value": "[resourceGroup().name]"
    },
    "systemAssignedMIPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "The principal ID of the system assigned identity."
      },
      "value": "[if(and(coalesce(tryGet(parameters('managedIdentities'), 'systemAssigned'), false()), contains(reference('machineLearningWorkspace', '2022-10-01', 'full').identity, 'principalId')), reference('machineLearningWorkspace', '2022-10-01', 'full').identity.principalId, '')]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference('machineLearningWorkspaceCompute', '2022-10-01', 'full').location]"
    }
  }
}