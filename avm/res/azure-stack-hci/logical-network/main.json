{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "882640149062350351"
    },
    "name": "Azure Stack HCI Logical Network",
    "description": "This module deploys an Azure Stack HCI Logical Network."
  },
  "definitions": {
    "subnetIpConfigurationReferenceType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "metadata": {
            "description": "Required. The ARM ID for a Network Interface."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The type for an IP configuration reference."
      }
    },
    "roleAssignmentType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The name (as GUID) of the role assignment. If not provided, a GUID will be generated."
          }
        },
        "roleDefinitionIdOrName": {
          "type": "string",
          "metadata": {
            "description": "Required. The role to assign. You can provide either the display name of the role definition, the role definition GUID, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
          }
        },
        "principalId": {
          "type": "string",
          "metadata": {
            "description": "Required. The principal ID of the principal (user/group/identity) to assign the role to."
          }
        },
        "principalType": {
          "type": "string",
          "allowedValues": [
            "Device",
            "ForeignGroup",
            "Group",
            "ServicePrincipal",
            "User"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. The principal type of the assigned principal ID."
          }
        },
        "description": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The description of the role assignment."
          }
        },
        "condition": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\"."
          }
        },
        "conditionVersion": {
          "type": "string",
          "allowedValues": [
            "2.0"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Version of the condition."
          }
        },
        "delegatedManagedIdentityResourceId": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The Resource Id of the delegated managed identity resource."
          }
        }
      },
      "metadata": {
        "description": "An AVM-aligned type for a role assignment.",
        "__bicep_imported_from!": {
          "sourceTemplate": "br:mcr.microsoft.com/bicep/avm/utl/types/avm-common-types:0.5.1"
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the resource to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    },
    "customLocationResourceId": {
      "type": "string",
      "metadata": {
        "description": "Required. The custom location ID."
      }
    },
    "vmSwitchName": {
      "type": "string",
      "metadata": {
        "description": "Required. The VM switch name."
      }
    },
    "subnet0Name": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Optional. The subnet name."
      }
    },
    "ipAllocationMethod": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Static",
        "Dynamic"
      ],
      "metadata": {
        "description": "Optional. The IP allocation method."
      }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Conditional. The DNS servers list. Required if ipAllocationMethod is Static."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Tags for the logical network."
      }
    },
    "addressPrefix": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Conditional. Address prefix for the logical network. Required if ipAllocationMethod is Static."
      }
    },
    "vlanId": {
      "type": "int",
      "nullable": true,
      "metadata": {
        "description": "Optional. VLan Id for the logical network."
      }
    },
    "ipConfigurationReferences": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/subnetIpConfigurationReferenceType"
      },
      "nullable": true,
      "metadata": {
        "description": "Optional. A list of IP configuration references."
      }
    },
    "startingAddress": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Conditional. The starting IP address of the IP address range. Required if ipAllocationMethod is Static."
      }
    },
    "endingAddress": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Conditional. The ending IP address of the IP address range. Required if ipAllocationMethod is Static."
      }
    },
    "routeName": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Conditional. The route name. Required if ipAllocationMethod is Static."
      }
    },
    "defaultGateway": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Conditional. The default gateway for the network. Required if ipAllocationMethod is Static."
      }
    },
    "roleAssignments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/roleAssignmentType"
      },
      "nullable": true,
      "metadata": {
        "description": "Optional. Array of role assignments to create."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "formattedRoleAssignments",
        "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]",
        "input": "[union(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')], createObject('roleDefinitionId', coalesce(tryGet(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName), if(contains(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, '/providers/Microsoft.Authorization/roleDefinitions/'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName)))))]"
      }
    ],
    "builtInRoleNames": {
      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
      "Role Based Access Control Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]"
    },
    "subnet1Pools": [
      {
        "start": "[parameters('startingAddress')]",
        "end": "[parameters('endingAddress')]",
        "info": {}
      }
    ],
    "routeTable": {
      "properties": {
        "routes": [
          {
            "name": "[parameters('routeName')]",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopIpAddress": "[parameters('defaultGateway')]"
            }
          }
        ]
      }
    }
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[take(format('46d3xbcp.res.azurestackhci-logicalnetwork.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4)), 64)]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "logicalNetwork": {
      "type": "Microsoft.AzureStackHCI/logicalNetworks",
      "apiVersion": "2024-05-01-preview",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "extendedLocation": {
        "name": "[parameters('customLocationResourceId')]",
        "type": "CustomLocation"
      },
      "properties": {
        "dhcpOptions": {
          "dnsServers": "[if(equals(parameters('ipAllocationMethod'), 'Dynamic'), null(), parameters('dnsServers'))]"
        },
        "subnets": [
          {
            "name": "[parameters('subnet0Name')]",
            "properties": {
              "addressPrefix": "[parameters('addressPrefix')]",
              "ipAllocationMethod": "[parameters('ipAllocationMethod')]",
              "ipConfigurationReferences": "[map(coalesce(parameters('ipConfigurationReferences'), createArray()), lambda('ipConfigurationReference', createObject('ID', lambdaVariables('ipConfigurationReference').id)))]",
              "vlan": "[parameters('vlanId')]",
              "ipPools": "[if(equals(parameters('ipAllocationMethod'), 'Dynamic'), null(), variables('subnet1Pools'))]",
              "routeTable": "[if(equals(parameters('ipAllocationMethod'), 'Dynamic'), null(), variables('routeTable'))]"
            }
          }
        ],
        "vmSwitchName": "[parameters('vmSwitchName')]"
      }
    },
    "logicalNetwork_roleAssignments": {
      "copy": {
        "name": "logicalNetwork_roleAssignments",
        "count": "[length(coalesce(variables('formattedRoleAssignments'), createArray()))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.AzureStackHCI/logicalNetworks/{0}', parameters('name'))]",
      "name": "[coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'name'), guid(resourceId('Microsoft.AzureStackHCI/logicalNetworks', parameters('name')), coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId, coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId))]",
      "properties": {
        "roleDefinitionId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId]",
        "principalId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId]",
        "description": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'description')]",
        "principalType": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'principalType')]",
        "condition": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition')]",
        "conditionVersion": "[if(not(empty(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
        "delegatedManagedIdentityResourceId": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
      },
      "dependsOn": [
        "logicalNetwork"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the logical network."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the logical network."
      },
      "value": "[resourceId('Microsoft.AzureStackHCI/logicalNetworks', parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group of the logical network."
      },
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location of the logical network."
      },
      "value": "[reference('logicalNetwork', '2024-05-01-preview', 'full').location]"
    }
  }
}