{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "5981394739767783762"
    },
    "name": "Diagnostic Settings (Activity Logs) for Azure Subscriptions",
    "description": "This module deploys a Subscription wide export of the Activity Log.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "logCategoriesAndGroupsType": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. Name of a Diagnostic Log category for a resource type this setting is applied to. Set the specific logs to collect here."
            }
          },
          "categoryGroup": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. Name of a Diagnostic Log category group for a resource type this setting is applied to. Set to `AllLogs` to collect all logs."
            }
          },
          "enabled": {
            "type": "bool",
            "nullable": true,
            "metadata": {
              "description": "Optional. Enable or disable the category explicitly. Default is `true`."
            }
          }
        }
      },
      "nullable": true,
      "metadata": {
        "description": "Optional. The name of logs that will be streamed. \"allLogs\" includes all possible logs for the resource. Set to `[]` to disable log collection."
      }
    },
    "metricCategoriesType": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "metadata": {
              "description": "Required. Name of a Diagnostic Metric category for a resource type this setting is applied to. Set to `AllMetrics` to collect all metrics."
            }
          },
          "enabled": {
            "type": "bool",
            "nullable": true,
            "metadata": {
              "description": "Optional. Enable or disable the category explicitly. Default is `true`."
            }
          }
        }
      },
      "nullable": true,
      "metadata": {
        "description": "Optional. The name of logs that will be streamed. \"allLogs\" includes all possible logs for the resource. Set to `[]` to disable log collection."
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "[format('{0}-diagnosticSettings', uniqueString(subscription().id))]",
      "minLength": 1,
      "maxLength": 260,
      "metadata": {
        "description": "Optional. Name of the Diagnostic settings."
      }
    },
    "storageAccountResourceId": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic storage account."
      }
    },
    "workspaceResourceId": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic log analytics workspace."
      }
    },
    "eventHubAuthorizationRuleResourceId": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
      }
    },
    "eventHubName": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. Name of the diagnostic event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
      }
    },
    "logCategoriesAndGroups": {
      "$ref": "#/definitions/logCategoriesAndGroupsType",
      "metadata": {
        "description": "Optional. The name of logs that will be streamed. \"allLogs\" includes all possible logs for the resource. Set to `[]` to disable log collection."
      }
    },
    "metricCategories": {
      "$ref": "#/definitions/metricCategoriesType",
      "nullable": true,
      "metadata": {
        "description": "Optional. The name of logs that will be streamed. \"allLogs\" includes all possible logs for the resource. Set to `[]` to disable log collection."
      }
    },
    "logAnalyticsDestinationType": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "",
        "Dedicated",
        "AzureDiagnostics"
      ],
      "metadata": {
        "description": "Optional. A string indicating whether the export to Log Analytics should use the default destination type, i.e. AzureDiagnostics, or use a destination type."
      }
    },
    "marketplacePartnerResourceId": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic Logs."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional. Location deployment metadata."
      }
    }
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2023-07-01",
      "name": "[format('46d3xbcp.res.insights-diagnosticsetting.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4))]",
      "location": "[parameters('location')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "diagnosticSetting": {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "name": "[parameters('name')]",
      "properties": {
        "copy": [
          {
            "name": "logs",
            "count": "[length(coalesce(parameters('logCategoriesAndGroups'), createArray(createObject('categoryGroup', 'allLogs'))))]",
            "input": {
              "categoryGroup": "[tryGet(coalesce(parameters('logCategoriesAndGroups'), createArray(createObject('categoryGroup', 'allLogs')))[copyIndex('logs')], 'categoryGroup')]",
              "category": "[tryGet(coalesce(parameters('logCategoriesAndGroups'), createArray(createObject('categoryGroup', 'allLogs')))[copyIndex('logs')], 'category')]",
              "enabled": "[coalesce(tryGet(coalesce(parameters('logCategoriesAndGroups'), createArray(createObject('categoryGroup', 'allLogs')))[copyIndex('logs')], 'enabled'), true())]"
            }
          },
          {
            "name": "metrics",
            "count": "[length(coalesce(parameters('metricCategories'), createArray(createObject('category', 'AllMetrics'))))]",
            "input": {
              "category": "[coalesce(parameters('metricCategories'), createArray(createObject('category', 'AllMetrics')))[copyIndex('metrics')].category]",
              "enabled": "[coalesce(tryGet(coalesce(parameters('metricCategories'), createArray(createObject('category', 'AllMetrics')))[copyIndex('metrics')], 'enabled'), true())]",
              "timeGrain": null
            }
          }
        ],
        "storageAccountId": "[parameters('storageAccountResourceId')]",
        "workspaceId": "[parameters('workspaceResourceId')]",
        "eventHubAuthorizationRuleId": "[parameters('eventHubAuthorizationRuleResourceId')]",
        "eventHubName": "[parameters('eventHubName')]",
        "logAnalyticsDestinationType": "[if(not(empty(parameters('logAnalyticsDestinationType'))), parameters('logAnalyticsDestinationType'), null())]",
        "marketplacePartnerId": "[parameters('marketplacePartnerResourceId')]"
      }
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the diagnostic settings."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the diagnostic settings."
      },
      "value": "[subscriptionResourceId('Microsoft.Insights/diagnosticSettings', parameters('name'))]"
    },
    "subscriptionName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subscription to deploy into."
      },
      "value": "[subscription().displayName]"
    }
  }
}