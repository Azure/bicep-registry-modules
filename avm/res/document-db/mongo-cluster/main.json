{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "4127832857130027142"
    },
    "name": "DocumentDB Mongo Clusters",
    "description": "This module deploys a DocumentDB Mongo Cluster.\n\n**Note:** This module is not intended for broad, generic use, as it was designed to cater for the requirements of the AZD CLI product. Feature requests and bug fix requests are welcome if they support the development of the AZD CLI but may not be incorporated if they aim to make this module more generic than what it needs to be for its primary use case.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "networkAclsType": {
      "type": "object",
      "properties": {
        "customRules": {
          "type": "array",
          "prefixItems": [
            {
              "type": "object",
              "properties": {
                "firewallRuleName": {
                  "type": "string",
                  "nullable": true,
                  "metadata": {
                    "description": "Optional. The name of the custom firewall rule."
                  }
                },
                "startIpAddress": {
                  "type": "string",
                  "metadata": {
                    "description": "Required. The starting IP address for the custom firewall rule."
                  }
                },
                "endIpAddress": {
                  "type": "string",
                  "metadata": {
                    "description": "Required. The ending IP address for the custom firewall rule."
                  }
                }
              }
            }
          ],
          "items": false,
          "nullable": true,
          "metadata": {
            "description": "Optional. List of custom firewall rules."
          }
        },
        "allowAllIPs": {
          "type": "bool",
          "metadata": {
            "description": "Required. Indicates whether to allow all IP addresses."
          }
        },
        "allowAzureIPs": {
          "type": "bool",
          "metadata": {
            "description": "Required. Indicates whether to allow all Azure internal IP addresses."
          }
        }
      }
    },
    "firewallSetType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "metadata": {
            "description": "The name of the created firewall rule."
          }
        },
        "resourceId": {
          "type": "string",
          "metadata": {
            "description": "The resource ID of the created firewall rule."
          }
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the Mongo Cluster."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Default to current resource group scope location. Location for all resources."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Tags of the Database Account resource."
      }
    },
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "Required. Username for admin user."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 128,
      "metadata": {
        "description": "Required. Password for admin user."
      }
    },
    "createMode": {
      "type": "string",
      "defaultValue": "Default",
      "metadata": {
        "description": "Optional. Mode to create the mongo cluster."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    },
    "highAvailabilityMode": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Whether high availability is enabled on the node group."
      }
    },
    "nodeCount": {
      "type": "int",
      "metadata": {
        "description": "Required. Number of nodes in the node group."
      }
    },
    "nodeType": {
      "type": "string",
      "defaultValue": "Shard",
      "metadata": {
        "description": "Optional. Deployed Node type in the node group."
      }
    },
    "sku": {
      "type": "string",
      "metadata": {
        "description": "Required. SKU defines the CPU and memory that is provisioned for each node."
      }
    },
    "storage": {
      "type": "int",
      "metadata": {
        "description": "Required. Disk storage size for the node group in GB."
      }
    },
    "networkAcls": {
      "$ref": "#/definitions/networkAclsType",
      "nullable": true,
      "metadata": {
        "description": "Optional. IP addresses to allow access to the cluster from."
      }
    }
  },
  "variables": {
    "firewallRules": "[union(map(coalesce(tryGet(parameters('networkAcls'), 'customRules'), createArray()), lambda('customRule', createObject('name', coalesce(tryGet(lambdaVariables('customRule'), 'firewallRuleName'), format('allow-{0}-to-{1}', replace(lambdaVariables('customRule').startIpAddress, '.', ''), replace(lambdaVariables('customRule').endIpAddress, '.', ''))), 'startIpAddress', lambdaVariables('customRule').startIpAddress, 'endIpAddress', lambdaVariables('customRule').endIpAddress))), if(coalesce(tryGet(parameters('networkAcls'), 'allowAllIPs'), false()), createArray(createObject('name', 'allow-all-IPs', 'startIpAddress', '0.0.0.0', 'endIpAddress', '255.255.255.255')), createArray()), if(coalesce(tryGet(parameters('networkAcls'), 'allowAzureIPs'), false()), createArray(createObject('name', 'allow-all-azure-internal-IPs', 'startIpAddress', '0.0.0.0', 'endIpAddress', '0.0.0.0')), createArray()))]"
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[format('46d3xbcp.res.documentdb-mongocluster.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "mongoCluster": {
      "type": "Microsoft.DocumentDB/mongoClusters",
      "apiVersion": "2024-02-15-preview",
      "name": "[parameters('name')]",
      "tags": "[parameters('tags')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "createMode": "[parameters('createMode')]",
        "nodeGroupSpecs": [
          {
            "diskSizeGB": "[parameters('storage')]",
            "enableHa": "[parameters('highAvailabilityMode')]",
            "kind": "[parameters('nodeType')]",
            "nodeCount": "[parameters('nodeCount')]",
            "sku": "[parameters('sku')]"
          }
        ]
      }
    },
    "mongoCluster_configFireWallRules": {
      "copy": {
        "name": "mongoCluster_configFireWallRules",
        "count": "[length(variables('firewallRules'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-firewallRule-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "mongoClusterName": {
            "value": "[parameters('name')]"
          },
          "name": {
            "value": "[variables('firewallRules')[copyIndex()].name]"
          },
          "startIpAddress": {
            "value": "[variables('firewallRules')[copyIndex()].startIpAddress]"
          },
          "endIpAddress": {
            "value": "[variables('firewallRules')[copyIndex()].endIpAddress]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "11328804906323315999"
            },
            "name": "DocumentDB Mongo Clusters Config FireWall Rules",
            "description": "This module config firewall rules for DocumentDB Mongo Cluster.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "mongoClusterName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent mongo cluster. Required if the template is used in a standalone deployment."
              }
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the firewall rule."
              }
            },
            "startIpAddress": {
              "type": "string",
              "metadata": {
                "description": "Required. The start IP address of the mongo cluster firewall rule. Must be IPv4 format."
              }
            },
            "endIpAddress": {
              "type": "string",
              "metadata": {
                "description": "Required. The end IP address of the mongo cluster firewall rule. Must be IPv4 format."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/mongoClusters/firewallRules",
              "apiVersion": "2024-02-15-preview",
              "name": "[format('{0}/{1}', parameters('mongoClusterName'), parameters('name'))]",
              "properties": {
                "startIpAddress": "[parameters('startIpAddress')]",
                "endIpAddress": "[parameters('endIpAddress')]"
              }
            }
          ],
          "outputs": {
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the mongo cluster was created in."
              },
              "value": "[resourceGroup().name]"
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the firewall rule."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the firewall rule."
              },
              "value": "[resourceId('Microsoft.DocumentDB/mongoClusters/firewallRules', parameters('mongoClusterName'), parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "mongoCluster"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the mongo cluster."
      },
      "value": "[parameters('name')]"
    },
    "mongoClusterResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the mongo cluster."
      },
      "value": "[resourceId('Microsoft.DocumentDB/mongoClusters', parameters('name'))]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the resource group the firewall rule was created in."
      },
      "value": "[resourceGroup().id]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the firewall rule was created in."
      },
      "value": "[resourceGroup().name]"
    },
    "connectionStringKey": {
      "type": "string",
      "metadata": {
        "description": "The connection string key of the mongo cluster."
      },
      "value": "[reference('mongoCluster').connectionString]"
    },
    "firewallRules": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/firewallSetType"
      },
      "metadata": {
        "description": "The name and resource ID of firewall rule."
      },
      "copy": {
        "count": "[length(range(0, length(coalesce(variables('firewallRules'), createArray()))))]",
        "input": {
          "name": "[reference(format('mongoCluster_configFireWallRules[{0}]', range(0, length(coalesce(variables('firewallRules'), createArray())))[copyIndex()])).outputs.name.value]",
          "resourceId": "[reference(format('mongoCluster_configFireWallRules[{0}]', range(0, length(coalesce(variables('firewallRules'), createArray())))[copyIndex()])).outputs.resourceId.value]"
        }
      }
    }
  }
}