{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "806800728084876706"
    },
    "name": "Registration Definitions",
    "description": "This module deploys a `Registration Definition` and a `Registration Assignment` (often referred to as 'Lighthouse' or 'resource delegation') on a subscription or resource group scope.\nThis type of delegation is very similar to role assignments but here the principal that is assigned a role is in a remote/managing Azure Active Directory tenant.\nThe templates are run towards the tenant where the Azure resources you want to delegate access to are, providing 'authorizations' (aka. access delegation) to principals in a remote/managing tenant.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "authorizationType": {
      "type": "object",
      "properties": {
        "delegatedRoleDefinitionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true,
          "metadata": {
            "description": "Conditional. The list of role definition ids which define all the permissions that the user in the authorization can assign to other principals. Required if the `roleDefinitionId` refers to the User Access Administrator Role."
          }
        },
        "principalId": {
          "type": "string",
          "metadata": {
            "description": "Required. The identifier of the Azure Active Directory principal."
          }
        },
        "principalIdDisplayName": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The display name of the Azure Active Directory principal."
          }
        },
        "roleDefinitionId": {
          "type": "string",
          "metadata": {
            "description": "Required. The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "Authorization object describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant."
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Specify a unique name for your offer/registration. i.e '<Managing Tenant> - <Remote Tenant> - <ResourceName>'."
      }
    },
    "registrationDescription": {
      "type": "string",
      "metadata": {
        "description": "Required. Description of the offer/registration. i.e. 'Managed by <Managing Org Name>'."
      }
    },
    "managedByTenantId": {
      "type": "string",
      "metadata": {
        "description": "Required. Specify the tenant ID of the tenant which homes the principals you are delegating permissions to."
      }
    },
    "authorizations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/authorizationType"
      },
      "metadata": {
        "description": "Required. Specify an array of objects, containing object of Azure Active Directory principalId, a Azure roleDefinitionId, and an optional principalIdDisplayName. The roleDefinition specified is granted to the principalId in the provider's Active Directory and the principalIdDisplayName is visible to customers."
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Specify the name of the Resource Group to delegate access to. If not provided, delegation will be done on the targeted subscription."
      }
    },
    "metadataLocation": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional. Location of the deployment metadata."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    },
    "registrationId": {
      "type": "string",
      "defaultValue": "[if(empty(parameters('resourceGroupName')), guid(parameters('managedByTenantId'), subscription().tenantId, subscription().subscriptionId), guid(parameters('managedByTenantId'), subscription().tenantId, subscription().subscriptionId, parameters('resourceGroupName')))]",
      "metadata": {
        "description": "Optional. The Id (GUID) of the registration definition."
      }
    }
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[format('46d3xbcp.res.managedservices-registrationdef.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('metadataLocation')), 0, 4))]",
      "location": "[parameters('metadataLocation')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "registrationDefinition": {
      "type": "Microsoft.ManagedServices/registrationDefinitions",
      "apiVersion": "2022-10-01",
      "name": "[parameters('registrationId')]",
      "properties": {
        "registrationDefinitionName": "[parameters('name')]",
        "description": "[parameters('registrationDescription')]",
        "managedByTenantId": "[parameters('managedByTenantId')]",
        "authorizations": "[parameters('authorizations')]"
      }
    },
    "registrationAssignment_sub": {
      "condition": "[empty(parameters('resourceGroupName'))]",
      "type": "Microsoft.ManagedServices/registrationAssignments",
      "apiVersion": "2022-10-01",
      "name": "[parameters('registrationId')]",
      "properties": {
        "registrationDefinitionId": "[subscriptionResourceId('Microsoft.ManagedServices/registrationDefinitions', parameters('registrationId'))]"
      },
      "dependsOn": [
        "registrationDefinition"
      ]
    },
    "registrationAssignment_rg": {
      "condition": "[not(empty(parameters('resourceGroupName')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-RegDef-RegAssignment', uniqueString(deployment().name))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "registrationDefinitionId": {
            "value": "[subscriptionResourceId('Microsoft.ManagedServices/registrationDefinitions', parameters('registrationId'))]"
          },
          "registrationAssignmentId": {
            "value": "[parameters('registrationId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "1358545064505499503"
            },
            "name": "Registration Assignment",
            "description": "Create a registration assignment.",
            "category": "Managed Services"
          },
          "parameters": {
            "registrationDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Required. The ID of the registration definition."
              }
            },
            "registrationAssignmentId": {
              "type": "string",
              "metadata": {
                "description": "Required. The ID of the registration assignment."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedServices/registrationAssignments",
              "apiVersion": "2022-10-01",
              "name": "[parameters('registrationAssignmentId')]",
              "properties": {
                "registrationDefinitionId": "[parameters('registrationDefinitionId')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the registration assignment."
              },
              "value": "[parameters('registrationAssignmentId')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the registration assignment."
              },
              "value": "[resourceId('Microsoft.ManagedServices/registrationAssignments', parameters('registrationAssignmentId'))]"
            }
          }
        }
      },
      "dependsOn": [
        "registrationDefinition"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the registration definition."
      },
      "value": "[parameters('registrationId')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the registration definition."
      },
      "value": "[subscriptionResourceId('Microsoft.ManagedServices/registrationDefinitions', parameters('registrationId'))]"
    },
    "subscriptionName": {
      "type": "string",
      "metadata": {
        "description": "The subscription the registration definition was deployed into."
      },
      "value": "[subscription().displayName]"
    },
    "assignmentResourceId": {
      "type": "string",
      "metadata": {
        "description": "The registration assignment resource ID."
      },
      "value": "[if(empty(parameters('resourceGroupName')), subscriptionResourceId('Microsoft.ManagedServices/registrationAssignments', parameters('registrationId')), reference('registrationAssignment_rg').outputs.resourceId.value)]"
    }
  }
}