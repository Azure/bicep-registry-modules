{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "8467394370323395591"
    },
    "name": "Kubernetes Connected Cluster",
    "description": "This module deploys an Azure Arc connected cluster."
  },
  "definitions": {
    "aadProfileType": {
      "type": "object",
      "properties": {
        "adminGroupObjectIDs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "metadata": {
            "description": "Required. The list of AAD group object IDs that will have admin role of the cluster."
          }
        },
        "enableAzureRBAC": {
          "type": "bool",
          "metadata": {
            "description": "Required. Whether to enable Azure RBAC for Kubernetes authorization."
          }
        },
        "tenantID": {
          "type": "string",
          "metadata": {
            "description": "Required. The AAD tenant ID."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The type for AAD profile configuration."
      }
    },
    "systemComponentType": {
      "type": "object",
      "properties": {
        "majorVersion": {
          "type": "int",
          "metadata": {
            "description": "Required. The major version of the system component."
          }
        },
        "type": {
          "type": "string",
          "metadata": {
            "description": "Required. The type of the system component."
          }
        },
        "userSpecifiedVersion": {
          "type": "string",
          "metadata": {
            "description": "Required. The user specified version of the system component."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The type for system component configuration."
      }
    },
    "arcAgentProfileType": {
      "type": "object",
      "properties": {
        "agentAutoUpgrade": {
          "type": "string",
          "allowedValues": [
            "Disabled",
            "Enabled"
          ],
          "metadata": {
            "description": "Required. Indicates whether the Arc agents on the be upgraded automatically to the latest version."
          }
        },
        "agentErrors": {
          "type": "array",
          "nullable": true,
          "metadata": {
            "description": "Optional. The errors encountered by the Arc agent."
          }
        },
        "desiredAgentVersion": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The desired version of the Arc agent."
          }
        },
        "systemComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/systemComponentType"
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. List of system extensions that are installed on the cluster resource."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The type for Arc agent profile configuration."
      }
    },
    "oidcIssuerProfileType": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "bool",
          "metadata": {
            "description": "Required. Whether the OIDC issuer is enabled."
          }
        },
        "selfHostedIssuerUrl": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The URL of the self-hosted OIDC issuer."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The type for OIDC issuer profile configuration."
      }
    },
    "securityProfileType": {
      "type": "object",
      "properties": {
        "workloadIdentity": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "bool",
              "metadata": {
                "description": "Required. Whether workload identity is enabled."
              }
            }
          },
          "metadata": {
            "description": "Required. The workload identity configuration."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The type for security profile configuration."
      }
    },
    "roleAssignmentType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The name (as GUID) of the role assignment. If not provided, a GUID will be generated."
          }
        },
        "roleDefinitionIdOrName": {
          "type": "string",
          "metadata": {
            "description": "Required. The role to assign. You can provide either the display name of the role definition, the role definition GUID, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
          }
        },
        "principalId": {
          "type": "string",
          "metadata": {
            "description": "Required. The principal ID of the principal (user/group/identity) to assign the role to."
          }
        },
        "principalType": {
          "type": "string",
          "allowedValues": [
            "Device",
            "ForeignGroup",
            "Group",
            "ServicePrincipal",
            "User"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. The principal type of the assigned principal ID."
          }
        },
        "description": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The description of the role assignment."
          }
        },
        "condition": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\"."
          }
        },
        "conditionVersion": {
          "type": "string",
          "allowedValues": [
            "2.0"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Version of the condition."
          }
        },
        "delegatedManagedIdentityResourceId": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The Resource Id of the delegated managed identity resource."
          }
        }
      },
      "metadata": {
        "description": "An AVM-aligned type for a role assignment.",
        "__bicep_imported_from!": {
          "sourceTemplate": "br:mcr.microsoft.com/bicep/avm/utl/types/avm-common-types:0.5.1"
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Azure Arc connected cluster."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Tags for the cluster resource."
      }
    },
    "aadProfile": {
      "$ref": "#/definitions/aadProfileType",
      "nullable": true,
      "metadata": {
        "description": "Optional. AAD profile for the connected cluster."
      }
    },
    "arcAgentProfile": {
      "$ref": "#/definitions/arcAgentProfileType",
      "defaultValue": {
        "agentAutoUpgrade": "Enabled"
      },
      "metadata": {
        "description": "Optional. Arc agentry configuration for the provisioned cluster."
      }
    },
    "oidcIssuerProfile": {
      "$ref": "#/definitions/oidcIssuerProfileType",
      "defaultValue": {
        "enabled": false
      },
      "metadata": {
        "description": "Optional. Open ID Connect (OIDC) Issuer Profile for the connected cluster."
      }
    },
    "securityProfile": {
      "$ref": "#/definitions/securityProfileType",
      "defaultValue": {
        "workloadIdentity": {
          "enabled": false
        }
      },
      "metadata": {
        "description": "Optional. Security profile for the connected cluster."
      }
    },
    "roleAssignments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/roleAssignmentType"
      },
      "nullable": true,
      "metadata": {
        "description": "Optional. Array of role assignments to create."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "formattedRoleAssignments",
        "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]",
        "input": "[union(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')], createObject('roleDefinitionId', coalesce(tryGet(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName), if(contains(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, '/providers/Microsoft.Authorization/roleDefinitions/'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName)))))]"
      }
    ],
    "builtInRoleNames": {
      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
      "Role Based Access Control Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]"
    }
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[format('46d3xbcp.res.kubernetes-connectedcluster.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "connectedCluster": {
      "type": "Microsoft.Kubernetes/connectedClusters",
      "apiVersion": "2024-07-15-preview",
      "name": "[parameters('name')]",
      "kind": "ProvisionedCluster",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": "[parameters('tags')]",
      "properties": {
        "aadProfile": "[parameters('aadProfile')]",
        "agentPublicKeyCertificate": "",
        "arcAgentProfile": "[parameters('arcAgentProfile')]",
        "distribution": null,
        "infrastructure": null,
        "oidcIssuerProfile": "[parameters('oidcIssuerProfile')]",
        "securityProfile": "[parameters('securityProfile')]",
        "azureHybridBenefit": null
      }
    },
    "connectedCluster_roleAssignments": {
      "copy": {
        "name": "connectedCluster_roleAssignments",
        "count": "[length(coalesce(variables('formattedRoleAssignments'), createArray()))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Kubernetes/connectedClusters/{0}', parameters('name'))]",
      "name": "[coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'name'), guid(resourceId('Microsoft.Kubernetes/connectedClusters', parameters('name')), coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId, coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId))]",
      "properties": {
        "roleDefinitionId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId]",
        "principalId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId]",
        "description": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'description')]",
        "principalType": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'principalType')]",
        "condition": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition')]",
        "conditionVersion": "[if(not(empty(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
        "delegatedManagedIdentityResourceId": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
      },
      "dependsOn": [
        "connectedCluster"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the connected cluster."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the connected cluster."
      },
      "value": "[resourceId('Microsoft.Kubernetes/connectedClusters', parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group of the connected cluster."
      },
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location of the connected cluster."
      },
      "value": "[reference('connectedCluster', '2024-07-15-preview', 'full').location]"
    },
    "systemAssignedMIPrincipalId": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "The principalId of the connected cluster identity."
      },
      "value": "[reference('connectedCluster', '2024-07-15-preview', 'full').identity.principalId]"
    }
  }
}