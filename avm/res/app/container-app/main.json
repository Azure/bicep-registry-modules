{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.23.1.45101",
      "templateHash": "3664175856787955387"
    },
    "name": "Container Apps",
    "description": "This module deploys a Container App.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "managedIdentitiesType": {
      "type": "object",
      "properties": {
        "systemAssigned": {
          "type": "bool",
          "nullable": true,
          "metadata": {
            "description": "Optional. Enables system assigned managed identity on the resource."
          }
        },
        "userAssignedResourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. The resource ID(s) to assign to the resource."
          }
        }
      },
      "nullable": true
    },
    "lockType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the name of lock."
          }
        },
        "kind": {
          "type": "string",
          "allowedValues": [
            "CanNotDelete",
            "None",
            "ReadOnly"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the type of lock."
          }
        }
      },
      "nullable": true
    },
    "roleAssignmentType": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "roleDefinitionIdOrName": {
            "type": "string",
            "metadata": {
              "description": "Required. The role to assign. You can provide either the display name of the role definition, the role definition GUID, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
            }
          },
          "principalId": {
            "type": "string",
            "metadata": {
              "description": "Required. The principal ID of the principal (user/group/identity) to assign the role to."
            }
          },
          "principalType": {
            "type": "string",
            "allowedValues": [
              "Device",
              "ForeignGroup",
              "Group",
              "ServicePrincipal",
              "User"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. The principal type of the assigned principal ID."
            }
          },
          "description": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The description of the role assignment."
            }
          },
          "condition": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\""
            }
          },
          "conditionVersion": {
            "type": "string",
            "allowedValues": [
              "2.0"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. Version of the condition."
            }
          },
          "delegatedManagedIdentityResourceId": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The Resource Id of the delegated managed identity resource."
            }
          }
        }
      },
      "nullable": true
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the Container App."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources."
      }
    },
    "ingressExternal": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Bool indicating if app exposes an external http endpoint."
      }
    },
    "ingressTransport": {
      "type": "string",
      "defaultValue": "auto",
      "allowedValues": [
        "auto",
        "http",
        "http2",
        "tcp"
      ],
      "metadata": {
        "description": "Optional. Ingress transport protocol."
      }
    },
    "ingressAllowInsecure": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections."
      }
    },
    "ingressTargetPort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "Optional. Target Port in containers for traffic from ingress."
      }
    },
    "scaleMaxReplicas": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set."
      }
    },
    "scaleMinReplicas": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. Minimum number of container replicas."
      }
    },
    "scaleRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Scaling rules."
      }
    },
    "activeRevisionsMode": {
      "type": "string",
      "defaultValue": "Single",
      "allowedValues": [
        "Multiple",
        "Single"
      ],
      "metadata": {
        "description": "Optional. ActiveRevisionsMode controls how active revisions are handled for the Container app."
      }
    },
    "environmentId": {
      "type": "string",
      "metadata": {
        "description": "Required. Resource ID of environment."
      }
    },
    "lock": {
      "$ref": "#/definitions/lockType",
      "metadata": {
        "description": "Optional. The lock settings of the service."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "registries": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Collection of private container registry credentials for containers used by the Container app."
      }
    },
    "managedIdentities": {
      "$ref": "#/definitions/managedIdentitiesType",
      "metadata": {
        "description": "Optional. The managed identity definition for this resource."
      }
    },
    "roleAssignments": {
      "$ref": "#/definitions/roleAssignmentType",
      "metadata": {
        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    },
    "customDomains": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Custom domain bindings for Container App hostnames."
      }
    },
    "exposedPort": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. Exposed Port in containers for TCP traffic from ingress."
      }
    },
    "ipSecurityRestrictions": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Rules to restrict incoming IP address."
      }
    },
    "trafficLabel": {
      "type": "string",
      "defaultValue": "label-1",
      "metadata": {
        "description": "Optional. Associates a traffic label with a revision. Label name should be consist of lower case alphanumeric characters or dashes."
      }
    },
    "trafficLatestRevision": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Indicates that the traffic weight belongs to a latest stable revision."
      }
    },
    "trafficRevisionName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Name of a revision."
      }
    },
    "trafficWeight": {
      "type": "int",
      "defaultValue": 100,
      "metadata": {
        "description": "Optional. Traffic weight assigned to a revision."
      }
    },
    "dapr": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Dapr configuration for the Container App."
      }
    },
    "maxInactiveRevisions": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. Max inactive revisions a Container App can have."
      }
    },
    "containers": {
      "type": "array",
      "metadata": {
        "description": "Required. List of container definitions for the Container App."
      }
    },
    "initContainersTemplate": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of specialized containers that run before app containers."
      }
    },
    "secrets": {
      "type": "secureObject",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The secrets of the Container App."
      }
    },
    "revisionSuffix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. User friendly suffix that is appended to the revision name."
      }
    },
    "volumes": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of volume definitions for the Container App."
      }
    },
    "workloadProfileType": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Workload profile type to pin for container app execution."
      }
    }
  },
  "variables": {
    "secretList": "[if(not(empty(parameters('secrets'))), parameters('secrets').secureList, createArray())]",
    "formattedUserAssignedIdentities": "[reduce(map(coalesce(tryGet(parameters('managedIdentities'), 'userAssignedResourceIds'), createArray()), lambda('id', createObject(format('{0}', lambdaVariables('id')), createObject()))), createObject(), lambda('cur', 'next', union(lambdaVariables('cur'), lambdaVariables('next'))))]",
    "identity": "[if(not(empty(parameters('managedIdentities'))), createObject('type', if(coalesce(tryGet(parameters('managedIdentities'), 'systemAssigned'), false()), if(not(empty(coalesce(tryGet(parameters('managedIdentities'), 'userAssignedResourceIds'), createObject()))), 'SystemAssigned,UserAssigned', 'SystemAssigned'), if(not(empty(coalesce(tryGet(parameters('managedIdentities'), 'userAssignedResourceIds'), createObject()))), 'UserAssigned', null())), 'userAssignedIdentities', if(not(empty(variables('formattedUserAssignedIdentities'))), variables('formattedUserAssignedIdentities'), null())), null())]",
    "builtInRoleNames": {
      "ContainerApp Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ad2dd5fb-cd4b-4fd4-a9b6-4fed3630980b')]",
      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
      "Role Based Access Control Administrator (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]",
      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
    }
  },
  "resources": {
    "defaultTelemetry": {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    "containerApp": {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-10-01",
      "name": "[parameters('name')]",
      "tags": "[parameters('tags')]",
      "location": "[parameters('location')]",
      "identity": "[variables('identity')]",
      "properties": {
        "environmentId": "[parameters('environmentId')]",
        "configuration": {
          "activeRevisionsMode": "[parameters('activeRevisionsMode')]",
          "dapr": "[if(not(empty(parameters('dapr'))), parameters('dapr'), null())]",
          "ingress": {
            "allowInsecure": "[parameters('ingressAllowInsecure')]",
            "customDomains": "[if(not(empty(parameters('customDomains'))), parameters('customDomains'), null())]",
            "exposedPort": "[parameters('exposedPort')]",
            "external": "[parameters('ingressExternal')]",
            "ipSecurityRestrictions": "[if(not(empty(parameters('ipSecurityRestrictions'))), parameters('ipSecurityRestrictions'), null())]",
            "targetPort": "[parameters('ingressTargetPort')]",
            "traffic": [
              {
                "label": "[parameters('trafficLabel')]",
                "latestRevision": "[parameters('trafficLatestRevision')]",
                "revisionName": "[parameters('trafficRevisionName')]",
                "weight": "[parameters('trafficWeight')]"
              }
            ],
            "transport": "[parameters('ingressTransport')]"
          },
          "maxInactiveRevisions": "[parameters('maxInactiveRevisions')]",
          "registries": "[if(not(empty(parameters('registries'))), parameters('registries'), null())]",
          "secrets": "[variables('secretList')]"
        },
        "template": {
          "containers": "[parameters('containers')]",
          "initContainers": "[if(not(empty(parameters('initContainersTemplate'))), parameters('initContainersTemplate'), null())]",
          "revisionSuffix": "[parameters('revisionSuffix')]",
          "scale": {
            "maxReplicas": "[parameters('scaleMaxReplicas')]",
            "minReplicas": "[parameters('scaleMinReplicas')]",
            "rules": "[if(not(empty(parameters('scaleRules'))), parameters('scaleRules'), null())]"
          },
          "volumes": "[if(not(empty(parameters('volumes'))), parameters('volumes'), null())]"
        },
        "workloadProfileType": "[parameters('workloadProfileType')]"
      }
    },
    "containerApp_lock": {
      "condition": "[and(not(empty(coalesce(parameters('lock'), createObject()))), not(equals(tryGet(parameters('lock'), 'kind'), 'None')))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.App/containerApps/{0}', parameters('name'))]",
      "name": "[coalesce(tryGet(parameters('lock'), 'name'), format('lock-{0}', parameters('name')))]",
      "properties": {
        "level": "[coalesce(tryGet(parameters('lock'), 'kind'), '')]",
        "notes": "[if(equals(tryGet(parameters('lock'), 'kind'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot delete or modify the resource or child resources.')]"
      },
      "dependsOn": [
        "containerApp"
      ]
    },
    "containerApp_roleAssignments": {
      "copy": {
        "name": "containerApp_roleAssignments",
        "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.App/containerApps/{0}', parameters('name'))]",
      "name": "[guid(resourceId('Microsoft.App/containerApps', parameters('name')), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].principalId, coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName)]",
      "properties": {
        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName), variables('builtInRoleNames')[coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName], if(contains(coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName, '/providers/Microsoft.Authorization/roleDefinitions/'), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName)))]",
        "principalId": "[coalesce(parameters('roleAssignments'), createArray())[copyIndex()].principalId]",
        "description": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'description')]",
        "principalType": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'principalType')]",
        "condition": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'condition')]",
        "conditionVersion": "[if(not(empty(tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
        "delegatedManagedIdentityResourceId": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
      },
      "dependsOn": [
        "containerApp"
      ]
    }
  },
  "outputs": {
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the Container App."
      },
      "value": "[resourceId('Microsoft.App/containerApps', parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the Container App was deployed into."
      },
      "value": "[resourceGroup().name]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the Container App."
      },
      "value": "[parameters('name')]"
    },
    "systemAssignedMIPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "The principal ID of the system assigned identity."
      },
      "value": "[if(and(coalesce(tryGet(parameters('managedIdentities'), 'systemAssigned'), false()), contains(reference('containerApp', '2022-10-01', 'full').identity, 'principalId')), reference('containerApp', '2022-10-01', 'full').identity.principalId, '')]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference('containerApp', '2022-10-01', 'full').location]"
    }
  }
}