{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.47.4906",
      "templateHash": "4241820354615246390"
    },
    "name": "DNS Resolver",
    "description": "This module deploys a DNS Resolver.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "roleAssignmentType": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The name (as GUID) of the role assignment. If not provided, a GUID will be generated."
            }
          },
          "roleDefinitionIdOrName": {
            "type": "string",
            "metadata": {
              "description": "Required. The role to assign. You can provide either the display name of the role definition, the role definition GUID, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
            }
          },
          "principalId": {
            "type": "string",
            "metadata": {
              "description": "Required. The principal ID of the principal (user/group/identity) to assign the role to."
            }
          },
          "principalType": {
            "type": "string",
            "allowedValues": [
              "Device",
              "ForeignGroup",
              "Group",
              "ServicePrincipal",
              "User"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. The principal type of the assigned principal ID."
            }
          },
          "description": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The description of the role assignment."
            }
          },
          "condition": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\"."
            }
          },
          "conditionVersion": {
            "type": "string",
            "allowedValues": [
              "2.0"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. Version of the condition."
            }
          },
          "delegatedManagedIdentityResourceId": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The Resource Id of the delegated managed identity resource."
            }
          }
        }
      },
      "nullable": true
    },
    "lockType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the name of lock."
          }
        },
        "kind": {
          "type": "string",
          "allowedValues": [
            "CanNotDelete",
            "None",
            "ReadOnly"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the type of lock."
          }
        }
      },
      "nullable": true
    },
    "inboundEndpointType": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "metadata": {
              "description": "Required. Name of the inbound endpoint."
            }
          },
          "subnetResourceId": {
            "type": "string",
            "metadata": {
              "description": "Required. The reference to the subnet bound to the IP configuration."
            }
          },
          "tags": {
            "type": "object",
            "nullable": true,
            "metadata": {
              "description": "Optional. Tags for the resource."
            }
          },
          "location": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. Location for all resources."
            }
          },
          "privateIpAddress": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. Private IP address of the IP configuration."
            }
          },
          "privateIpAllocationMethod": {
            "type": "string",
            "allowedValues": [
              "Dynamic",
              "Static"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. Private IP address allocation method."
            }
          }
        }
      },
      "nullable": true
    },
    "outboundEndpointType": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "metadata": {
              "description": "Required. Name of the outbound endpoint."
            }
          },
          "subnetResourceId": {
            "type": "string",
            "metadata": {
              "description": "Required. ResourceId of the subnet to attach the outbound endpoint to."
            }
          },
          "tags": {
            "type": "object",
            "nullable": true,
            "metadata": {
              "description": "Optional. Tags of the resource."
            }
          },
          "location": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. Location for all resources."
            }
          }
        }
      },
      "nullable": true
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Required. Name of the DNS Private Resolver."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "lock": {
      "$ref": "#/definitions/lockType",
      "metadata": {
        "description": "Optional. The lock settings of the service."
      }
    },
    "roleAssignments": {
      "$ref": "#/definitions/roleAssignmentType",
      "metadata": {
        "description": "Optional. Array of role assignments to create."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "virtualNetworkResourceId": {
      "type": "string",
      "metadata": {
        "description": "Required. ResourceId of the virtual network to attach the DNS Private Resolver to."
      }
    },
    "outboundEndpoints": {
      "$ref": "#/definitions/outboundEndpointType",
      "metadata": {
        "description": "Optional. Outbound Endpoints for DNS Private Resolver."
      }
    },
    "inboundEndpoints": {
      "$ref": "#/definitions/inboundEndpointType",
      "metadata": {
        "description": "Optional. Inbound Endpoints for DNS Private Resolver."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "formattedRoleAssignments",
        "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]",
        "input": "[union(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')], createObject('roleDefinitionId', coalesce(tryGet(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName), if(contains(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, '/providers/Microsoft.Authorization/roleDefinitions/'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName)))))]"
      }
    ],
    "builtInRoleNames": {
      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "DNS Resolver Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0f2ebee7-ffd4-4fc0-b3b7-664099fdad5d')]",
      "DNS Zone Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'befefa01-2a29-4197-83a8-272ff33ce314')]",
      "Domain Services Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'eeaeda52-9324-47f6-8069-5d5bade478b2')]",
      "Domain Services Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '361898ef-9ed1-48c2-849c-a832951106bb')]",
      "Network Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Private DNS Zone Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b12aa53e-6015-4669-85d0-8515ebb3ae7f')]",
      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
      "Role Based Access Control Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]"
    }
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[format('46d3xbcp.res.network-dnsresolver.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "dnsResolver": {
      "type": "Microsoft.Network/dnsResolvers",
      "apiVersion": "2022-07-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "virtualNetwork": {
          "id": "[parameters('virtualNetworkResourceId')]"
        }
      }
    },
    "dnsResolver_lock": {
      "condition": "[and(not(empty(coalesce(parameters('lock'), createObject()))), not(equals(tryGet(parameters('lock'), 'kind'), 'None')))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.Network/dnsResolvers/{0}', parameters('name'))]",
      "name": "[coalesce(tryGet(parameters('lock'), 'name'), format('lock-{0}', parameters('name')))]",
      "properties": {
        "level": "[coalesce(tryGet(parameters('lock'), 'kind'), '')]",
        "notes": "[if(equals(tryGet(parameters('lock'), 'kind'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot delete or modify the resource or child resources.')]"
      },
      "dependsOn": [
        "dnsResolver"
      ]
    },
    "dnsResolver_roleAssignments": {
      "copy": {
        "name": "dnsResolver_roleAssignments",
        "count": "[length(coalesce(variables('formattedRoleAssignments'), createArray()))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Network/dnsResolvers/{0}', parameters('name'))]",
      "name": "[coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'name'), guid(resourceId('Microsoft.Network/dnsResolvers', parameters('name')), coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId, coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId))]",
      "properties": {
        "roleDefinitionId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId]",
        "principalId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId]",
        "description": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'description')]",
        "principalType": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'principalType')]",
        "condition": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition')]",
        "conditionVersion": "[if(not(empty(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
        "delegatedManagedIdentityResourceId": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
      },
      "dependsOn": [
        "dnsResolver"
      ]
    },
    "dnsResolver_inboundEndpoints": {
      "copy": {
        "name": "dnsResolver_inboundEndpoints",
        "count": "[length(coalesce(parameters('inboundEndpoints'), createArray()))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-dnsResolver-inbound-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[coalesce(parameters('inboundEndpoints'), createArray())[copyIndex()].name]"
          },
          "tags": {
            "value": "[coalesce(tryGet(coalesce(parameters('inboundEndpoints'), createArray())[copyIndex()], 'tags'), parameters('tags'))]"
          },
          "location": {
            "value": "[coalesce(tryGet(coalesce(parameters('inboundEndpoints'), createArray())[copyIndex()], 'location'), parameters('location'))]"
          },
          "dnsResolverName": {
            "value": "[parameters('name')]"
          },
          "subnetResourceId": {
            "value": "[coalesce(parameters('inboundEndpoints'), createArray())[copyIndex()].subnetResourceId]"
          },
          "privateIpAddress": {
            "value": "[tryGet(coalesce(parameters('inboundEndpoints'), createArray())[copyIndex()], 'privateIpAddress')]"
          },
          "privateIpAllocationMethod": {
            "value": "[tryGet(coalesce(parameters('inboundEndpoints'), createArray())[copyIndex()], 'privateIpAllocationMethod')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "10392660876237354468"
            },
            "name": "DNS Resolver Inbound Endpoint",
            "description": "This module deploys a DNS Resolver Inbound Endpoint.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "dnsResolverName": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Required. Name of the DNS Private Resolver."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "tags": {
              "type": "object",
              "nullable": true,
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "subnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Required. The subnet ID of the inbound endpoint."
              }
            },
            "privateIpAddress": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Optional. The private IP address of the inbound endpoint."
              }
            },
            "privateIpAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "metadata": {
                "description": "Optional. The private IP allocation method of the inbound endpoint."
              }
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the inbound endpoint."
              }
            }
          },
          "resources": {
            "dnsResolver": {
              "existing": true,
              "type": "Microsoft.Network/dnsResolvers",
              "apiVersion": "2022-07-01",
              "name": "[parameters('dnsResolverName')]"
            },
            "inboundEndpoint": {
              "type": "Microsoft.Network/dnsResolvers/inboundEndpoints",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('dnsResolverName'), parameters('name'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "subnet": {
                      "id": "[parameters('subnetResourceId')]"
                    },
                    "privateIpAddress": "[parameters('privateIpAddress')]",
                    "privateIpAllocationMethod": "[parameters('privateIpAllocationMethod')]"
                  }
                ]
              },
              "dependsOn": [
                "dnsResolver"
              ]
            }
          },
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the resource."
              },
              "value": "[resourceId('Microsoft.Network/dnsResolvers/inboundEndpoints', parameters('dnsResolverName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The resource group of the resource."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "dnsResolver"
      ]
    },
    "dnsResolver_outboundEndpoints": {
      "copy": {
        "name": "dnsResolver_outboundEndpoints",
        "count": "[length(coalesce(parameters('outboundEndpoints'), createArray()))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-dnsResolver-outbound-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[coalesce(parameters('outboundEndpoints'), createArray())[copyIndex()].name]"
          },
          "tags": {
            "value": "[coalesce(tryGet(coalesce(parameters('outboundEndpoints'), createArray())[copyIndex()], 'tags'), parameters('tags'))]"
          },
          "location": {
            "value": "[coalesce(tryGet(coalesce(parameters('outboundEndpoints'), createArray())[copyIndex()], 'location'), parameters('location'))]"
          },
          "dnsResolverName": {
            "value": "[parameters('name')]"
          },
          "subnetResourceId": {
            "value": "[coalesce(parameters('outboundEndpoints'), createArray())[copyIndex()].subnetResourceId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "5025100485259764817"
            },
            "name": "DNS Resolver Outbound Endpoint",
            "description": "This module deploys a DNS Resolver Outbound Endpoint.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "dnsResolverName": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Required. Name of the DNS Private Resolver."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "tags": {
              "type": "object",
              "nullable": true,
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "subnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Required. The subnet ID of the inbound endpoint."
              }
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the inbound endpoint."
              }
            }
          },
          "resources": {
            "dnsResolver": {
              "existing": true,
              "type": "Microsoft.Network/dnsResolvers",
              "apiVersion": "2022-07-01",
              "name": "[parameters('dnsResolverName')]"
            },
            "outboundEndpoint": {
              "type": "Microsoft.Network/dnsResolvers/outboundEndpoints",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('dnsResolverName'), parameters('name'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetResourceId')]"
                }
              },
              "dependsOn": [
                "dnsResolver"
              ]
            }
          },
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the resource."
              },
              "value": "[resourceId('Microsoft.Network/dnsResolvers/outboundEndpoints', parameters('dnsResolverName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The resource group of the resource."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "dnsResolver"
      ]
    }
  },
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group the DNS Private Resolver was deployed into."
      },
      "value": "[resourceGroup().name]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the DNS Private Resolver."
      },
      "value": "[resourceId('Microsoft.Network/dnsResolvers', parameters('name'))]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the DNS Private Resolver."
      },
      "value": "[parameters('name')]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference('dnsResolver', '2022-07-01', 'full').location]"
    }
  }
}