{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "8611679748900233251"
    },
    "name": "Virtual Network Gateway Connections",
    "description": "This module deploys a Virtual Network Gateway Connection."
  },
  "definitions": {
    "customIPSecPolicyType": {
      "type": "object",
      "properties": {
        "saLifeTimeSeconds": {
          "type": "int",
          "metadata": {
            "description": "Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."
          }
        },
        "saDataSizeKilobytes": {
          "type": "int",
          "metadata": {
            "description": "Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."
          }
        },
        "ipsecEncryption": {
          "type": "string",
          "allowedValues": [
            "AES128",
            "AES192",
            "AES256",
            "DES",
            "DES3",
            "GCMAES128",
            "GCMAES192",
            "GCMAES256",
            "None"
          ],
          "metadata": {
            "description": "Required. The IPSec encryption algorithm (IKE phase 1)."
          }
        },
        "ipsecIntegrity": {
          "type": "string",
          "allowedValues": [
            "GCMAES128",
            "GCMAES192",
            "GCMAES256",
            "MD5",
            "SHA1",
            "SHA256"
          ],
          "metadata": {
            "description": "Required. The IPSec integrity algorithm (IKE phase 1)."
          }
        },
        "ikeEncryption": {
          "type": "string",
          "allowedValues": [
            "AES128",
            "AES192",
            "AES256",
            "DES",
            "DES3",
            "GCMAES128",
            "GCMAES256"
          ],
          "metadata": {
            "description": "Required. The IKE encryption algorithm (IKE phase 2)."
          }
        },
        "ikeIntegrity": {
          "type": "string",
          "allowedValues": [
            "GCMAES128",
            "GCMAES256",
            "MD5",
            "SHA1",
            "SHA256",
            "SHA384"
          ],
          "metadata": {
            "description": "Required. The IKE integrity algorithm (IKE phase 2)."
          }
        },
        "dhGroup": {
          "type": "string",
          "allowedValues": [
            "DHGroup1",
            "DHGroup14",
            "DHGroup2",
            "DHGroup2048",
            "DHGroup24",
            "ECP256",
            "ECP384",
            "None"
          ],
          "metadata": {
            "description": "Required. The DH Group used in IKE Phase 1 for initial SA."
          }
        },
        "pfsGroup": {
          "type": "string",
          "allowedValues": [
            "ECP256",
            "ECP384",
            "None",
            "PFS1",
            "PFS14",
            "PFS2",
            "PFS2048",
            "PFS24",
            "PFSMM"
          ],
          "metadata": {
            "description": "Required. The Pfs Group used in IKE Phase 2 for new child SA."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The custom IPSec policy configuration for the connection."
      }
    },
    "virtualNetworkGatewayType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "metadata": {
            "description": "Required. Resource ID of the virtual network gateway."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "The virtual network gateway configuration."
      }
    },
    "gatewayCustomBgpIpAddressType": {
      "type": "object",
      "properties": {
        "customBgpIpAddress": {
          "type": "string",
          "metadata": {
            "description": "Required. The custom BgpPeeringAddress which belongs to IpconfigurationId."
          }
        },
        "ipConfigurationId": {
          "type": "string",
          "metadata": {
            "description": "Required. The IpconfigurationId of ipconfiguration which belongs to gateway."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "Gateway custom BGP IP address configuration for APIPA."
      }
    },
    "trafficSelectorPolicyType": {
      "type": "object",
      "properties": {
        "localAddressRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "metadata": {
            "description": "Required. A collection of local address spaces in CIDR format."
          }
        },
        "remoteAddressRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "metadata": {
            "description": "Required. A collection of remote address spaces in CIDR format."
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "description": "Traffic selector policy configuration."
      }
    },
    "lockType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the name of lock."
          }
        },
        "kind": {
          "type": "string",
          "allowedValues": [
            "CanNotDelete",
            "None",
            "ReadOnly"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the type of lock."
          }
        }
      },
      "metadata": {
        "description": "An AVM-aligned type for a lock.",
        "__bicep_imported_from!": {
          "sourceTemplate": "br:mcr.microsoft.com/bicep/avm/utl/types/avm-common-types:0.5.1"
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Remote connection name."
      }
    },
    "vpnSharedKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Specifies a VPN shared key. The same value has to be specified on both Virtual Network Gateways."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "connectionType": {
      "type": "string",
      "defaultValue": "IPsec",
      "allowedValues": [
        "IPsec",
        "Vnet2Vnet",
        "ExpressRoute",
        "VPNClient"
      ],
      "metadata": {
        "description": "Optional. Gateway connection connectionType."
      }
    },
    "enableBgp": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Value to specify if BGP is enabled or not."
      }
    },
    "connectionMode": {
      "type": "string",
      "defaultValue": "Default",
      "allowedValues": [
        "Default",
        "InitiatorOnly",
        "ResponderOnly"
      ],
      "metadata": {
        "description": "Optional. The connection connectionMode for this connection. Available for IPSec connections."
      }
    },
    "connectionProtocol": {
      "type": "string",
      "defaultValue": "IKEv2",
      "allowedValues": [
        "IKEv1",
        "IKEv2"
      ],
      "metadata": {
        "description": "Optional. Connection connectionProtocol used for this connection. Available for IPSec connections."
      }
    },
    "dpdTimeoutSeconds": {
      "type": "int",
      "defaultValue": 45,
      "minValue": 9,
      "maxValue": 3600,
      "metadata": {
        "description": "Optional. The dead peer detection timeout of this connection in seconds. Setting the timeout to shorter periods will cause IKE to rekey more aggressively, causing the connection to appear to be disconnected in some instances. The general recommendation is to set the timeout between 30 to 45 seconds."
      }
    },
    "usePolicyBasedTrafficSelectors": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Enable policy-based traffic selectors."
      }
    },
    "trafficSelectorPolicies": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/trafficSelectorPolicyType"
      },
      "defaultValue": [],
      "metadata": {
        "description": "Optional. The traffic selector policies to be considered by this connection."
      }
    },
    "enablePrivateLinkFastPath": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled. Only available when connection connectionType is Express Route."
      }
    },
    "expressRouteGatewayBypass": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Bypass ExpressRoute Gateway for data forwarding. Only available when connection connectionType is Express Route."
      }
    },
    "useLocalAzureIpAddress": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Use private local Azure IP for the connection. Only available for IPSec Virtual Network Gateways that use the Azure Private IP Property."
      }
    },
    "customIPSecPolicy": {
      "$ref": "#/definitions/customIPSecPolicyType",
      "defaultValue": {
        "saLifeTimeSeconds": 0,
        "saDataSizeKilobytes": 0,
        "ipsecEncryption": "None",
        "ipsecIntegrity": "MD5",
        "ikeEncryption": "DES",
        "ikeIntegrity": "MD5",
        "dhGroup": "None",
        "pfsGroup": "None"
      },
      "metadata": {
        "description": "Optional. The IPSec Policies to be considered by this connection."
      }
    },
    "routingWeight": {
      "type": "int",
      "nullable": true,
      "metadata": {
        "description": "Optional. The weight added to routes learned from this BGP speaker."
      }
    },
    "lock": {
      "$ref": "#/definitions/lockType",
      "nullable": true,
      "metadata": {
        "description": "Optional. The lock settings of the service."
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "__bicep_resource_derived_type!": {
          "source": "Microsoft.Network/connections@2024-05-01#properties/tags"
        },
        "description": "Optional. Tags of the resource."
      },
      "nullable": true
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    },
    "virtualNetworkGateway1": {
      "$ref": "#/definitions/virtualNetworkGatewayType",
      "metadata": {
        "description": "Required. The primary Virtual Network Gateway."
      }
    },
    "virtualNetworkGateway2ResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The remote Virtual Network Gateway resource ID. Used for connection connectionType [Vnet2Vnet]."
      }
    },
    "peerResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The remote peer resource ID. Used for connection connectionType [ExpressRoute]."
      }
    },
    "authorizationKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The Authorization Key to connect to an Express Route Circuit. Used for connection type [ExpressRoute]."
      }
    },
    "localNetworkGateway2ResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The local network gateway resource ID. Used for connection type [IPsec]."
      }
    },
    "gatewayCustomBgpIpAddresses": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/gatewayCustomBgpIpAddressType"
      },
      "defaultValue": [],
      "metadata": {
        "description": "Optional. GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection. Enables APIPA (Automatic Private IP Addressing) for custom BGP IP addresses on both Azure and on-premises sides."
      }
    }
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "[format('46d3xbcp.res.network-connection.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "connection": {
      "type": "Microsoft.Network/connections",
      "apiVersion": "2024-05-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "connectionType": "[parameters('connectionType')]",
        "connectionMode": "[if(equals(parameters('connectionType'), 'IPsec'), parameters('connectionMode'), null())]",
        "connectionProtocol": "[if(equals(parameters('connectionType'), 'IPsec'), parameters('connectionProtocol'), null())]",
        "dpdTimeoutSeconds": "[if(equals(parameters('connectionType'), 'IPsec'), parameters('dpdTimeoutSeconds'), null())]",
        "enablePrivateLinkFastPath": "[if(equals(parameters('connectionType'), 'ExpressRoute'), parameters('enablePrivateLinkFastPath'), null())]",
        "expressRouteGatewayBypass": "[if(equals(parameters('connectionType'), 'ExpressRoute'), parameters('expressRouteGatewayBypass'), null())]",
        "virtualNetworkGateway1": "[parameters('virtualNetworkGateway1')]",
        "virtualNetworkGateway2": "[if(and(equals(parameters('connectionType'), 'Vnet2Vnet'), not(empty(parameters('virtualNetworkGateway2ResourceId')))), createObject('id', parameters('virtualNetworkGateway2ResourceId')), null())]",
        "localNetworkGateway2": "[if(and(equals(parameters('connectionType'), 'IPsec'), not(empty(parameters('localNetworkGateway2ResourceId')))), createObject('id', parameters('localNetworkGateway2ResourceId')), null())]",
        "peer": "[if(and(equals(parameters('connectionType'), 'ExpressRoute'), not(empty(parameters('peerResourceId')))), createObject('id', parameters('peerResourceId')), null())]",
        "authorizationKey": "[if(and(equals(parameters('connectionType'), 'ExpressRoute'), not(empty(parameters('authorizationKey')))), parameters('authorizationKey'), null())]",
        "sharedKey": "[if(not(equals(parameters('connectionType'), 'ExpressRoute')), parameters('vpnSharedKey'), null())]",
        "trafficSelectorPolicies": "[parameters('trafficSelectorPolicies')]",
        "usePolicyBasedTrafficSelectors": "[parameters('usePolicyBasedTrafficSelectors')]",
        "ipsecPolicies": "[if(not(equals(parameters('customIPSecPolicy').ipsecEncryption, 'None')), createArray(createObject('saLifeTimeSeconds', parameters('customIPSecPolicy').saLifeTimeSeconds, 'saDataSizeKilobytes', parameters('customIPSecPolicy').saDataSizeKilobytes, 'ipsecEncryption', parameters('customIPSecPolicy').ipsecEncryption, 'ipsecIntegrity', parameters('customIPSecPolicy').ipsecIntegrity, 'ikeEncryption', parameters('customIPSecPolicy').ikeEncryption, 'ikeIntegrity', parameters('customIPSecPolicy').ikeIntegrity, 'dhGroup', parameters('customIPSecPolicy').dhGroup, 'pfsGroup', parameters('customIPSecPolicy').pfsGroup)), null())]",
        "routingWeight": "[parameters('routingWeight')]",
        "enableBgp": "[parameters('enableBgp')]",
        "useLocalAzureIpAddress": "[if(equals(parameters('connectionType'), 'IPsec'), parameters('useLocalAzureIpAddress'), null())]",
        "gatewayCustomBgpIpAddresses": "[if(and(equals(parameters('connectionType'), 'IPsec'), not(empty(parameters('gatewayCustomBgpIpAddresses')))), parameters('gatewayCustomBgpIpAddresses'), null())]"
      }
    },
    "connection_lock": {
      "condition": "[and(not(empty(coalesce(parameters('lock'), createObject()))), not(equals(tryGet(parameters('lock'), 'kind'), 'None')))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.Network/connections/{0}', parameters('name'))]",
      "name": "[coalesce(tryGet(parameters('lock'), 'name'), format('lock-{0}', parameters('name')))]",
      "properties": {
        "level": "[coalesce(tryGet(parameters('lock'), 'kind'), '')]",
        "notes": "[if(equals(tryGet(parameters('lock'), 'kind'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot delete or modify the resource or child resources.')]"
      },
      "dependsOn": [
        "connection"
      ]
    }
  },
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group the remote connection was deployed into."
      },
      "value": "[resourceGroup().name]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the remote connection."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the remote connection."
      },
      "value": "[resourceId('Microsoft.Network/connections', parameters('name'))]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference('connection', '2024-05-01', 'full').location]"
    }
  }
}