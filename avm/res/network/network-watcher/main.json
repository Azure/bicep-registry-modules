{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "9453655433534463092"
    },
    "name": "Network Watchers",
    "description": "This module deploys a Network Watcher.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "lockType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the name of lock."
          }
        },
        "kind": {
          "type": "string",
          "allowedValues": [
            "CanNotDelete",
            "None",
            "ReadOnly"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Specify the type of lock."
          }
        }
      },
      "nullable": true
    },
    "roleAssignmentType": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "roleDefinitionIdOrName": {
            "type": "string",
            "metadata": {
              "description": "Required. The role to assign. You can provide either the display name of the role definition, the role definition GUID, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
            }
          },
          "principalId": {
            "type": "string",
            "metadata": {
              "description": "Required. The principal ID of the principal (user/group/identity) to assign the role to."
            }
          },
          "principalType": {
            "type": "string",
            "allowedValues": [
              "Device",
              "ForeignGroup",
              "Group",
              "ServicePrincipal",
              "User"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. The principal type of the assigned principal ID."
            }
          },
          "description": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The description of the role assignment."
            }
          },
          "condition": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\"."
            }
          },
          "conditionVersion": {
            "type": "string",
            "allowedValues": [
              "2.0"
            ],
            "nullable": true,
            "metadata": {
              "description": "Optional. Version of the condition."
            }
          },
          "delegatedManagedIdentityResourceId": {
            "type": "string",
            "nullable": true,
            "metadata": {
              "description": "Optional. The Resource Id of the delegated managed identity resource."
            }
          }
        }
      },
      "nullable": true
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "[format('NetworkWatcher_{0}', parameters('location'))]",
      "minLength": 1,
      "metadata": {
        "description": "Optional. Name of the Network Watcher resource (hidden)."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "connectionMonitors": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array that contains the Connection Monitors."
      }
    },
    "flowLogs": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array that contains the Flow Logs."
      }
    },
    "lock": {
      "$ref": "#/definitions/lockType",
      "metadata": {
        "description": "Optional. The lock settings of the service."
      }
    },
    "roleAssignments": {
      "$ref": "#/definitions/roleAssignmentType",
      "metadata": {
        "description": "Optional. Array of role assignments to create."
      }
    },
    "tags": {
      "type": "object",
      "nullable": true,
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable/Disable usage telemetry for module."
      }
    }
  },
  "variables": {
    "builtInRoleNames": {
      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "Network Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
      "Role Based Access Control Administrator (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]",
      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
    }
  },
  "resources": {
    "avmTelemetry": {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2023-07-01",
      "name": "[format('46d3xbcp.res.network-networkwatcher.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [],
          "outputs": {
            "telemetry": {
              "type": "String",
              "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
            }
          }
        }
      }
    },
    "networkWatcher": {
      "type": "Microsoft.Network/networkWatchers",
      "apiVersion": "2023-04-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {}
    },
    "networkWatcher_lock": {
      "condition": "[and(not(empty(coalesce(parameters('lock'), createObject()))), not(equals(tryGet(parameters('lock'), 'kind'), 'None')))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.Network/networkWatchers/{0}', parameters('name'))]",
      "name": "[coalesce(tryGet(parameters('lock'), 'name'), format('lock-{0}', parameters('name')))]",
      "properties": {
        "level": "[coalesce(tryGet(parameters('lock'), 'kind'), '')]",
        "notes": "[if(equals(tryGet(parameters('lock'), 'kind'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot delete or modify the resource or child resources.')]"
      },
      "dependsOn": [
        "networkWatcher"
      ]
    },
    "networkWatcher_roleAssignments": {
      "copy": {
        "name": "networkWatcher_roleAssignments",
        "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Network/networkWatchers/{0}', parameters('name'))]",
      "name": "[guid(resourceId('Microsoft.Network/networkWatchers', parameters('name')), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].principalId, coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName)]",
      "properties": {
        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName), variables('builtInRoleNames')[coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName], if(contains(coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName, '/providers/Microsoft.Authorization/roleDefinitions/'), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName)))]",
        "principalId": "[coalesce(parameters('roleAssignments'), createArray())[copyIndex()].principalId]",
        "description": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'description')]",
        "principalType": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'principalType')]",
        "condition": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'condition')]",
        "conditionVersion": "[if(not(empty(tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
        "delegatedManagedIdentityResourceId": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
      },
      "dependsOn": [
        "networkWatcher"
      ]
    },
    "networkWatcher_connectionMonitors": {
      "copy": {
        "name": "networkWatcher_connectionMonitors",
        "count": "[length(parameters('connectionMonitors'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-NW-ConnectionMonitor-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "endpoints": "[if(contains(parameters('connectionMonitors')[copyIndex()], 'endpoints'), createObject('value', parameters('connectionMonitors')[copyIndex()].endpoints), createObject('value', createArray()))]",
          "name": {
            "value": "[parameters('connectionMonitors')[copyIndex()].name]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "networkWatcherName": {
            "value": "[parameters('name')]"
          },
          "testConfigurations": "[if(contains(parameters('connectionMonitors')[copyIndex()], 'testConfigurations'), createObject('value', parameters('connectionMonitors')[copyIndex()].testConfigurations), createObject('value', createArray()))]",
          "testGroups": "[if(contains(parameters('connectionMonitors')[copyIndex()], 'testGroups'), createObject('value', parameters('connectionMonitors')[copyIndex()].testGroups), createObject('value', createArray()))]",
          "workspaceResourceId": "[if(contains(parameters('connectionMonitors')[copyIndex()], 'workspaceResourceId'), createObject('value', parameters('connectionMonitors')[copyIndex()].workspaceResourceId), createObject('value', ''))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "14911705346376844157"
            },
            "name": "Network Watchers Connection Monitors",
            "description": "This module deploys a Network Watcher Connection Monitor.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "networkWatcherName": {
              "type": "string",
              "defaultValue": "[format('NetworkWatcher_{0}', resourceGroup().location)]",
              "metadata": {
                "description": "Optional. Name of the network watcher resource. Must be in the resource group where the Flow log will be created and same region as the NSG."
              }
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the resource."
              }
            },
            "tags": {
              "type": "object",
              "nullable": true,
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "endpoints": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of connection monitor endpoints."
              }
            },
            "testConfigurations": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of connection monitor test configurations."
              }
            },
            "testGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of connection monitor test groups."
              }
            },
            "workspaceResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Specify the Log Analytics Workspace Resource ID."
              }
            }
          },
          "resources": {
            "networkWatcher": {
              "existing": true,
              "type": "Microsoft.Network/networkWatchers",
              "apiVersion": "2023-04-01",
              "name": "[parameters('networkWatcherName')]"
            },
            "connectionMonitor": {
              "type": "Microsoft.Network/networkWatchers/connectionMonitors",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', parameters('networkWatcherName'), parameters('name'))]",
              "tags": "[parameters('tags')]",
              "location": "[parameters('location')]",
              "properties": {
                "endpoints": "[parameters('endpoints')]",
                "testConfigurations": "[parameters('testConfigurations')]",
                "testGroups": "[parameters('testGroups')]",
                "outputs": "[if(not(empty(parameters('workspaceResourceId'))), createArray(createObject('type', 'Workspace', 'workspaceSettings', createObject('workspaceResourceId', parameters('workspaceResourceId')))), null())]"
              },
              "dependsOn": [
                "networkWatcher"
              ]
            }
          },
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the deployed connection monitor."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the deployed connection monitor."
              },
              "value": "[resourceId('Microsoft.Network/networkWatchers/connectionMonitors', parameters('networkWatcherName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The resource group the connection monitor was deployed into."
              },
              "value": "[resourceGroup().name]"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location the resource was deployed into."
              },
              "value": "[reference('connectionMonitor', '2023-04-01', 'full').location]"
            }
          }
        }
      },
      "dependsOn": [
        "networkWatcher"
      ]
    },
    "networkWatcher_flowLogs": {
      "copy": {
        "name": "networkWatcher_flowLogs",
        "count": "[length(parameters('flowLogs'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-NW-FlowLog-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "enabled": "[if(contains(parameters('flowLogs')[copyIndex()], 'enabled'), createObject('value', parameters('flowLogs')[copyIndex()].enabled), createObject('value', true()))]",
          "formatVersion": "[if(contains(parameters('flowLogs')[copyIndex()], 'formatVersion'), createObject('value', parameters('flowLogs')[copyIndex()].formatVersion), createObject('value', 2))]",
          "location": "[if(contains(parameters('flowLogs')[copyIndex()], 'location'), createObject('value', parameters('flowLogs')[copyIndex()].location), createObject('value', parameters('location')))]",
          "name": "[if(contains(parameters('flowLogs')[copyIndex()], 'name'), createObject('value', parameters('flowLogs')[copyIndex()].name), createObject('value', format('{0}-{1}-flowlog', last(split(parameters('flowLogs')[copyIndex()].targetResourceId, '/')), split(parameters('flowLogs')[copyIndex()].targetResourceId, '/')[4])))]",
          "networkWatcherName": {
            "value": "[parameters('name')]"
          },
          "retentionInDays": "[if(contains(parameters('flowLogs')[copyIndex()], 'retentionInDays'), createObject('value', parameters('flowLogs')[copyIndex()].retentionInDays), createObject('value', 365))]",
          "storageId": {
            "value": "[parameters('flowLogs')[copyIndex()].storageId]"
          },
          "targetResourceId": {
            "value": "[parameters('flowLogs')[copyIndex()].targetResourceId]"
          },
          "trafficAnalyticsInterval": "[if(contains(parameters('flowLogs')[copyIndex()], 'trafficAnalyticsInterval'), createObject('value', parameters('flowLogs')[copyIndex()].trafficAnalyticsInterval), createObject('value', 60))]",
          "workspaceResourceId": "[if(contains(parameters('flowLogs')[copyIndex()], 'workspaceResourceId'), createObject('value', parameters('flowLogs')[copyIndex()].workspaceResourceId), createObject('value', ''))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "3648590963487326602"
            },
            "name": "NSG Flow Logs",
            "description": "This module controls the Network Security Group Flow Logs and analytics settings.\n**Note: this module must be run on the Resource Group where Network Watcher is deployed**",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "networkWatcherName": {
              "type": "string",
              "defaultValue": "[format('NetworkWatcher_{0}', resourceGroup().location)]",
              "metadata": {
                "description": "Optional. Name of the network watcher resource. Must be in the resource group where the Flow log will be created and same region as the NSG."
              }
            },
            "name": {
              "type": "string",
              "defaultValue": "[format('{0}-{1}-flowlog', last(split(parameters('targetResourceId'), '/')), split(parameters('targetResourceId'), '/')[4])]",
              "metadata": {
                "description": "Optional. Name of the resource."
              }
            },
            "tags": {
              "type": "object",
              "nullable": true,
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "targetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Required. Resource ID of the NSG that must be enabled for Flow Logs."
              }
            },
            "storageId": {
              "type": "string",
              "metadata": {
                "description": "Required. Resource ID of the diagnostic storage account."
              }
            },
            "enabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. If the flow log should be enabled."
              }
            },
            "formatVersion": {
              "type": "int",
              "defaultValue": 2,
              "allowedValues": [
                1,
                2
              ],
              "metadata": {
                "description": "Optional. The flow log format version."
              }
            },
            "workspaceResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Specify the Log Analytics Workspace Resource ID."
              }
            },
            "trafficAnalyticsInterval": {
              "type": "int",
              "defaultValue": 60,
              "allowedValues": [
                10,
                60
              ],
              "metadata": {
                "description": "Optional. The interval in minutes which would decide how frequently TA service should do flow analytics."
              }
            },
            "retentionInDays": {
              "type": "int",
              "defaultValue": 365,
              "minValue": 0,
              "maxValue": 365,
              "metadata": {
                "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
              }
            }
          },
          "variables": {
            "flowAnalyticsConfiguration": "[if(and(not(empty(parameters('workspaceResourceId'))), equals(parameters('enabled'), true())), createObject('networkWatcherFlowAnalyticsConfiguration', createObject('enabled', true(), 'workspaceResourceId', parameters('workspaceResourceId'), 'trafficAnalyticsInterval', parameters('trafficAnalyticsInterval'))), createObject('networkWatcherFlowAnalyticsConfiguration', createObject('enabled', false())))]"
          },
          "resources": {
            "networkWatcher": {
              "existing": true,
              "type": "Microsoft.Network/networkWatchers",
              "apiVersion": "2023-04-01",
              "name": "[parameters('networkWatcherName')]"
            },
            "flowLog": {
              "type": "Microsoft.Network/networkWatchers/flowLogs",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', parameters('networkWatcherName'), parameters('name'))]",
              "tags": "[parameters('tags')]",
              "location": "[parameters('location')]",
              "properties": {
                "targetResourceId": "[parameters('targetResourceId')]",
                "storageId": "[parameters('storageId')]",
                "enabled": "[parameters('enabled')]",
                "retentionPolicy": {
                  "days": "[parameters('retentionInDays')]",
                  "enabled": "[if(equals(parameters('retentionInDays'), 0), false(), true())]"
                },
                "format": {
                  "type": "JSON",
                  "version": "[parameters('formatVersion')]"
                },
                "flowAnalyticsConfiguration": "[variables('flowAnalyticsConfiguration')]"
              },
              "dependsOn": [
                "networkWatcher"
              ]
            }
          },
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the flow log."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the flow log."
              },
              "value": "[resourceId('Microsoft.Network/networkWatchers/flowLogs', parameters('networkWatcherName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The resource group the flow log was deployed into."
              },
              "value": "[resourceGroup().name]"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location the resource was deployed into."
              },
              "value": "[reference('flowLog', '2023-04-01', 'full').location]"
            }
          }
        }
      },
      "dependsOn": [
        "networkWatcher"
      ]
    }
  },
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployed network watcher."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the deployed network watcher."
      },
      "value": "[resourceId('Microsoft.Network/networkWatchers', parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group the network watcher was deployed into."
      },
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference('networkWatcher', '2023-04-01', 'full').location]"
    }
  }
}