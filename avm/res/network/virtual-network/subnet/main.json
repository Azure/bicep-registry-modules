{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "6385219422012602265"
    },
    "name": "Virtual Network Subnets",
    "description": "This module deploys a Virtual Network Subnet.",
    "owner": "Azure/module-maintainers"
  },
  "definitions": {
    "roleAssignmentType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The name (as GUID) of the role assignment. If not provided, a GUID will be generated."
          }
        },
        "roleDefinitionIdOrName": {
          "type": "string",
          "metadata": {
            "description": "Required. The role to assign. You can provide either the display name of the role definition, the role definition GUID, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
          }
        },
        "principalId": {
          "type": "string",
          "metadata": {
            "description": "Required. The principal ID of the principal (user/group/identity) to assign the role to."
          }
        },
        "principalType": {
          "type": "string",
          "allowedValues": [
            "Device",
            "ForeignGroup",
            "Group",
            "ServicePrincipal",
            "User"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. The principal type of the assigned principal ID."
          }
        },
        "description": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The description of the role assignment."
          }
        },
        "condition": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\"."
          }
        },
        "conditionVersion": {
          "type": "string",
          "allowedValues": [
            "2.0"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Version of the condition."
          }
        },
        "delegatedManagedIdentityResourceId": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. The Resource Id of the delegated managed identity resource."
          }
        }
      },
      "metadata": {
        "description": "An AVM-aligned type for a role assignment.",
        "__bicep_imported_from!": {
          "sourceTemplate": "br:mcr.microsoft.com/bicep/avm/utl/types/avm-common-types:0.2.1"
        }
      }
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The Name of the subnet resource."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent virtual network. Required if the template is used in a standalone deployment."
      }
    },
    "addressPrefix": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Conditional. The address prefix for the subnet. Required if `addressPrefixes` is empty."
      }
    },
    "networkSecurityGroupResourceId": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The resource ID of the network security group to assign to the subnet."
      }
    },
    "routeTableResourceId": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The resource ID of the route table to assign to the subnet."
      }
    },
    "serviceEndpoints": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "defaultValue": [],
      "metadata": {
        "description": "Optional. The service endpoints to enable on the subnet."
      }
    },
    "delegation": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The delegation to enable on the subnet."
      }
    },
    "natGatewayResourceId": {
      "type": "string",
      "nullable": true,
      "metadata": {
        "description": "Optional. The resource ID of the NAT Gateway to use for the subnet."
      }
    },
    "privateEndpointNetworkPolicies": {
      "type": "string",
      "nullable": true,
      "allowedValues": [
        "Disabled",
        "Enabled",
        "NetworkSecurityGroupEnabled",
        "RouteTableEnabled"
      ],
      "metadata": {
        "description": "Optional. Enable or disable apply network policies on private endpoint in the subnet."
      }
    },
    "privateLinkServiceNetworkPolicies": {
      "type": "string",
      "nullable": true,
      "allowedValues": [
        "Disabled",
        "Enabled"
      ],
      "metadata": {
        "description": "Optional. Enable or disable apply network policies on private link service in the subnet."
      }
    },
    "addressPrefixes": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "nullable": true,
      "metadata": {
        "description": "Conditional. List of address prefixes for the subnet. Required if `addressPrefix` is empty."
      }
    },
    "defaultOutboundAccess": {
      "type": "bool",
      "nullable": true,
      "metadata": {
        "description": "Optional. Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet."
      }
    },
    "sharingScope": {
      "type": "string",
      "allowedValues": [
        "DelegatedServices",
        "Tenant"
      ],
      "nullable": true,
      "metadata": {
        "description": "Optional. Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty."
      }
    },
    "applicationGatewayIPConfigurations": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Application gateway IP configurations of virtual network resource."
      }
    },
    "serviceEndpointPolicies": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. An array of service endpoint policies."
      }
    },
    "roleAssignments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/roleAssignmentType"
      },
      "nullable": true,
      "metadata": {
        "description": "Optional. Array of role assignments to create."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "formattedRoleAssignments",
        "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]",
        "input": "[union(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')], createObject('roleDefinitionId', coalesce(tryGet(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName), if(contains(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, '/providers/Microsoft.Authorization/roleDefinitions/'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName)))))]"
      }
    ],
    "builtInRoleNames": {
      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "Network Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
      "Role Based Access Control Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]",
      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
    }
  },
  "resources": {
    "virtualNetwork": {
      "existing": true,
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-01-01",
      "name": "[parameters('virtualNetworkName')]"
    },
    "subnet": {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}', parameters('virtualNetworkName'), parameters('name'))]",
      "properties": {
        "copy": [
          {
            "name": "serviceEndpoints",
            "count": "[length(parameters('serviceEndpoints'))]",
            "input": {
              "service": "[parameters('serviceEndpoints')[copyIndex('serviceEndpoints')]]"
            }
          }
        ],
        "addressPrefix": "[parameters('addressPrefix')]",
        "addressPrefixes": "[parameters('addressPrefixes')]",
        "networkSecurityGroup": "[if(not(empty(parameters('networkSecurityGroupResourceId'))), createObject('id', parameters('networkSecurityGroupResourceId')), null())]",
        "routeTable": "[if(not(empty(parameters('routeTableResourceId'))), createObject('id', parameters('routeTableResourceId')), null())]",
        "natGateway": "[if(not(empty(parameters('natGatewayResourceId'))), createObject('id', parameters('natGatewayResourceId')), null())]",
        "delegations": "[if(not(empty(parameters('delegation'))), createArray(createObject('name', parameters('delegation'), 'properties', createObject('serviceName', parameters('delegation')))), createArray())]",
        "privateEndpointNetworkPolicies": "[parameters('privateEndpointNetworkPolicies')]",
        "privateLinkServiceNetworkPolicies": "[parameters('privateLinkServiceNetworkPolicies')]",
        "applicationGatewayIPConfigurations": "[parameters('applicationGatewayIPConfigurations')]",
        "serviceEndpointPolicies": "[parameters('serviceEndpointPolicies')]",
        "defaultOutboundAccess": "[parameters('defaultOutboundAccess')]",
        "sharingScope": "[parameters('sharingScope')]"
      },
      "dependsOn": [
        "virtualNetwork"
      ]
    },
    "subnet_roleAssignments": {
      "copy": {
        "name": "subnet_roleAssignments",
        "count": "[length(coalesce(variables('formattedRoleAssignments'), createArray()))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Network/virtualNetworks/{0}/subnets/{1}', parameters('virtualNetworkName'), parameters('name'))]",
      "name": "[coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'name'), guid(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('name')), coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId, coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId))]",
      "properties": {
        "roleDefinitionId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId]",
        "principalId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId]",
        "description": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'description')]",
        "principalType": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'principalType')]",
        "condition": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition')]",
        "conditionVersion": "[if(not(empty(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
        "delegatedManagedIdentityResourceId": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
      },
      "dependsOn": [
        "subnet"
      ]
    }
  },
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group the virtual network peering was deployed into."
      },
      "value": "[resourceGroup().name]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network peering."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the virtual network peering."
      },
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('name'))]"
    },
    "addressPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address prefix for the subnet."
      },
      "value": "[coalesce(tryGet(reference('subnet'), 'addressPrefix'), '')]"
    },
    "addressPrefixes": {
      "type": "array",
      "metadata": {
        "description": "List of address prefixes for the subnet."
      },
      "value": "[coalesce(tryGet(reference('subnet'), 'addressPrefixes'), createArray())]"
    }
  }
}