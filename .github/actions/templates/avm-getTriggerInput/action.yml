#########################################################
## 'Get trigger input' Composite Action                ##
#########################################################
##
## This composite action contains the logic to calculate the running condition for each module workflow job,
## based on the diff (modified files from the previous head), and the GitHub event triggering the module workflow.
## It then publishes their values in a flattened table as an action output.
##
#########################################################
##
##-------------------------------------------##
## ACTION PARAMETERS                         ##
##-------------------------------------------##
##
##   |=================================================================================================================|
##   | Parameter    | Required | Default | Description                              | Example                          |
##   |--------------|----------|---------|------------------------------------------|----------------------------------|
##   | modulePath   | true     | -       | The relative path to the module's folder | 'avm/res/api-management/service' |
##   |=================================================================================================================|
##
#########################################################
##
##----------------------------------------##
## ACTION OUTPUTS                         ##
##----------------------------------------##
##
##   |=====================================================================================|
##   | Output        | Description                                                         |
##   |---------------|---------------------------------------------------------------------|
##   | triggerInput  | A table of all pipeline stages and their enablement in JSON format. |
##   |=====================================================================================|
##
##---------------------------------------------##

name: "Get Trigger Input"
description: "Get Trigger Input"

inputs:
  modulePath:
    description: "The relative path to the module's folder."
    required: true

outputs:
  triggerInput:
    description: "A table of all pipeline stages and their enablement in JSON format."
    value: ${{ steps.get-trigger-input-action.outputs.triggerInput }}

runs:
  using: "composite"
  steps:
    - name: Get trigger input
      id: get-trigger-input-action
      run: |
        # Grouping task logs
        Write-Output '::group::Get trigger input parameters'

        Write-Verbose "The workflow trigger is: ${{ github.event_name }}" -Verbose

        # Load used functions
        . (Join-Path $env:GITHUB_WORKSPACE 'avm' 'utilities' 'pipelines'  'publish' 'helper' 'Get-ModulesToPublish.ps1')

        # Get values per each stage
        $moduleFolderPath = Join-Path $env:GITHUB_WORKSPACE '${{ inputs.modulePath }}'
        Write-Verbose "The module path is: $moduleFolderPath" -Verbose

        $triggerInput = @{}

        ## Static validation
        $triggerInput["staticValidation"] = "true"
        # TODO: add logic to update the value

        ## Deployment validation
        $triggerInput["deploymentValidation"] = "true"
        # TODO: add logic to update the value

        ## Publishing
        ### Test if module qualifies for publishing
        $triggerInput["publishing"] = "true"
        if (-not (Get-ModulesToPublish -ModuleFolderPath $moduleFolderPath -Verbose)) {
          Write-Verbose "No changes detected. Set publishing to be skipped." -Verbose
          $triggerInput["publishing"] = "false"
        }
        Write-Output ('{0}={1}' -f 'triggerInput', ($triggerInput | ConvertTo-Json -Compress)) >> $env:GITHUB_OUTPUT

        Write-Output '::endgroup::'
      shell: pwsh
