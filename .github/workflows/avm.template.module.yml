name: "avm.template.module"

on:
  workflow_call:
    inputs:
      workflowInput:
        type: string
        description: "Input from the workflow caller in JSON format"
        required: true
      moduleTestFilePaths:
        type: string
        description: "List of relative path to the module test files in JSON format"
        required: true
      psRuleModuleTestFilePaths:
        type: string
        description: "List of relative path to the PSRule module test files in JSON format"
        required: true
      modulePath:
        type: string
        description: "Relative path to the module folder"
        required: true

permissions:
  id-token: write # For OIDC
  contents: write # For release tags

env:
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_MGMTGROUP_ID: "${{ secrets.ARM_MGMTGROUP_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  TOKEN_NAMEPREFIX: "${{ secrets.TOKEN_NAMEPREFIX }}"

jobs:
  #########################
  #   Static validation   #
  #########################
  job_module_static_validation: # Note: Please don't change this job name. It is used by the setEnvironment action to define which PS modules to install on runners.
    name: "Static validation"
    runs-on: ubuntu-20.04
    if: (fromJson(inputs.workflowInput)).staticValidation == 'true'
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set environment
        uses: ./.github/actions/templates/avm-setEnvironment
      - name: "Run tests"
        uses: ./.github/actions/templates/avm-validateModulePester
        with:
          modulePath: "${{ inputs.modulePath }}"

  #########################
  #   PSRule validation   #
  #########################
  job_psrule_test: # Note: Please don't change this job name. It is used by the setEnvironment action to define which PS modules to install on runners.
    name: "PSRule"
    runs-on: ubuntu-20.04
    if: (fromJson(inputs.workflowInput)).staticValidation == 'true'
    strategy:
      fail-fast: false
      matrix:
        psRuleModuleTestFilePaths: ${{ fromJson(inputs.psRuleModuleTestFilePaths) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set environment
        uses: ./.github/actions/templates/avm-setEnvironment
      - name: Set PSRule validation
        uses: ./.github/actions/templates/avm-validateModulePSRule
        with:
          templateFilePath: "${{ inputs.modulePath }}/${{ matrix.psRuleModuleTestFilePaths }}"
          subscriptionId: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
          managementGroupId: "${{ secrets.ARM_MGMTGROUP_ID }}"
          psrulePath: "avm/utilities/pipelines/staticValidation/psrule" #'${{ github.workspace }}/avm'

  #############################
  #   Deployment validation   #
  #############################
  job_module_deploy_validation: # Note: Please don't change this job name. It is used by the setEnvironment action to define which PS modules to install on runners.
    name: "Deploy"
    runs-on: ubuntu-20.04
    if: |
      !cancelled() &&
      (fromJson(inputs.workflowInput)).deploymentValidation == 'true' && needs.job_module_static_validation.result != 'failure'
    needs:
      - job_module_static_validation
      # - job_psrule_test # Ignoring dependency whilst PSRule gets bedded in, in this project
    strategy:
      fail-fast: false
      matrix:
        moduleTestFilePaths: ${{ fromJson(inputs.moduleTestFilePaths) }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set environment
        uses: ./.github/actions/templates/avm-setEnvironment
        with:
          removeDeployment: "${{ fromJson(inputs.workflowInput).removeDeployment }}"
      - name: "Using test file [${{ matrix.moduleTestFilePaths }}]"
        uses: ./.github/actions/templates/avm-validateModuleDeployment
        with:
          templateFilePath: "${{ inputs.modulePath }}/${{ matrix.moduleTestFilePaths }}"
          location: "WestEurope"
          subscriptionId: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
          managementGroupId: "${{ secrets.ARM_MGMTGROUP_ID }}"
          removeDeployment: "${{ fromJson(inputs.workflowInput).removeDeployment }}"
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  ##################
  #   Publishing   #
  ##################
  job_publish_module: # Note: Please don't change this job name. It is used by the setEnvironment action to define which PS modules to install on runners.
    name: "Publishing"
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main' && success()
    needs:
      - job_module_deploy_validation
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set environment
        uses: ./.github/actions/templates/avm-setEnvironment
      - name: "Publishing"
        uses: ./.github/actions/templates/avm-publishModule
        with:
          templateFilePath: "${{ inputs.modulePath }}/main.bicep"
        env:
          PUBLISH_REGISTRY_SERVER: "${{ secrets.PUBLISH_REGISTRY_SERVER }}"
          PUBLISH_CLIENT_ID: "${{ secrets.PUBLISH_CLIENT_ID }}"
          PUBLISH_TENANT_ID: "${{ secrets.PUBLISH_TENANT_ID }}"
          PUBLISH_SUBSCRIPTION_ID: "${{ secrets.PUBLISH_SUBSCRIPTION_ID }}"
