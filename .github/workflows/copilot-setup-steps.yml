name: "Copilot Setup Steps"

# This workflow runs when a GitHub Copilot Coding Agent starts and is used to set up the development environment for the agent:
# https://docs.github.com/en/copilot/how-tos/agents/copilot-coding-agent/customizing-the-development-environment-for-copilot-coding-agent

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment
        uses: ./.github/actions/templates/avm-setEnvironment

      - name: Validate AVM tools setup
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          inlineScript: |
            # Verify all required tools are available
            Write-Host "Checking Bicep CLI..."
            bicep --version

            Write-Host "Checking Azure CLI..."
            az version

            Write-Host "Checking PowerShell modules..."
            Get-Module -ListAvailable Az, Pester, PSRule.Rules.Azure | Select-Object Name, Version

            Write-Host "Checking Test-ModuleLocally.ps1 script..."
            Test-Path "./utilities/tools/Test-ModuleLocally.ps1"
