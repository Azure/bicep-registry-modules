# This publishes the list of all public bicep modules to an index file that the Bicep vscode extension can read for intellisense using pwsh
name: Publish module index (pwsh)
on:
  schedule:
    - cron: 45 11 * * * # Run daily at 3:45 AM PST
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  upload-index-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 // Needed to fetch all history and tags

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.PUBLISH_CLIENT_ID }}
          tenant-id: ${{ secrets.PUBLISH_TENANT_ID }}
          subscription-id: ${{ secrets.PUBLISH_SUBSCRIPTION_ID }}

      - name: Manage issues
        shell: pwsh
        run: |
          # Load used functions
          . (Join-Path $env:GITHUB_WORKSPACE 'avm' 'utilities' 'pipelines' 'platform' 'Set-AvmGithubIssueForWorkflow.ps1')

          $functionInput = @{
            Repo              = "${{ github.repository_owner }}/${{ github.event.repository.name }}"
            LimitNumberOfRuns = 500
            LimitInDays       = 2
            IgnoreWorkflows   = @()
          }

          Write-Verbose "Invoke task with" -Verbose
          Write-Verbose ($functionInput | ConvertTo-Json | Out-String) -Verbose

          Set-AvmGithubIssueForWorkflow @functionInput -Verbose # -WhatIf

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: moduleIndex.json
          path: moduleIndex.json

      - name: Upload to blob storage
        shell: pwsh
        run: |
          $storageAccountInfo = @{
            storageAccountName      = 'stguksjtbrmindextest' #biceplivedatasaprod
            storageAccountContainer = 'bicep-cdn-live-data-container'
            storageBlobName         = 'module-index'
            location                = 'uksouth'
          }
          $storageContext = New-AzStorageContext -StorageAccountName $storageAccountInfo.storageAccountName -UseConnectedAccount
          Set-AzStorageBlobContent -Context $storageContext -Container $storageAccountInfo.storageAccountContainer -Blob $storageAccountInfo.storageBlobName -File 'moduleIndex.json' -Force
