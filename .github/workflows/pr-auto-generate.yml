name: BRM / Automaticly Triggered BRM Generation

on:
  push:
#     branches-ignore:
#       - main
    paths:
      - modules/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Sync main
        uses: actions/checkout@v2.3.4
        with:
          ref: main
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }} # A PAT must be used to re-trigger workflows after commit

      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }} # A PAT must be used to re-trigger workflows after commit

      - name: Find Changed Folder
        id: changed_folders
        run: |
          git status
          # Get path of last file checked in
          pwd
          cd $GITHUB_WORKSPACE
          pwd
          LAST_PATH=$( git log --pretty="" --name-only -n 100 origin/main... -- | fgrep -v ".github" | head -1 )
          echo Last file modified: $LAST_PATH
          # Look for the main template file in this file's path or parents
          SAMPLEFOLDER_PATH=$( dirname "$LAST_PATH" )
          echo Last folder modified: $SAMPLEFOLDER_PATH
          TESTFOLDER_PATH=$SAMPLEFOLDER_PATH
          FOUNDFOLDER_PATH=
          while [ "$TESTFOLDER_PATH" != "." ]
          do
            echo "Looking for main template in $TESTFOLDER_PATH"
            MAINBICEP_PATH=$TESTFOLDER_PATH/main.bicep
            AZDEPLOYJSON_PATH=$TESTFOLDER_PATH/main.json
            if [ -f "$MAINBICEP_PATH" ] || [ -f "$AZDEPLOYJSON_PATH" ]; then
              FOUNDFOLDER_PATH=$TESTFOLDER_PATH
              echo Found main template in $FOUNDFOLDER_PATH
              break
            fi
            TESTFOLDER_PATH=$( dirname "$TESTFOLDER_PATH" )
          done
          if [ ! $FOUNDFOLDER_PATH ]; then
              echo "Could not find main.bicep or azdeploy.json in folder or parents of $SAMPLEFOLDER_PATH" 1>&2
              exit 1
          fi
          echo "SAMPLEFOLDER_PATH=$FOUNDFOLDER_PATH" >> $GITHUB_ENV
          echo "MAINBICEP_PATH=$MAINBICEP_PATH" >> $GITHUB_ENV
          echo "AZDEPLOYJSON_PATH=$AZDEPLOYJSON_PATH" >> $GITHUB_ENV
          echo "SAMPLEFOLDER_PATH=$FOUNDFOLDER_PATH" >> $GITHUB_OUTPUT
          echo "MAINBICEP_PATH=$MAINBICEP_PATH" >> $GITHUB_OUTPUT
          echo "AZDEPLOYJSON_PATH=$AZDEPLOYJSON_PATH" >> $GITHUB_OUTPUT
          
          OLD_TAG=$(cut -d/ -f2-3 <<< $FOUNDFOLDER_PATH)
          echo "OLD_TAG=$OLD_TAG" >> $GITHUB_OUTPUT

      # Adding a step to explicitly install the latest Bicep CLI because there is
      # always a delay in updating Bicep CLI in the job runner environments.
      - name: Install the latest Bicep CLI
        run: |
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
          chmod +x ./bicep
          sudo mv ./bicep /usr/local/bin/bicep
          bicep --version

      - name: Run brm generate
        run: |
          dotnet tool install --global Azure.Bicep.RegistryModuleTool

          cd $SAMPLEFOLDER_PATH
          brm generate

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "${{ steps.changed_folders.outputs.OLD_TAG }}/"
          dry_run: true
          default_bump: false

      - name: Set Configurations
        if: steps.tag_version.outputs.release_type
        shell: bash
        env:
          OLD_VERSION: ${{ steps.tag_version.outputs.previous_version }}
          VERSION: ${{ steps.tag_version.outputs.new_version }}
        run: |
          OLD_VERSION=$(cut -d. -f1-2 <<< $OLD_VERSION)
          VERSION=$(cut -d. -f1-2 <<< $VERSION)
          sed -ri "s/$OLD_VERSION/$VERSION/" "$SAMPLEFOLDER_PATH/version.json" || exit 1

      - uses: EndBug/add-and-commit@v9
        if: steps.tag_version.outputs.release_type
        with:
          message: Update Version to ${{ steps.tag_version.outputs.new_version }}
          committer_name: GitHub Actions
          committer_email: actions@github.com
          add: modules
