<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="137" errors="0" failures="2" not-run="0" inconclusive="0" ignored="0" skipped="6" invalid="0" date="2025-01-13" time="09:16:14">
  <environment cwd="C:\dev\ip\bicep-registry-modules\Upstream-Azure" machine-name="ALSEHR-LAPTOP-4" user="alsehr" platform="Microsoft Windows 11 Enterprise|C:\WINDOWS|\Device\Harddisk0\Partition3" os-version="10.0.26100" user-domain="EUROPE" nunit-version="2.5.8.0" clr-version="8.0.10" />
  <culture-info current-culture="en-DE" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="61.8494" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\dev\ip\bicep-registry-modules\Upstream-Azure\utilities\pipelines\staticValidation\compliance\module.tests.ps1" executed="True" result="Failure" success="False" time="61.8494" asserts="0" description="C:\dev\ip\bicep-registry-modules\Upstream-Azure\utilities\pipelines\staticValidation\compliance\module.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="File/folder tests" executed="True" result="Success" success="True" time="0.7309" asserts="0" description="File/folder tests">
            <results>
              <test-suite type="TestFixture" name="File/folder tests.General module folder tests" executed="True" result="Success" success="True" time="0.6176" asserts="0" description="File/folder tests.General module folder tests">
                <results>
                  <test-suite type="ParameterizedTest" name="File/folder tests.General module folder tests.[&lt;moduleFolderName&gt;] Module should contain a [` ORPHANED.md `] file only if orphaned." executed="True" result="Success" success="True" time="0.5763" asserts="0" description="[&lt;moduleFolderName&gt;] Module should contain a [` ORPHANED.md `] file only if orphaned.">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Module should contain a [ ORPHANED.md ] file only if orphaned." name="File/folder tests.General module folder tests.[network/virtual-network-gateway] Module should contain a [ ORPHANED.md ] file only if orphaned." time="0.5763" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="File/folder tests.General module folder tests.[&lt;moduleFolderName&gt;] Module should contain a [` main.bicep `] file." executed="True" result="Success" success="True" time="0.0113" asserts="0" description="[&lt;moduleFolderName&gt;] Module should contain a [` main.bicep `] file.">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Module should contain a [ main.bicep ] file." name="File/folder tests.General module folder tests.[network/virtual-network-gateway] Module should contain a [ main.bicep ] file." time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="File/folder tests.General module folder tests.[&lt;moduleFolderName&gt;] Module should contain a [` main.json `] file." executed="True" result="Success" success="True" time="0.012" asserts="0" description="[&lt;moduleFolderName&gt;] Module should contain a [` main.json `] file.">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Module should contain a [ main.json ] file." name="File/folder tests.General module folder tests.[network/virtual-network-gateway] Module should contain a [ main.json ] file." time="0.012" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="File/folder tests.General module folder tests.[&lt;moduleFolderName&gt;] Module should contain a [` README.md `] file." executed="True" result="Success" success="True" time="0.0102" asserts="0" description="[&lt;moduleFolderName&gt;] Module should contain a [` README.md `] file.">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Module should contain a [ README.md ] file." name="File/folder tests.General module folder tests.[network/virtual-network-gateway] Module should contain a [ README.md ] file." time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="File/folder tests.Top level module folder tests" executed="True" result="Success" success="True" time="0.7243" asserts="0" description="File/folder tests.Top level module folder tests">
                <results>
                  <test-suite type="ParameterizedTest" name="File/folder tests.Top level module folder tests.[&lt;moduleFolderName&gt;] Module should contain a [` version.json `] file." executed="True" result="Success" success="True" time="0.0255" asserts="0" description="[&lt;moduleFolderName&gt;] Module should contain a [` version.json `] file.">
                    <results>
                      <test-case description="[res/network/virtual-network-gateway] Module should contain a [ version.json ] file." name="File/folder tests.Top level module folder tests.[res/network/virtual-network-gateway] Module should contain a [ version.json ] file." time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="File/folder tests.Top level module folder tests.[&lt;moduleFolderName&gt;] Module should contain a [` tests `] folder." executed="True" result="Success" success="True" time="0.0135" asserts="0" description="[&lt;moduleFolderName&gt;] Module should contain a [` tests `] folder.">
                    <results>
                      <test-case description="[res/network/virtual-network-gateway] Module should contain a [ tests ] folder." name="File/folder tests.Top level module folder tests.[res/network/virtual-network-gateway] Module should contain a [ tests ] folder." time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="File/folder tests.Top level module folder tests.[&lt;moduleFolderName&gt;] Module should contain a [` tests/e2e `] folder." executed="True" result="Success" success="True" time="0.008" asserts="0" description="[&lt;moduleFolderName&gt;] Module should contain a [` tests/e2e `] folder.">
                    <results>
                      <test-case description="[res/network/virtual-network-gateway] Module should contain a [ tests/e2e ] folder." name="File/folder tests.Top level module folder tests.[res/network/virtual-network-gateway] Module should contain a [ tests/e2e ] folder." time="0.008" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="File/folder tests.Top level module folder tests.[&lt;moduleFolderName&gt;] Module should contain a [` tests/e2e/*waf-aligned `] folder." executed="True" result="Success" success="True" time="0.011" asserts="0" description="[&lt;moduleFolderName&gt;] Module should contain a [` tests/e2e/*waf-aligned `] folder.">
                    <results>
                      <test-case description="[res/network/virtual-network-gateway] Module should contain a [ tests/e2e/*waf-aligned ] folder." name="File/folder tests.Top level module folder tests.[res/network/virtual-network-gateway] Module should contain a [ tests/e2e/*waf-aligned ] folder." time="0.011" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="File/folder tests.Top level module folder tests.[&lt;moduleFolderName&gt;] Module should contain a [` tests/e2e/*defaults `] folder." executed="True" result="Success" success="True" time="0.0073" asserts="0" description="[&lt;moduleFolderName&gt;] Module should contain a [` tests/e2e/*defaults `] folder.">
                    <results>
                      <test-case description="[res/network/virtual-network-gateway] Module should contain a [ tests/e2e/*defaults ] folder." name="File/folder tests.Top level module folder tests.[res/network/virtual-network-gateway] Module should contain a [ tests/e2e/*defaults ] folder." time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="File/folder tests.Top level module folder tests.[&lt;moduleFolderName&gt;] Module should contain one [` main.test.bicep `] file in each e2e test folder." executed="True" result="Success" success="True" time="0.0312" asserts="0" description="[&lt;moduleFolderName&gt;] Module should contain one [` main.test.bicep `] file in each e2e test folder.">
                    <results>
                      <test-case description="[res/network/virtual-network-gateway] Module should contain one [ main.test.bicep ] file in each e2e test folder." name="File/folder tests.Top level module folder tests.[res/network/virtual-network-gateway] Module should contain one [ main.test.bicep ] file in each e2e test folder." time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Pipeline tests" executed="True" result="Success" success="True" time="0.7673" asserts="0" description="Pipeline tests">
            <results>
              <test-suite type="ParameterizedTest" name="Pipeline tests.[&lt;moduleFolderName&gt;] Module should have a GitHub workflow in path [.github/workflows/&lt;workflowFileName&gt;]." executed="True" result="Success" success="True" time="0.0119" asserts="0" description="[&lt;moduleFolderName&gt;] Module should have a GitHub workflow in path [.github/workflows/&lt;workflowFileName&gt;].">
                <results>
                  <test-case description="[network/virtual-network-gateway] Module should have a GitHub workflow in path [.github/workflows/avm.res.network.virtual-network-gateway.yml]." name="Pipeline tests.[network/virtual-network-gateway] Module should have a GitHub workflow in path [.github/workflows/avm.res.network.virtual-network-gateway.yml]." time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="Pipeline tests.[&lt;moduleFolderName&gt;] GitHub workflow [&lt;WorkflowFileName&gt;] should have [workflowPath] environment variable with value [.github/workflows/&lt;WorkflowFileName&gt;]." executed="True" result="Success" success="True" time="0.018" asserts="0" description="[&lt;moduleFolderName&gt;] GitHub workflow [&lt;WorkflowFileName&gt;] should have [workflowPath] environment variable with value [.github/workflows/&lt;WorkflowFileName&gt;].">
                <results>
                  <test-case description="[network/virtual-network-gateway] GitHub workflow [avm.res.network.virtual-network-gateway.yml] should have [workflowPath] environment variable with value [.github/workflows/avm.res.network.virtual-network-gateway.yml]." name="Pipeline tests.[network/virtual-network-gateway] GitHub workflow [avm.res.network.virtual-network-gateway.yml] should have [workflowPath] environment variable with value [.github/workflows/avm.res.network.virtual-network-gateway.yml]." time="0.018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Module tests" executed="True" result="Failure" success="False" time="40.2107" asserts="0" description="Module tests">
            <results>
              <test-suite type="TestFixture" name="Module tests.Readme content tests" executed="True" result="Failure" success="False" time="35.0898" asserts="0" description="Module tests.Readme content tests">
                <results>
                  <test-suite type="ParameterizedTest" name="Module tests.Readme content tests.[&lt;moduleFolderName&gt;] `Set-ModuleReadMe` script should not apply any updates." executed="True" result="Failure" success="False" time="18.4052" asserts="0" description="[&lt;moduleFolderName&gt;] `Set-ModuleReadMe` script should not apply any updates.">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Set-ModuleReadMe script should not apply any updates." name="Module tests.Readme content tests.[network/virtual-network-gateway] Set-ModuleReadMe script should not apply any updates." time="18.4052" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>RuntimeException: You cannot call a method on a null-valued expression.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\dev\ip\bicep-registry-modules\Upstream-Azure\utilities\pipelines\sharedScripts\Set-ModuleReadMe.ps1:300
at Set-DefinitionSection, C:\dev\ip\bicep-registry-modules\Upstream-Azure\utilities\pipelines\sharedScripts\Set-ModuleReadMe.ps1:300
at Set-DefinitionSection, C:\dev\ip\bicep-registry-modules\Upstream-Azure\utilities\pipelines\sharedScripts\Set-ModuleReadMe.ps1:589
at Set-ParametersSection, C:\dev\ip\bicep-registry-modules\Upstream-Azure\utilities\pipelines\sharedScripts\Set-ModuleReadMe.ps1:188
at Set-ModuleReadMe, C:\dev\ip\bicep-registry-modules\Upstream-Azure\utilities\pipelines\sharedScripts\Set-ModuleReadMe.ps1:2177
at &lt;ScriptBlock&gt;, C:\dev\ip\bicep-registry-modules\Upstream-Azure\utilities\pipelines\staticValidation\compliance\module.tests.ps1:387</stack-trace>
                        </failure>
                      </test-case>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Module tests.Compiled ARM template tests" executed="True" result="Success" success="True" time="38.3687" asserts="0" description="Module tests.Compiled ARM template tests">
                <results>
                  <test-suite type="ParameterizedTest" name="Module tests.Compiled ARM template tests.[&lt;moduleFolderName&gt;] The [main.json] ARM template should be based on the current [main.bicep] Bicep template." executed="True" result="Success" success="True" time="3.272" asserts="0" description="[&lt;moduleFolderName&gt;] The [main.json] ARM template should be based on the current [main.bicep] Bicep template.">
                    <results>
                      <test-case description="[network/virtual-network-gateway] The [main.json] ARM template should be based on the current [main.bicep] Bicep template." name="Module tests.Compiled ARM template tests.[network/virtual-network-gateway] The [main.json] ARM template should be based on the current [main.bicep] Bicep template." time="3.272" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Module tests.Template tests" executed="True" result="Failure" success="False" time="39.4398" asserts="0" description="Module tests.Template tests">
                <results>
                  <test-suite type="TestFixture" name="Module tests.Template tests.General" executed="True" result="Success" success="True" time="0.0708" asserts="0" description="Module tests.Template tests.General">
                    <results>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.General.[&lt;moduleFolderName&gt;] The template file should not be empty." executed="True" result="Success" success="True" time="0.0097" asserts="0" description="[&lt;moduleFolderName&gt;] The template file should not be empty.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] The template file should not be empty." name="Module tests.Template tests.General.[network/virtual-network-gateway] The template file should not be empty." time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.General.[&lt;moduleFolderName&gt;] Template schema version should be the latest." executed="True" result="Success" success="True" time="0.0084" asserts="0" description="[&lt;moduleFolderName&gt;] Template schema version should be the latest.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Template schema version should be the latest." name="Module tests.Template tests.General.[network/virtual-network-gateway] Template schema version should be the latest." time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.General.[&lt;moduleFolderName&gt;] Template schema should use HTTPS reference." executed="True" result="Success" success="True" time="0.0088" asserts="0" description="[&lt;moduleFolderName&gt;] Template schema should use HTTPS reference.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Template schema should use HTTPS reference." name="Module tests.Template tests.General.[network/virtual-network-gateway] Template schema should use HTTPS reference." time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.General.[&lt;moduleFolderName&gt;] The template file should contain required elements [schema], [contentVersion], [resources]." executed="True" result="Success" success="True" time="0.0287" asserts="0" description="[&lt;moduleFolderName&gt;] The template file should contain required elements [schema], [contentVersion], [resources].">
                        <results>
                          <test-case description="[network/virtual-network-gateway] The template file should contain required elements [schema], [contentVersion], [resources]." name="Module tests.Template tests.General.[network/virtual-network-gateway] The template file should contain required elements [schema], [contentVersion], [resources]." time="0.0287" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.General.[&lt;moduleFolderName&gt;] template file should have a module name specified." executed="True" result="Success" success="True" time="0.0033" asserts="0" description="[&lt;moduleFolderName&gt;] template file should have a module name specified.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] template file should have a module name specified." name="Module tests.Template tests.General.[network/virtual-network-gateway] template file should have a module name specified." time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.General.[&lt;moduleFolderName&gt;] template file should have a module description specified." executed="True" result="Success" success="True" time="0.0031" asserts="0" description="[&lt;moduleFolderName&gt;] template file should have a module description specified.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] template file should have a module description specified." name="Module tests.Template tests.General.[network/virtual-network-gateway] template file should have a module description specified." time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.General.[&lt;moduleFolderName&gt;] template file should have a module owner specified." executed="True" result="Success" success="True" time="0.0038" asserts="0" description="[&lt;moduleFolderName&gt;] template file should have a module owner specified.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] template file should have a module owner specified." name="Module tests.Template tests.General.[network/virtual-network-gateway] template file should have a module owner specified." time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Module tests.Template tests.Parameters" executed="True" result="Failure" success="False" time="0.2424" asserts="0" description="Module tests.Template tests.Parameters">
                    <results>
                      <test-suite type="TestFixture" name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests" executed="True" result="Ignored" success="True" time="0.1683" asserts="0" description="Module tests.Template tests.Parameters.Schema-based User-defined-types tests">
                        <results>
                          <test-suite type="ParameterizedTest" name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[&lt;moduleFolderName&gt;] If template has a parameter [&lt;parameterName&gt;], it should implement AVM's corresponding user-defined type." executed="True" result="Ignored" success="True" time="0.0475" asserts="0" description="[&lt;moduleFolderName&gt;] If template has a parameter [&lt;parameterName&gt;], it should implement AVM's corresponding user-defined type.">
                            <results>
                              <test-case description="[network/virtual-network-gateway] If template has a parameter [diagnosticSettings], it should implement AVM's corresponding user-defined type." name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[network/virtual-network-gateway] If template has a parameter [diagnosticSettings], it should implement AVM's corresponding user-defined type." time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                              <test-case description="[network/virtual-network-gateway] If template has a parameter [roleAssignments], it should implement AVM's corresponding user-defined type." name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[network/virtual-network-gateway] If template has a parameter [roleAssignments], it should implement AVM's corresponding user-defined type." time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                              <test-case description="[network/virtual-network-gateway] If template has a parameter [lock], it should implement AVM's corresponding user-defined type." name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[network/virtual-network-gateway] If template has a parameter [lock], it should implement AVM's corresponding user-defined type." time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                              <test-case description="[network/virtual-network-gateway] If template has a parameter [managedIdentities], it should implement AVM's corresponding user-defined type." name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[network/virtual-network-gateway] If template has a parameter [managedIdentities], it should implement AVM's corresponding user-defined type." time="0.0227" asserts="0" success="False" result="Ignored" executed="False" />
                              <test-case description="[network/virtual-network-gateway] If template has a parameter [privateEndpoints], it should implement AVM's corresponding user-defined type." name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[network/virtual-network-gateway] If template has a parameter [privateEndpoints], it should implement AVM's corresponding user-defined type." time="0.0063" asserts="0" success="False" result="Ignored" executed="False" />
                              <test-case description="[network/virtual-network-gateway] If template has a parameter [customerManagedKey], it should implement AVM's corresponding user-defined type." name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[network/virtual-network-gateway] If template has a parameter [customerManagedKey], it should implement AVM's corresponding user-defined type." time="0.0048" asserts="0" success="False" result="Ignored" executed="False" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[&lt;moduleFolderName&gt;] If a UDT definition [managedIdentitiesType] exists and supports system-assigned-identities, the template should have an output for its principal ID." executed="True" result="Ignored" success="True" time="0.0045" asserts="0" description="[&lt;moduleFolderName&gt;] If a UDT definition [managedIdentitiesType] exists and supports system-assigned-identities, the template should have an output for its principal ID.">
                            <results>
                              <test-case description="[network/virtual-network-gateway] If a UDT definition [managedIdentitiesType] exists and supports system-assigned-identities, the template should have an output for its principal ID." name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[network/virtual-network-gateway] If a UDT definition [managedIdentitiesType] exists and supports system-assigned-identities, the template should have an output for its principal ID." time="0.0045" asserts="0" success="False" result="Ignored" executed="False" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[&lt;moduleFolderName&gt;] If a parameter [tags] exists it should be nullable." executed="True" result="Success" success="True" time="0.0054" asserts="0" description="[&lt;moduleFolderName&gt;] If a parameter [tags] exists it should be nullable.">
                            <results>
                              <test-case description="[network/virtual-network-gateway] If a parameter [tags] exists it should be nullable." name="Module tests.Template tests.Parameters.Schema-based User-defined-types tests.[network/virtual-network-gateway] If a parameter [tags] exists it should be nullable." time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Parameters.[&lt;moduleFolderName&gt;] The Location should be defined as a parameter, with the default value of &quot;[resourceGroup().Location]&quot; or &quot;global&quot; for ResourceGroup deployment scope." executed="True" result="Success" success="True" time="0.008" asserts="0" description="[&lt;moduleFolderName&gt;] The Location should be defined as a parameter, with the default value of &quot;[resourceGroup().Location]&quot; or &quot;global&quot; for ResourceGroup deployment scope.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] The Location should be defined as a parameter, with the default value of &quot;[resourceGroup().Location]&quot; or &quot;global&quot; for ResourceGroup deployment scope." name="Module tests.Template tests.Parameters.[network/virtual-network-gateway] The Location should be defined as a parameter, with the default value of &quot;[resourceGroup().Location]&quot; or &quot;global&quot; for ResourceGroup deployment scope." time="0.008" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Parameters.[&lt;moduleFolderName&gt;] The telemetry parameter should be present &amp; have the expected type, default value &amp; metadata description." executed="True" result="Success" success="True" time="0.0432" asserts="0" description="[&lt;moduleFolderName&gt;] The telemetry parameter should be present &amp; have the expected type, default value &amp; metadata description.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] The telemetry parameter should be present &amp; have the expected type, default value &amp; metadata description." name="Module tests.Template tests.Parameters.[network/virtual-network-gateway] The telemetry parameter should be present &amp; have the expected type, default value &amp; metadata description." time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Parameters.[&lt;moduleFolderName&gt;] Parameter &amp; UDT names should be camel-cased (no dashes or underscores and must start with lower-case letter)." executed="True" result="Success" success="True" time="0.005" asserts="0" description="[&lt;moduleFolderName&gt;] Parameter &amp; UDT names should be camel-cased (no dashes or underscores and must start with lower-case letter).">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Parameter &amp; UDT names should be camel-cased (no dashes or underscores and must start with lower-case letter)." name="Module tests.Template tests.Parameters.[network/virtual-network-gateway] Parameter &amp; UDT names should be camel-cased (no dashes or underscores and must start with lower-case letter)." time="0.005" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Parameters.[&lt;moduleFolderName&gt;] Each parameters' &amp; UDT's description should start with a one word category starting with a capital letter, followed by a dot, a space and the actual description text ending with a dot." executed="True" result="Success" success="True" time="0.0062" asserts="0" description="[&lt;moduleFolderName&gt;] Each parameters' &amp; UDT's description should start with a one word category starting with a capital letter, followed by a dot, a space and the actual description text ending with a dot.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Each parameters' &amp; UDT's description should start with a one word category starting with a capital letter, followed by a dot, a space and the actual description text ending with a dot." name="Module tests.Template tests.Parameters.[network/virtual-network-gateway] Each parameters' &amp; UDT's description should start with a one word category starting with a capital letter, followed by a dot, a space and the actual description text ending with a dot." time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Parameters.[&lt;moduleFolderName&gt;] Conditional parameters' &amp; UDT's description should contain 'Required if' followed by the condition making the parameter required." executed="True" result="Success" success="True" time="0.0067" asserts="0" description="[&lt;moduleFolderName&gt;] Conditional parameters' &amp; UDT's description should contain 'Required if' followed by the condition making the parameter required.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Conditional parameters' &amp; UDT's description should contain 'Required if' followed by the condition making the parameter required." name="Module tests.Template tests.Parameters.[network/virtual-network-gateway] Conditional parameters' &amp; UDT's description should contain 'Required if' followed by the condition making the parameter required." time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Parameters.[&lt;moduleFolderName&gt;] All non-required parameters &amp; UDTs in template file should not have description that start with &quot;Required.&quot;." executed="True" result="Failure" success="False" time="0.0114" asserts="0" description="[&lt;moduleFolderName&gt;] All non-required parameters &amp; UDTs in template file should not have description that start with &quot;Required.&quot;.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] All non-required parameters &amp; UDTs in template file should not have description that start with &quot;Required.&quot;." name="Module tests.Template tests.Parameters.[network/virtual-network-gateway] All non-required parameters &amp; UDTs in template file should not have description that start with &quot;Required.&quot;." time="0.0114" asserts="0" success="False" result="Failure" executed="True">
                            <failure>
                              <message>Expected $null or empty, because only required parameters in the template file should have a description that starts with "Required.". Found incorrect items: [skuName]., but got 'skuName'.</message>
                              <stack-trace>at $incorrectParameters | Should -BeNullOrEmpty -Because ('only required parameters in the template file should have a description that starts with "Required.". Found incorrect items: [{0}].' -f ($incorrectParameters -join ', ')), C:\dev\ip\bicep-registry-modules\Upstream-Azure\utilities\pipelines\staticValidation\compliance\module.tests.ps1:705
at &lt;ScriptBlock&gt;, C:\dev\ip\bicep-registry-modules\Upstream-Azure\utilities\pipelines\staticValidation\compliance\module.tests.ps1:705</stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Parameters.[&lt;moduleFolderName&gt;] All required parameters &amp; UDTs in template file should have description that start with &quot;(Required|Conditional).&quot;." executed="True" result="Success" success="True" time="0.006" asserts="0" description="[&lt;moduleFolderName&gt;] All required parameters &amp; UDTs in template file should have description that start with &quot;(Required|Conditional).&quot;.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] All required parameters &amp; UDTs in template file should have description that start with &quot;(Required|Conditional).&quot;." name="Module tests.Template tests.Parameters.[network/virtual-network-gateway] All required parameters &amp; UDTs in template file should have description that start with &quot;(Required|Conditional).&quot;." time="0.006" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Module tests.Template tests.Variables" executed="True" result="Success" success="True" time="0.2626" asserts="0" description="Module tests.Template tests.Variables">
                    <results>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Variables.[&lt;moduleFolderName&gt;] Variable names should be camel-cased (no dashes or underscores and must start with lower-case letter)." executed="True" result="Success" success="True" time="0.0168" asserts="0" description="[&lt;moduleFolderName&gt;] Variable names should be camel-cased (no dashes or underscores and must start with lower-case letter).">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Variable names should be camel-cased (no dashes or underscores and must start with lower-case letter)." name="Module tests.Template tests.Variables.[network/virtual-network-gateway] Variable names should be camel-cased (no dashes or underscores and must start with lower-case letter)." time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Module tests.Template tests.Resources" executed="True" result="Success" success="True" time="0.9199" asserts="0" description="Module tests.Template tests.Resources">
                    <results>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Resources.[&lt;moduleFolderName&gt;] Telemetry deployment should be present in the template." executed="True" result="Success" success="True" time="0.0066" asserts="0" description="[&lt;moduleFolderName&gt;] Telemetry deployment should be present in the template.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Telemetry deployment should be present in the template." name="Module tests.Template tests.Resources.[network/virtual-network-gateway] Telemetry deployment should be present in the template." time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Resources.[&lt;moduleFolderName&gt;] Telemetry deployment should have correct condition in the template." executed="True" result="Success" success="True" time="0.0054" asserts="0" description="[&lt;moduleFolderName&gt;] Telemetry deployment should have correct condition in the template.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Telemetry deployment should have correct condition in the template." name="Module tests.Template tests.Resources.[network/virtual-network-gateway] Telemetry deployment should have correct condition in the template." time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Resources.[&lt;moduleFolderName&gt;] Telemetry deployment should have expected inner output for verbosity." executed="True" result="Success" success="True" time="0.0054" asserts="0" description="[&lt;moduleFolderName&gt;] Telemetry deployment should have expected inner output for verbosity.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Telemetry deployment should have expected inner output for verbosity." name="Module tests.Template tests.Resources.[network/virtual-network-gateway] Telemetry deployment should have expected inner output for verbosity." time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Resources.[&lt;moduleFolderName&gt;] Telemetry deployment should have expected telemetry identifier." executed="True" result="Success" success="True" time="0.6363" asserts="0" description="[&lt;moduleFolderName&gt;] Telemetry deployment should have expected telemetry identifier.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Telemetry deployment should have expected telemetry identifier." name="Module tests.Template tests.Resources.[network/virtual-network-gateway] Telemetry deployment should have expected telemetry identifier." time="0.6363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Module tests.Template tests.Output" executed="True" result="Ignored" success="True" time="1.0665" asserts="0" description="Module tests.Template tests.Output">
                    <results>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Output.[&lt;moduleFolderName&gt;] Output names should be camel-cased (no dashes or underscores and must start with lower-case letter)." executed="True" result="Success" success="True" time="0.0058" asserts="0" description="[&lt;moduleFolderName&gt;] Output names should be camel-cased (no dashes or underscores and must start with lower-case letter).">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Output names should be camel-cased (no dashes or underscores and must start with lower-case letter)." name="Module tests.Template tests.Output.[network/virtual-network-gateway] Output names should be camel-cased (no dashes or underscores and must start with lower-case letter)." time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Output.[&lt;moduleFolderName&gt;] Output names description should start with a capital letter and contain text ending with a dot." executed="True" result="Success" success="True" time="0.0081" asserts="0" description="[&lt;moduleFolderName&gt;] Output names description should start with a capital letter and contain text ending with a dot.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Output names description should start with a capital letter and contain text ending with a dot." name="Module tests.Template tests.Output.[network/virtual-network-gateway] Output names description should start with a capital letter and contain text ending with a dot." time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Output.[&lt;moduleFolderName&gt;] Location output should be returned for resources that use it." executed="True" result="Success" success="True" time="0.0057" asserts="0" description="[&lt;moduleFolderName&gt;] Location output should be returned for resources that use it.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Location output should be returned for resources that use it." name="Module tests.Template tests.Output.[network/virtual-network-gateway] Location output should be returned for resources that use it." time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Output.[&lt;moduleFolderName&gt;] Resource Group output should exist for resources that are deployed into a resource group scope." executed="True" result="Success" success="True" time="0.0205" asserts="0" description="[&lt;moduleFolderName&gt;] Resource Group output should exist for resources that are deployed into a resource group scope.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Resource Group output should exist for resources that are deployed into a resource group scope." name="Module tests.Template tests.Output.[network/virtual-network-gateway] Resource Group output should exist for resources that are deployed into a resource group scope." time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Output.[&lt;moduleFolderName&gt;] Resource modules should have a name output." executed="True" result="Success" success="True" time="0.0348" asserts="0" description="[&lt;moduleFolderName&gt;] Resource modules should have a name output.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Resource modules should have a name output." name="Module tests.Template tests.Output.[network/virtual-network-gateway] Resource modules should have a name output." time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Output.[&lt;moduleFolderName&gt;] Resource modules should have a Resource ID output." executed="True" result="Success" success="True" time="0.0279" asserts="0" description="[&lt;moduleFolderName&gt;] Resource modules should have a Resource ID output.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Resource modules should have a Resource ID output." name="Module tests.Template tests.Output.[network/virtual-network-gateway] Resource modules should have a Resource ID output." time="0.0279" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Module tests.Template tests.Output.[&lt;moduleFolderName&gt;] Resource modules Principal ID output should exist, if supported." executed="True" result="Ignored" success="True" time="0.0044" asserts="0" description="[&lt;moduleFolderName&gt;] Resource modules Principal ID output should exist, if supported.">
                        <results>
                          <test-case description="[network/virtual-network-gateway] Resource modules Principal ID output should exist, if supported." name="Module tests.Template tests.Output.[network/virtual-network-gateway] Resource modules Principal ID output should exist, if supported." time="0.0044" asserts="0" success="False" result="Ignored" executed="False" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Governance tests" executed="True" result="Success" success="True" time="40.275" asserts="0" description="Governance tests">
            <results>
              <test-suite type="ParameterizedTest" name="Governance tests.[&lt;moduleFolderName&gt;] Owning team should be specified correctly in CODEWONERS file." executed="True" result="Success" success="True" time="0.0096" asserts="0" description="[&lt;moduleFolderName&gt;] Owning team should be specified correctly in CODEWONERS file.">
                <results>
                  <test-case description="[network/virtual-network-gateway] Owning team should be specified correctly in CODEWONERS file." name="Governance tests.[network/virtual-network-gateway] Owning team should be specified correctly in CODEWONERS file." time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="Governance tests.[&lt;moduleFolderName&gt;] Module identifier should be listed in issue template in the correct alphabetical position." executed="True" result="Success" success="True" time="0.0507" asserts="0" description="[&lt;moduleFolderName&gt;] Module identifier should be listed in issue template in the correct alphabetical position.">
                <results>
                  <test-case description="[network/virtual-network-gateway] Module identifier should be listed in issue template in the correct alphabetical position." name="Governance tests.[network/virtual-network-gateway] Module identifier should be listed in issue template in the correct alphabetical position." time="0.0507" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Test file tests" executed="True" result="Success" success="True" time="40.856" asserts="0" description="Test file tests">
            <results>
              <test-suite type="TestFixture" name="Test file tests.General test file" executed="True" result="Success" success="True" time="0.5777" asserts="0" description="Test file tests.General test file">
                <results>
                  <test-suite type="ParameterizedTest" name="Test file tests.General test file.[&lt;moduleFolderName&gt;] Bicep test deployment files should contain a parameter [serviceShort] for test case [&lt;testName&gt;]" executed="True" result="Success" success="True" time="0.0969" asserts="0" description="[&lt;moduleFolderName&gt;] Bicep test deployment files should contain a parameter [serviceShort] for test case [&lt;testName&gt;]">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activeActiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activeActiveBGP]" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activeActiveBgpAPIPA]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activeActiveBgpAPIPA]" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activeActiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activeActiveExistingPip]" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activeActiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activeActiveNoBGP]" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activePassiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activePassiveBGP]" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activePassiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activePassiveExistingPip]" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activePassiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [activePassiveNoBGP]" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [defaults]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [defaults]" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [expressRoute]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [expressRoute]" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [max]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [max]" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [vpn-no-az]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [vpn-no-az]" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [vpn]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [vpn]" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [waf-aligned]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [serviceShort] for test case [waf-aligned]" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Test file tests.General test file.[&lt;moduleFolderName&gt;] [&lt;testName&gt;] Bicep test deployment files in a [defaults] folder should have a parameter [serviceShort] with a value ending with [min]" executed="True" result="Success" success="True" time="0.0045" asserts="0" description="[&lt;moduleFolderName&gt;] [&lt;testName&gt;] Bicep test deployment files in a [defaults] folder should have a parameter [serviceShort] with a value ending with [min]">
                    <results>
                      <test-case description="[network/virtual-network-gateway] [defaults] Bicep test deployment files in a [defaults] folder should have a parameter [serviceShort] with a value ending with [min]" name="Test file tests.General test file.[network/virtual-network-gateway] [defaults] Bicep test deployment files in a [defaults] folder should have a parameter [serviceShort] with a value ending with [min]" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Test file tests.General test file.[&lt;moduleFolderName&gt;] [&lt;testName&gt;] Bicep test deployment files in a [max] folder should have a [serviceShort] parameter with a value ending with  [max]" executed="True" result="Success" success="True" time="0.0042" asserts="0" description="[&lt;moduleFolderName&gt;] [&lt;testName&gt;] Bicep test deployment files in a [max] folder should have a [serviceShort] parameter with a value ending with  [max]">
                    <results>
                      <test-case description="[network/virtual-network-gateway] [max] Bicep test deployment files in a [max] folder should have a [serviceShort] parameter with a value ending with  [max]" name="Test file tests.General test file.[network/virtual-network-gateway] [max] Bicep test deployment files in a [max] folder should have a [serviceShort] parameter with a value ending with  [max]" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Test file tests.General test file.[&lt;moduleFolderName&gt;] [&lt;testName&gt;] Bicep test deployment files in a [waf-aligned] folder should have a [serviceShort] parameter with a value ending with [waf]" executed="True" result="Success" success="True" time="0.0038" asserts="0" description="[&lt;moduleFolderName&gt;] [&lt;testName&gt;] Bicep test deployment files in a [waf-aligned] folder should have a [serviceShort] parameter with a value ending with [waf]">
                    <results>
                      <test-case description="[network/virtual-network-gateway] [waf-aligned] Bicep test deployment files in a [waf-aligned] folder should have a [serviceShort] parameter with a value ending with [waf]" name="Test file tests.General test file.[network/virtual-network-gateway] [waf-aligned] Bicep test deployment files in a [waf-aligned] folder should have a [serviceShort] parameter with a value ending with [waf]" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Test file tests.General test file.[&lt;moduleFolderName&gt;] Bicep test deployment files should contain a metadata string [name] for test case [&lt;testName&gt;]" executed="True" result="Success" success="True" time="0.0835" asserts="0" description="[&lt;moduleFolderName&gt;] Bicep test deployment files should contain a metadata string [name] for test case [&lt;testName&gt;]">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activeActiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activeActiveBGP]" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activeActiveBgpAPIPA]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activeActiveBgpAPIPA]" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activeActiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activeActiveExistingPip]" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activeActiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activeActiveNoBGP]" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activePassiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activePassiveBGP]" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activePassiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activePassiveExistingPip]" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activePassiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [activePassiveNoBGP]" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [defaults]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [defaults]" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [expressRoute]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [expressRoute]" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [max]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [max]" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [vpn-no-az]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [vpn-no-az]" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [vpn]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [vpn]" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [waf-aligned]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [name] for test case [waf-aligned]" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Test file tests.General test file.[&lt;moduleFolderName&gt;] Bicep test deployment files should contain a metadata string [description] for test case [&lt;testName&gt;]" executed="True" result="Success" success="True" time="0.0988" asserts="0" description="[&lt;moduleFolderName&gt;] Bicep test deployment files should contain a metadata string [description] for test case [&lt;testName&gt;]">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activeActiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activeActiveBGP]" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activeActiveBgpAPIPA]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activeActiveBgpAPIPA]" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activeActiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activeActiveExistingPip]" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activeActiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activeActiveNoBGP]" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activePassiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activePassiveBGP]" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activePassiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activePassiveExistingPip]" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activePassiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [activePassiveNoBGP]" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [defaults]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [defaults]" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [expressRoute]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [expressRoute]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [max]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [max]" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [vpn-no-az]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [vpn-no-az]" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [vpn]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [vpn]" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [waf-aligned]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a metadata string [description] for test case [waf-aligned]" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Test file tests.General test file.[&lt;moduleFolderName&gt;] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [&lt;testName&gt;]" executed="True" result="Success" success="True" time="0.0871" asserts="0" description="[&lt;moduleFolderName&gt;] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [&lt;testName&gt;]">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activeActiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activeActiveBGP]" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activeActiveBgpAPIPA]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activeActiveBgpAPIPA]" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activeActiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activeActiveExistingPip]" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activeActiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activeActiveNoBGP]" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activePassiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activePassiveBGP]" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activePassiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activePassiveExistingPip]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activePassiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [activePassiveNoBGP]" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [defaults]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [defaults]" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [expressRoute]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [expressRoute]" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [max]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [max]" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [vpn-no-az]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [vpn-no-az]" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [vpn]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [vpn]" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [waf-aligned]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should contain a parameter [namePrefix] with value ['#_namePrefix_#'] for test case [waf-aligned]" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Test file tests.General test file.[&lt;moduleFolderName&gt;] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [&lt;testName&gt;]" executed="True" result="Success" success="True" time="0.0797" asserts="0" description="[&lt;moduleFolderName&gt;] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [&lt;testName&gt;]">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activeActiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activeActiveBGP]" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activeActiveBgpAPIPA]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activeActiveBgpAPIPA]" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activeActiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activeActiveExistingPip]" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activeActiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activeActiveNoBGP]" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activePassiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activePassiveBGP]" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activePassiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activePassiveExistingPip]" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activePassiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [activePassiveNoBGP]" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [defaults]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [defaults]" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [expressRoute]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [expressRoute]" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [max]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [max]" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [vpn-no-az]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [vpn-no-az]" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [vpn]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [vpn]" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [waf-aligned]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment files should invoke test like [module testDeployment '../.*main.bicep' = [ or {] for test case [waf-aligned]" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Test file tests.General test file.[&lt;moduleFolderName&gt;] Bicep test deployment name should contain [`-test-`] for test case [&lt;testName&gt;]" executed="True" result="Success" success="True" time="0.1114" asserts="0" description="[&lt;moduleFolderName&gt;] Bicep test deployment name should contain [`-test-`] for test case [&lt;testName&gt;]">
                    <results>
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activeActiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activeActiveBGP]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activeActiveBgpAPIPA]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activeActiveBgpAPIPA]" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activeActiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activeActiveExistingPip]" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activeActiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activeActiveNoBGP]" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activePassiveBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activePassiveBGP]" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activePassiveExistingPip]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activePassiveExistingPip]" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activePassiveNoBGP]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [activePassiveNoBGP]" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [defaults]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [defaults]" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [expressRoute]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [expressRoute]" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [max]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [max]" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [vpn-no-az]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [vpn-no-az]" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [vpn]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [vpn]" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [waf-aligned]" name="Test file tests.General test file.[network/virtual-network-gateway] Bicep test deployment name should contain [-test-] for test case [waf-aligned]" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="API version tests" executed="True" result="Ignored" success="True" time="40.8995" asserts="0" description="API version tests">
            <results>
              <test-suite type="ParameterizedTest" name="API version tests.In [&lt;moduleName&gt;] used resource type [&lt;ResourceType&gt;] should use one of the recent API version(s). Currently using [&lt;TargetApi&gt;]." executed="True" result="Ignored" success="True" time="0.0372" asserts="0" description="In [&lt;moduleName&gt;] used resource type [&lt;ResourceType&gt;] should use one of the recent API version(s). Currently using [&lt;TargetApi&gt;].">
                <results>
                  <test-case description="In [res/network/virtual-network-gateway] used resource type [locks] should use one of the recent API version(s). Currently using [2020-05-01]." name="API version tests.In [res/network/virtual-network-gateway] used resource type [locks] should use one of the recent API version(s). Currently using [2020-05-01]." time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="In [res/network/virtual-network-gateway] used resource type [roleAssignments] should use one of the recent API version(s). Currently using [2022-04-01]." name="API version tests.In [res/network/virtual-network-gateway] used resource type [roleAssignments] should use one of the recent API version(s). Currently using [2022-04-01]." time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="In [res/network/virtual-network-gateway] used resource type [diagnosticSettings] should use one of the recent API version(s). Currently using [2021-05-01-preview]." name="API version tests.In [res/network/virtual-network-gateway] used resource type [diagnosticSettings] should use one of the recent API version(s). Currently using [2021-05-01-preview]." time="0.0055" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="In [res/network/virtual-network-gateway] used resource type [publicIPAddresses] should use one of the recent API version(s). Currently using [2023-09-01]." name="API version tests.In [res/network/virtual-network-gateway] used resource type [publicIPAddresses] should use one of the recent API version(s). Currently using [2023-09-01]." time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="In [res/network/virtual-network-gateway] used resource type [virtualNetworkGateways] should use one of the recent API version(s). Currently using [2023-04-01]." name="API version tests.In [res/network/virtual-network-gateway] used resource type [virtualNetworkGateways] should use one of the recent API version(s). Currently using [2023-04-01]." time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="In [res/network/virtual-network-gateway] used resource type [virtualNetworkGateways/natRules] should use one of the recent API version(s). Currently using [2023-04-01]." name="API version tests.In [res/network/virtual-network-gateway] used resource type [virtualNetworkGateways/natRules] should use one of the recent API version(s). Currently using [2023-04-01]." time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>