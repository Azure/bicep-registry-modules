{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.8.9.13224",
      "templateHash": "2567109167033014376"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
    "nameseed": {
      "type": "string",
      "metadata": {
        "description": "Used to name the Azure resources that are created"
      }
    },
    "applicationEntityName": {
      "type": "string",
      "metadata": {
        "description": "The application relevant name for the dapr component you are implementing"
      },
      "maxLength": 8
    },
    "daprComponentType": {
      "type": "string",
      "metadata": {
        "description": "The DAPR application component type to configure in the Environment"
      },
      "allowedValues": [
        "pubsub.azure.servicebus",
        "state.azure.blobstorage"
      ]
    },
    "daprComponentName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the dapr component, this will be autogenerated if not provided"
      }
    },
    "daprComponentScopes": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Names of container apps that can use this Dapr component"
      }
    }
  },
  "variables": {
    "autoDaprComponentNameMap": {
      "pubsub.azure.servicebus": "[format('{0}pubsub', parameters('applicationEntityName'))]",
      "state.azure.blobstorage": "[format('{0}statestore', parameters('applicationEntityName'))]"
    },
    "autoDaprComponentName": "[if(empty(parameters('daprComponentName')), variables('autoDaprComponentNameMap')[parameters('daprComponentType')], parameters('daprComponentName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('containerAppEnv-{0}', parameters('nameseed'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nameseed": {
            "value": "[parameters('nameseed')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "15511581859222736191"
            }
          },
          "parameters": {
            "nameseed": {
              "type": "string"
            },
            "containerAppEnvName": {
              "type": "string",
              "defaultValue": "[format('env-{0}', parameters('nameseed'))]",
              "metadata": {
                "description": "Specifies the name of the container app environment."
              }
            },
            "containerAppLogAnalyticsName": {
              "type": "string",
              "defaultValue": "[format('log-{0}', parameters('nameseed'))]",
              "metadata": {
                "description": "Specifies the name of the log analytics workspace."
              }
            },
            "logRetentionDays": {
              "type": "int",
              "defaultValue": 30
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Specifies the location for all resources."
              }
            },
            "infraSubnetId": {
              "type": "string",
              "defaultValue": ""
            },
            "runtimeSubnetId": {
              "type": "string",
              "defaultValue": ""
            },
            "internalVirtualIp": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Sets the environment to only have a internal load balancer"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2022-03-01",
              "name": "[parameters('containerAppEnvName')]",
              "location": "[parameters('location')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName'))).customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName')), '2020-10-01').primarySharedKey]"
                  }
                },
                "vnetConfiguration": {
                  "infrastructureSubnetId": "[parameters('infraSubnetId')]",
                  "runtimeSubnetId": "[parameters('runtimeSubnetId')]",
                  "internal": "[parameters('internalVirtualIp')]"
                },
                "daprAIInstrumentationKey": "[reference(resourceId('Microsoft.Resources/deployments', format('appInsights-{0}', parameters('nameseed')))).outputs.instrumentationKey.value]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('appInsights-{0}', parameters('nameseed')))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-10-01",
              "name": "[parameters('containerAppLogAnalyticsName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": "[parameters('logRetentionDays')]"
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('appInsights-{0}', parameters('nameseed'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "logAnalyticsId": {
                    "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName'))]"
                  },
                  "nameseed": {
                    "value": "[parameters('nameseed')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.8.9.13224",
                      "templateHash": "11418317389630631646"
                    }
                  },
                  "parameters": {
                    "nameseed": {
                      "type": "string"
                    },
                    "logAnalyticsId": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[format('ai-{0}', parameters('nameseed'))]",
                      "location": "[parameters('location')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "WorkspaceResourceId": "[parameters('logAnalyticsId')]",
                        "IngestionMode": "LogAnalytics"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/components', format('ai-{0}', parameters('nameseed')))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[format('ai-{0}', parameters('nameseed'))]"
                    },
                    "instrumentationKey": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', format('ai-{0}', parameters('nameseed')))).InstrumentationKey]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName'))]"
              ]
            }
          ],
          "outputs": {
            "containerAppEnvironmentName": {
              "type": "string",
              "value": "[parameters('containerAppEnvName')]"
            },
            "logAnalyticsName": {
              "type": "string",
              "value": "[parameters('containerAppLogAnalyticsName')]"
            },
            "logAnalyticsId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName'))]"
            },
            "appInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('appInsights-{0}', parameters('nameseed')))).outputs.instrumentationKey.value]"
            }
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('daprComponentType'), 'pubsub.azure.servicebus')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('dapr-sb-{0}', parameters('nameseed'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('autoDaprComponentName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "containerAppEnvName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppEnv-{0}', parameters('nameseed')))).outputs.containerAppEnvironmentName.value]"
          },
          "entityName": {
            "value": "[parameters('applicationEntityName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "5090044809953448820"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "entityName": {
              "type": "string"
            },
            "containerAppEnvName": {
              "type": "string"
            },
            "createAzureServiceForComponent": {
              "type": "bool",
              "defaultValue": true
            },
            "scopes": {
              "type": "array",
              "defaultValue": []
            }
          },
          "variables": {
            "daprComponent": "pubsub.azure.servicebus",
            "serviceBusConnectionStringName": "sb-root-connectionstring"
          },
          "resources": [
            {
              "condition": "[parameters('createAzureServiceForComponent')]",
              "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}/{2}', format('sb-{0}', parameters('name')), parameters('entityName'), parameters('entityName'))]",
              "properties": {
                "deadLetteringOnFilterEvaluationExceptions": true,
                "deadLetteringOnMessageExpiration": true,
                "maxDeliveryCount": 10
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', format('sb-{0}', parameters('name')), parameters('entityName'))]"
              ]
            },
            {
              "condition": "[parameters('createAzureServiceForComponent')]",
              "type": "Microsoft.ServiceBus/namespaces/topics",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', format('sb-{0}', parameters('name')), parameters('entityName'))]",
              "properties": {
                "supportOrdering": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', format('sb-{0}', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments/daprComponents",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('containerAppEnvName'), format('{0}-sb', parameters('name')))]",
              "properties": {
                "componentType": "[variables('daprComponent')]",
                "version": "v1",
                "secrets": [
                  {
                    "name": "[variables('serviceBusConnectionStringName')]",
                    "value": "[format('{0};EntityPath={1}', listKeys(format('{0}/AuthorizationRules/RootManageSharedAccessKey', resourceId('Microsoft.ServiceBus/namespaces', format('sb-{0}', parameters('name')))), '2021-11-01').primaryConnectionString, parameters('entityName'))]"
                  }
                ],
                "metadata": [
                  {
                    "name": "connectionString",
                    "secretRef": "[variables('serviceBusConnectionStringName')]"
                  },
                  {
                    "name": "consumerID",
                    "value": "[parameters('entityName')]"
                  }
                ],
                "scopes": "[parameters('scopes')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', format('sb-{0}', parameters('name')))]"
              ]
            },
            {
              "condition": "[parameters('createAzureServiceForComponent')]",
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2021-11-01",
              "name": "[format('sb-{0}', parameters('name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Standard"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('containerAppEnv-{0}', parameters('nameseed')))]"
      ]
    },
    {
      "condition": "[equals(parameters('daprComponentType'), 'state.azure.blobstorage')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('dapr-state-{0}', parameters('nameseed'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('autoDaprComponentName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "containerAppEnvName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppEnv-{0}', parameters('nameseed')))).outputs.containerAppEnvironmentName.value]"
          },
          "entityName": {
            "value": "[parameters('applicationEntityName')]"
          },
          "scopes": {
            "value": "[parameters('daprComponentScopes')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "3315925227614739036"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "entityName": {
              "type": "string"
            },
            "containerAppEnvName": {
              "type": "string"
            },
            "createAzureServiceForComponent": {
              "type": "bool",
              "defaultValue": true
            },
            "scopes": {
              "type": "array",
              "defaultValue": []
            }
          },
          "variables": {
            "daprComponent": "state.azure.blobstorage",
            "rawStorageAccountName": "[format('st{0}{1}', parameters('name'), uniqueString(resourceGroup().id))]",
            "storageAccountName": "[if(greater(length(variables('rawStorageAccountName')), 24), substring(variables('rawStorageAccountName'), 0, 24), variables('rawStorageAccountName'))]"
          },
          "resources": [
            {
              "condition": "[and(parameters('createAzureServiceForComponent'), equals(variables('daprComponent'), 'state.azure.blobstorage'))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', parameters('entityName'))]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
              ]
            },
            {
              "condition": "[and(parameters('createAzureServiceForComponent'), equals(variables('daprComponent'), 'state.azure.blobstorage'))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "condition": "[equals(variables('daprComponent'), 'state.azure.blobstorage')]",
              "type": "Microsoft.App/managedEnvironments/daprComponents",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('containerAppEnvName'), format('{0}-state', parameters('name')))]",
              "properties": {
                "componentType": "[variables('daprComponent')]",
                "version": "v1",
                "secrets": [
                  {
                    "name": "storageaccountkey",
                    "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-09-01').keys[0].value]"
                  }
                ],
                "metadata": [
                  {
                    "name": "accountKey",
                    "secretRef": "storageaccountkey"
                  },
                  {
                    "name": "accountName",
                    "value": "[variables('storageAccountName')]"
                  },
                  {
                    "name": "containerName",
                    "value": "[parameters('entityName')]"
                  }
                ],
                "scopes": "[parameters('scopes')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "condition": "[and(parameters('createAzureServiceForComponent'), equals(variables('daprComponent'), 'state.azure.blobstorage'))]",
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-09-01",
              "name": "[variables('storageAccountName')]",
              "kind": "StorageV2",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('containerAppEnv-{0}', parameters('nameseed')))]"
      ]
    }
  ],
  "outputs": {
    "containerAppEnvironmentName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppEnv-{0}', parameters('nameseed')))).outputs.containerAppEnvironmentName.value]",
      "metadata": {
        "description": "The name of the created Azure Container Apps Environment"
      }
    },
    "appInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppEnv-{0}', parameters('nameseed')))).outputs.appInsightsInstrumentationKey.value]",
      "metadata": {
        "description": "The Azure Applications Insights (telemetry) instrumentation key"
      }
    }
  }
}