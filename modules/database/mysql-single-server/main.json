{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.2.56959",
      "templateHash": "16475355432982827474"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Deployment region name. Default is the location of the resource group."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Deployment tags. Default is empty map."
      }
    },
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "Required. The administrator username of the server. Can only be specified when the server is being created."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Required. The administrator password of the server. Can only be specified when the server is being created."
      }
    },
    "backupRetentionDays": {
      "type": "int",
      "defaultValue": 35,
      "maxValue": 35,
      "minValue": 7,
      "metadata": {
        "description": "Optional. The number of days a backup is retained."
      }
    },
    "createMode": {
      "type": "string",
      "defaultValue": "Default",
      "allowedValues": [
        "Default",
        "GeoRestore",
        "PointInTimeRestore",
        "Replica"
      ],
      "metadata": {
        "description": "Optional. The mode to create a new server."
      }
    },
    "databases": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of databases to create on server."
      }
    },
    "serverConfigurations": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of server configurations to create on server."
      }
    },
    "infrastructureEncryption": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "Optional. Status showing whether the server enabled infrastructure encryption.."
      }
    },
    "firewallRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of firewall rules to create on server."
      }
    },
    "privateEndpoints": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of privateEndpoints to create on server."
      }
    },
    "geoRedundantBackup": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "Optional. Enable or disable geo-redundant backups."
      }
    },
    "minimalTlsVersion": {
      "type": "string",
      "defaultValue": "TLS1_2",
      "allowedValues": [
        "TLS1_0",
        "TLS1_1",
        "TLS1_2",
        "TLSEnforcementDisabled"
      ],
      "metadata": {
        "description": "Optional. Enforce a minimal Tls version for the server."
      }
    },
    "restorePointInTime": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Restore point creation time (ISO8601 format), specifying the time to restore from."
      }
    },
    "publicNetworkAccess": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "Optional. Whether or not public network access is allowed for this server."
      }
    },
    "serverName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the server."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "GP_Gen5_2",
      "metadata": {
        "description": "Optional.\tThe name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8."
      }
    },
    "sourceServerResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The source server resource id to restore from, e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.DBforMySQL/flexibleServers/server1\" . It's required when \"createMode\" is \"GeoRestore\" or \"Replica\" or \"PointInTimeRestore\"."
      }
    },
    "sslEnforcement": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "Optional. Enable ssl enforcement or not when connect to server."
      }
    },
    "storageAutogrow": {
      "type": "string",
      "defaultValue": "Enabled",
      "metadata": {
        "description": "Optional. Auto grow of storage."
      },
      "allowedValues": [
        "Enabled",
        "Disabled"
      ]
    },
    "storageSizeGB": {
      "type": "int",
      "defaultValue": 32,
      "metadata": {
        "description": "Optional. The storage size of the server."
      }
    },
    "version": {
      "type": "string",
      "defaultValue": "8.0",
      "allowedValues": [
        "5.6",
        "5.7",
        "8.0"
      ],
      "metadata": {
        "description": "Optional. The version of the MySQL server."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "azure_mysql_vnet",
      "metadata": {
        "description": "Optional. Virtual Network Name"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "azure_mysql_subnet",
      "metadata": {
        "description": "Optional. Subnet Name"
      }
    },
    "virtualNetworkRuleName": {
      "type": "string",
      "defaultValue": "AllowSubnet",
      "metadata": {
        "description": "Optional. Virtual Network RuleName"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Optional. Virtual Network Address Prefix"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Optional. Subnet Address Prefix"
      }
    },
    "ignoreMissingVnetServiceEndpoint": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Create firewall rule before the virtual network has vnet service endpoint enabled"
      }
    },
    "privateDnsZoneName": {
      "type": "string",
      "defaultValue": "privatelink.mysql.database.azure.com",
      "metadata": {
        "description": "Optional. Private DNS zone name for the private endpoint. Default is privatelink.mysql.database.azure.com"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2021-05-01",
      "name": "[format('{0}/{1}', parameters('virtualNetworkName'), parameters('subnetName'))]",
      "properties": {
        "addressPrefix": "[parameters('subnetPrefix')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.DBforMySQL/servers",
      "apiVersion": "2017-12-01",
      "name": "[parameters('serverName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('skuName')]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "createMode": "[parameters('createMode')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "[parameters('version')]",
        "minimalTlsVersion": "[parameters('minimalTlsVersion')]",
        "infrastructureEncryption": "[parameters('infrastructureEncryption')]",
        "sslEnforcement": "[parameters('sslEnforcement')]",
        "storageProfile": {
          "storageMB": "[mul(parameters('storageSizeGB'), 1024)]",
          "backupRetentionDays": "[parameters('backupRetentionDays')]",
          "geoRedundantBackup": "[parameters('geoRedundantBackup')]",
          "storageAutogrow": "[parameters('storageAutogrow')]"
        },
        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
        "sourceServerId": "[if(not(equals(parameters('createMode'), 'Default')), parameters('sourceServerResourceId'), json('null'))]",
        "restorePointInTime": "[if(equals(parameters('createMode'), 'PointInTimeRestore'), parameters('restorePointInTime'), json('null'))]"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/virtualNetworkRules",
      "apiVersion": "2017-12-01",
      "name": "[parameters('virtualNetworkRuleName')]",
      "properties": {
        "ignoreMissingVnetServiceEndpoint": "[parameters('ignoreMissingVnetServiceEndpoint')]",
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
      ]
    },
    {
      "copy": {
        "name": "mysqlServerFirewallRules",
        "count": "[length(parameters('firewallRules'))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "name": "[format('{0}/{1}', parameters('serverName'), parameters('firewallRules')[copyIndex()].name)]",
      "properties": {
        "startIpAddress": "[parameters('firewallRules')[copyIndex()].startIpAddress]",
        "endIpAddress": "[parameters('firewallRules')[copyIndex()].endIpAddress]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))]"
      ]
    },
    {
      "copy": {
        "name": "mysqlServerDatabases",
        "count": "[length(parameters('databases'))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.DBforMySQL/servers/databases",
      "apiVersion": "2017-12-01",
      "name": "[format('{0}/{1}', parameters('serverName'), parameters('databases')[copyIndex()].name)]",
      "properties": {
        "charset": "[if(contains(parameters('databases')[copyIndex()], 'charset'), parameters('databases')[copyIndex()].charset, 'utf8')]",
        "collation": "[if(contains(parameters('databases')[copyIndex()], 'collation'), parameters('databases')[copyIndex()].collation, 'utf8_general_ci')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))]"
      ]
    },
    {
      "copy": {
        "name": "mysqlServerConfig",
        "count": "[length(parameters('serverConfigurations'))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.DBforMySQL/servers/configurations",
      "apiVersion": "2017-12-01",
      "name": "[format('{0}/{1}', parameters('serverName'), parameters('serverConfigurations')[copyIndex()].name)]",
      "properties": {
        "value": "[parameters('serverConfigurations')[copyIndex()].value]",
        "source": "user-override"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))]",
        "mysqlServerFirewallRules"
      ]
    },
    {
      "copy": {
        "name": "mysqlServerprivateEndpoint",
        "count": "[length(parameters('privateEndpoints'))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.DBforMySQL/servers/privateEndpointConnections",
      "apiVersion": "2018-06-01",
      "name": "[format('{0}/{1}', parameters('serverName'), parameters('privateEndpoints')[copyIndex()].name)]",
      "properties": {
        "privateEndpoint": {
          "id": "[parameters('privateEndpoints')[copyIndex()].id]"
        },
        "privateLinkServiceConnectionState": {
          "description": "[parameters('privateEndpoints')[copyIndex()].description]",
          "status": "[parameters('privateEndpoints')[copyIndex()].status]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateDnsZoneName')]",
      "location": "[parameters('location')]"
    }
  ],
  "outputs": {
    "id": {
      "type": "string",
      "metadata": {
        "description": "MySQL server Resource id"
      },
      "value": "[resourceId('Microsoft.DBforMySQL/servers', parameters('serverName'))]"
    },
    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "MySQL fully Qualified Domain Name"
      },
      "value": "[reference(resourceId('Microsoft.DBforMySQL/servers', parameters('serverName')), '2017-12-01').fullyQualifiedDomainName]"
    }
  }
}