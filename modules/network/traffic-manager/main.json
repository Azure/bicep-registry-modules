{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "18080649983969132278"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "traf",
      "metadata": {
        "description": "Prefix of traffic manager profile resource name. This param is ignored when name is provided."
      }
    },
    "name": {
      "type": "string",
      "defaultValue": "[take(format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().id, subscription().id)), 63)]",
      "maxLength": 63,
      "minLength": 1,
      "metadata": {
        "description": "Name of Traffic Manager Profile Resource"
      }
    },
    "trafficManagerDnsName": {
      "type": "string",
      "defaultValue": "[format('tmp-{0}', uniqueString(resourceGroup().id, subscription().id, parameters('name')))]",
      "metadata": {
        "description": "Relative DNS name for the traffic manager profile, must be globally unique."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags for the module resources."
      }
    },
    "trafficRoutingMethod": {
      "type": "string",
      "defaultValue": "Performance",
      "allowedValues": [
        "Geographic",
        "MultiValue",
        "Performance",
        "Priority",
        "Subnet",
        "Weighted"
      ],
      "metadata": {
        "description": "The traffic routing method of the Traffic Manager profile. default is \"Performance\"."
      }
    },
    "ttl": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "The DNS Time-To-Live (TTL), in seconds. default is 30. "
      }
    },
    "profileStatus": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "The status of the Traffic Manager profile. default is Enabled."
      }
    },
    "endpoints": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "An array of objects that represent the endpoints in the Traffic Manager profile. {name: string, target: string, endpointStatus: string, endpointLocation: string}"
      }
    },
    "monitorConfig": {
      "type": "object",
      "defaultValue": {
        "protocol": "HTTPS",
        "port": 443,
        "path": "/",
        "expectedStatusCodeRanges": [
          {
            "min": 200,
            "max": 202
          },
          {
            "min": 301,
            "max": 302
          }
        ]
      },
      "metadata": {
        "description": "An object that represents the monitoring configuration for the Traffic Manager profile."
      }
    },
    "enableDiagnostics": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Diagnostic Capture . default is false"
      }
    },
    "diagnosticLogsRetentionInDays": {
      "type": "int",
      "defaultValue": 365,
      "maxValue": 365,
      "minValue": 0,
      "metadata": {
        "description": "Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely. default is 365."
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of the diagnostic storage account."
      }
    },
    "diagnosticWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of the diagnostic log analytics workspace."
      }
    },
    "diagnosticEventHubAuthorizationRuleId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of the diagnostic event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
      }
    },
    "diagnosticEventHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the diagnostic event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
      }
    },
    "logsToEnable": {
      "type": "string",
      "defaultValue": "allLogs",
      "allowedValues": [
        "allLogs",
        "ProbeHealthStatusEvents"
      ],
      "metadata": {
        "description": "The name of logs that will be streamed. default is allLogs."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "diagnosticsMetrics",
        "count": "[length(variables('metricsToEnable'))]",
        "input": {
          "category": "[variables('metricsToEnable')[copyIndex('diagnosticsMetrics')]]",
          "timeGrain": null,
          "enabled": true,
          "retentionPolicy": {
            "enabled": true,
            "days": "[parameters('diagnosticLogsRetentionInDays')]"
          }
        }
      }
    ],
    "metricsToEnable": [
      "AllMetrics"
    ],
    "diagnosticsLogs": [
      {
        "category": "[if(equals(parameters('logsToEnable'), 'allLogs'), null(), parameters('logsToEnable'))]",
        "categoryGroup": "[if(equals(parameters('logsToEnable'), 'allLogs'), parameters('logsToEnable'), null())]",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Network/trafficmanagerprofiles",
      "apiVersion": "2018-08-01",
      "name": "[parameters('name')]",
      "location": "global",
      "tags": "[parameters('tags')]",
      "properties": {
        "profileStatus": "[parameters('profileStatus')]",
        "trafficRoutingMethod": "[parameters('trafficRoutingMethod')]",
        "dnsConfig": {
          "relativeName": "[toLower(parameters('trafficManagerDnsName'))]",
          "ttl": "[parameters('ttl')]"
        },
        "monitorConfig": {
          "protocol": "[if(contains(parameters('monitorConfig'), 'protocol'), parameters('monitorConfig').protocol, 'HTTPS')]",
          "port": "[if(contains(parameters('monitorConfig'), 'port'), parameters('monitorConfig').port, 443)]",
          "path": "[if(contains(parameters('monitorConfig'), 'path'), parameters('monitorConfig').path, '/')]",
          "expectedStatusCodeRanges": "[if(contains(parameters('monitorConfig'), 'expectedStatusCodeRanges'), parameters('monitorConfig').expectedStatusCodeRanges, createArray(createObject('min', 200, 'max', 202), createObject('min', 301, 'max', 302)))]"
        }
      }
    },
    {
      "copy": {
        "name": "trafficManagerEndpoints",
        "count": "[length(parameters('endpoints'))]"
      },
      "condition": "[not(empty(parameters('endpoints')[copyIndex()]))]",
      "type": "Microsoft.Network/trafficmanagerprofiles/ExternalEndpoints",
      "apiVersion": "2018-08-01",
      "name": "[format('{0}/{1}', parameters('name'), parameters('endpoints')[copyIndex()].name)]",
      "properties": {
        "target": "[parameters('endpoints')[copyIndex()].target]",
        "endpointStatus": "[if(contains(parameters('endpoints')[copyIndex()], 'endpointStatus'), parameters('endpoints')[copyIndex()].endpointStatus, 'Enabled')]",
        "endpointLocation": "[parameters('endpoints')[copyIndex()].endpointLocation]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/trafficmanagerprofiles', parameters('name'))]"
      ]
    },
    {
      "condition": "[parameters('enableDiagnostics')]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Network/trafficmanagerprofiles/{0}', parameters('name'))]",
      "name": "[format('{0}-diagnosticSettings', parameters('name'))]",
      "properties": {
        "storageAccountId": "[if(not(empty(parameters('diagnosticStorageAccountId'))), parameters('diagnosticStorageAccountId'), null())]",
        "workspaceId": "[if(not(empty(parameters('diagnosticWorkspaceId'))), parameters('diagnosticWorkspaceId'), null())]",
        "eventHubAuthorizationRuleId": "[if(not(empty(parameters('diagnosticEventHubAuthorizationRuleId'))), parameters('diagnosticEventHubAuthorizationRuleId'), null())]",
        "eventHubName": "[if(not(empty(parameters('diagnosticEventHubName'))), parameters('diagnosticEventHubName'), null())]",
        "metrics": "[variables('diagnosticsMetrics')]",
        "logs": "[variables('diagnosticsLogs')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/trafficmanagerprofiles', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "id": {
      "type": "string",
      "metadata": {
        "description": "Traffic Manager Profile Resource ID"
      },
      "value": "[resourceId('Microsoft.Network/trafficmanagerprofiles', parameters('name'))]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "Traffic Manager Profile Resource Name"
      },
      "value": "[parameters('name')]"
    }
  }
}