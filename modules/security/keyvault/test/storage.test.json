{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.2.56959",
      "templateHash": "9610057475127461115"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[format('kv{0}', uniqueString(resourceGroup().id, parameters('location'), 'storage2keyvault'))]",
      "maxLength": 24,
      "minLength": 3
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('sa{0}', uniqueString(resourceGroup().id, parameters('location'), 'storage2keyvault'))]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "mystorageaccount",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "name": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "6249334553241462209"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Deployment Location"
              }
            },
            "name": {
              "type": "string",
              "defaultValue": "[format('st{0}', uniqueString(resourceGroup().id, subscription().id))]",
              "metadata": {
                "description": "Name of Storage Account. Must be unique within Azure."
              }
            },
            "subnetID": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "ID of the subnet where the Storage Account will be deployed, if virtual network access is enabled."
              }
            },
            "enableVNET": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Toggle to enable or disable virtual network access for the Storage Account."
              }
            },
            "isZoneRedundant": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Toggle to enable or disable zone redundancy for the Storage Account."
              }
            },
            "storageAccountType": {
              "type": "string",
              "defaultValue": "[if(parameters('isZoneRedundant'), 'Standard_ZRS', 'Standard_LRS')]",
              "metadata": {
                "description": "Storage Account Type. Use Zonal Redundant Storage when able."
              }
            }
          },
          "variables": {
            "networkAcls": "[if(parameters('enableVNET'), createObject('defaultAction', 'Deny', 'virtualNetworkRules', createArray(createObject('action', 'Allow', 'id', parameters('subnetID')))), createObject())]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('storageAccountType')]"
              },
              "kind": "StorageV2",
              "properties": {
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    }
                  }
                },
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "networkAcls": "[variables('networkAcls')]",
                "minimumTlsVersion": "TLS1_2"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]",
              "metadata": {
                "description": "The ID of the created or existing Storage Account. Use this ID to reference the Storage Account in other Azure resource deployments."
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "myKeyVault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "name": {
            "value": "[parameters('keyVaultName')]"
          },
          "secretName": {
            "value": "storage-secret"
          },
          "secretValue": {
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value]"
          },
          "createSecret": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "10483910383009838711"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Deployment Location"
              }
            },
            "prefix": {
              "type": "string",
              "defaultValue": "kv",
              "metadata": {
                "description": "Prefix of Azure Key Vault Resource Name"
              }
            },
            "name": {
              "type": "string",
              "defaultValue": "[take(format('{0}-{1}', parameters('prefix'), uniqueString(resourceGroup().id)), 24)]",
              "maxLength": 24,
              "minLength": 3,
              "metadata": {
                "description": "Name of the Key Vault"
              }
            },
            "tenantId": {
              "type": "string",
              "defaultValue": "[subscription().tenantId]",
              "metadata": {
                "description": "The tenant ID where the Key Vault is deployed"
              }
            },
            "enableVNet": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Deploy Key Vault into existing Virtual Network. Enabling this setting also requires subnetID"
              }
            },
            "subnetID": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Subnet ID for the Key Vault"
              }
            },
            "rbacPolicies": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "List of RBAC policies to assign to the Key Vault"
              }
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": [
                "4633458b-17de-408a-b874-0445c86b69e6",
                "a4417e6f-fecd-4de8-b567-7b0420556985"
              ],
              "metadata": {
                "description": "RBAC Role Assignments to apply to each RBAC policy"
              }
            },
            "newOrExisting": {
              "type": "string",
              "defaultValue": "new",
              "metadata": {
                "description": "Whether to create a new Key Vault or use an existing one."
              },
              "allowedValues": [
                "new",
                "existing"
              ]
            },
            "secretName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of Secret to add to Key Vault. Required when provided a secretValue."
              }
            },
            "secretValue": {
              "type": "securestring",
              "defaultValue": "",
              "metadata": {
                "description": "Value of Secret to add to Key Vault. The secretName parameter must also be provided when adding a secret."
              }
            },
            "enableSoftDelete": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Specifies whether soft delete should be enabled for the Key Vault."
              }
            },
            "softDeleteRetentionInDays": {
              "type": "int",
              "defaultValue": 7,
              "metadata": {
                "description": "The number of days to retain deleted data in the Key Vault."
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "standard",
              "metadata": {
                "description": "The SKU name of the Key Vault."
              },
              "allowedValues": [
                "standard",
                "premium"
              ]
            },
            "skuFamily": {
              "type": "string",
              "defaultValue": "A",
              "metadata": {
                "description": "The SKU family of the Key Vault."
              },
              "allowedValues": [
                "A",
                "B"
              ]
            },
            "createSecret": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[guid(parameters('name'), 'deploy')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "newOrExisting": {
                    "value": "[parameters('newOrExisting')]"
                  },
                  "enableSoftDelete": {
                    "value": "[parameters('enableSoftDelete')]"
                  },
                  "softDeleteRetentionInDays": {
                    "value": "[parameters('softDeleteRetentionInDays')]"
                  },
                  "skuFamily": {
                    "value": "[parameters('skuFamily')]"
                  },
                  "skuName": {
                    "value": "[parameters('skuName')]"
                  },
                  "tenantId": {
                    "value": "[parameters('tenantId')]"
                  },
                  "subnetID": {
                    "value": "[parameters('subnetID')]"
                  },
                  "enableVNet": {
                    "value": "[parameters('enableVNet')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "13959664894464648251"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Deployment Location"
                      }
                    },
                    "prefix": {
                      "type": "string",
                      "defaultValue": "kv",
                      "metadata": {
                        "description": "Prefix of Cosmos DB Resource Name"
                      }
                    },
                    "name": {
                      "type": "string",
                      "defaultValue": "[take(format('{0}-{1}', parameters('prefix'), uniqueString(resourceGroup().id)), 24)]",
                      "metadata": {
                        "description": "Name of the Key Vault"
                      }
                    },
                    "newOrExisting": {
                      "type": "string",
                      "defaultValue": "new",
                      "metadata": {
                        "description": "Whether to create a new Key Vault or use an existing one"
                      },
                      "allowedValues": [
                        "new",
                        "existing"
                      ]
                    },
                    "enableVNet": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enable VNet Service Endpoints for Key Vault"
                      }
                    },
                    "subnetID": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Subnet ID for the Key Vault"
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "defaultValue": "[subscription().tenantId]",
                      "metadata": {
                        "description": "The tenant ID where the Key Vault is deployed"
                      }
                    },
                    "enableSoftDelete": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies whether soft delete should be enabled for the Key Vault."
                      }
                    },
                    "softDeleteRetentionInDays": {
                      "type": "int",
                      "defaultValue": 7,
                      "metadata": {
                        "description": "The number of days to retain deleted data in the Key Vault."
                      }
                    },
                    "skuName": {
                      "type": "string",
                      "defaultValue": "standard",
                      "metadata": {
                        "description": "The SKU name of the Key Vault."
                      },
                      "allowedValues": [
                        "standard",
                        "premium"
                      ]
                    },
                    "skuFamily": {
                      "type": "string",
                      "defaultValue": "A",
                      "metadata": {
                        "description": "The SKU family of the Key Vault."
                      },
                      "allowedValues": [
                        "A",
                        "B"
                      ]
                    },
                    "enableRbacAuthorization": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies whether RBAC authorization should be enabled for the Key Vault."
                      }
                    }
                  },
                  "variables": {
                    "networkAcls": "[if(parameters('enableVNet'), createObject('defaultAction', 'Deny', 'virtualNetworkRules', createArray(createObject('action', 'Allow', 'id', parameters('subnetID')))), createObject())]"
                  },
                  "resources": [
                    {
                      "condition": "[equals(parameters('newOrExisting'), 'new')]",
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2022-11-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "enableSoftDelete": "[parameters('enableSoftDelete')]",
                        "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
                        "sku": {
                          "family": "[parameters('skuFamily')]",
                          "name": "[parameters('skuName')]"
                        },
                        "enableRbacAuthorization": "[parameters('enableRbacAuthorization')]",
                        "tenantId": "[parameters('tenantId')]",
                        "networkAcls": "[variables('networkAcls')]"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "metadata": {
                        "description": "Key Vault Id"
                      },
                      "value": "[if(equals(parameters('newOrExisting'), 'new'), resourceId('Microsoft.KeyVault/vaults', parameters('name')), resourceId('Microsoft.KeyVault/vaults', parameters('name')))]"
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Key Vault Name"
                      },
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "copy": {
                "name": "rbacRoleAssignments",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[guid(parameters('name'), parameters('roleAssignments')[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', guid(parameters('name'), 'deploy')), '2022-09-01').outputs.name.value]"
                  },
                  "rbacPolicies": {
                    "value": "[parameters('rbacPolicies')]"
                  },
                  "rbacRole": {
                    "value": "[parameters('roleAssignments')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "3117076575586483786"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "rbacPolicies": {
                      "type": "array"
                    },
                    "rbacRole": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "rbac_certs_reader",
                        "count": "[length(parameters('rbacPolicies'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
                      "name": "[guid(parameters('rbacRole'), parameters('rbacPolicies')[copyIndex()].objectId)]",
                      "properties": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('rbacRole'))]",
                        "principalId": "[parameters('rbacPolicies')[copyIndex()].objectId]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', guid(parameters('name'), 'deploy'))]"
              ]
            },
            {
              "condition": "[parameters('createSecret')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[guid(parameters('name'), 'secrets')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', guid(parameters('name'), 'deploy')), '2022-09-01').outputs.name.value]"
                  },
                  "secretName": {
                    "value": "[parameters('secretName')]"
                  },
                  "secretValue": {
                    "value": "[parameters('secretValue')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.16.2.56959",
                      "templateHash": "17826599313936370174"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the name of the key vault."
                      }
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "metadata": {
                        "description": "Key Vault Id"
                      },
                      "value": "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName'))]"
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Key Vault Name"
                      },
                      "value": "[parameters('secretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "metadata": {
                        "description": "Secret URI"
                      },
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2022-11-01').secretUri]"
                    },
                    "secretUriWithVersion": {
                      "type": "string",
                      "metadata": {
                        "description": "Secret URI with version"
                      },
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2022-11-01').secretUriWithVersion]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', guid(parameters('name'), 'deploy'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "metadata": {
                "description": "Key Vault Id"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', guid(parameters('name'), 'deploy')), '2022-09-01').outputs.id.value]"
            },
            "name": {
              "type": "string",
              "maxLength": 24,
              "minLength": 3,
              "metadata": {
                "description": "Key Vault Name"
              },
              "value": "[parameters('name')]"
            },
            "secretId": {
              "type": "string",
              "metadata": {
                "description": "Key Vault Seceret Id"
              },
              "value": "[if(parameters('createSecret'), reference(resourceId('Microsoft.Resources/deployments', guid(parameters('name'), 'secrets')), '2022-09-01').outputs.id.value, '')]"
            },
            "secretName": {
              "type": "string",
              "metadata": {
                "description": "Key Vault Secert Name"
              },
              "value": "[parameters('secretName')]"
            },
            "secretUri": {
              "type": "string",
              "metadata": {
                "description": "Secret URI"
              },
              "value": "[if(parameters('createSecret'), reference(resourceId('Microsoft.Resources/deployments', guid(parameters('name'), 'secrets')), '2022-09-01').outputs.secretUri.value, '')]"
            },
            "secretUriWithVersion": {
              "type": "string",
              "metadata": {
                "description": "Secret URI with version"
              },
              "value": "[if(parameters('createSecret'), reference(resourceId('Microsoft.Resources/deployments', guid(parameters('name'), 'secrets')), '2022-09-01').outputs.secretUriWithVersion.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'mystorageaccount')]"
      ]
    }
  ]
}